{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 81bf942b6ee61b1f60c5","webpack:///external \"d3\"","webpack:///./src/model/Column.ts","webpack:///./src/utils.ts","webpack:///./src/model/ValueColumn.ts","webpack:///./src/model/NumberColumn.ts","webpack:///./src/model/StringColumn.ts","webpack:///./src/renderer.ts","webpack:///./src/provider/ADataProvider.ts","webpack:///./src/model/CompositeColumn.ts","webpack:///./src/model/CompositeNumberColumn.ts","webpack:///./src/model/index.ts","webpack:///./src/model/CategoricalColumn.ts","webpack:///./src/model/RankColumn.ts","webpack:///./src/model/Ranking.ts","webpack:///./src/model/ScriptColumn.ts","webpack:///./src/model/StackColumn.ts","webpack:///./src/ui/ABodyRenderer.ts","webpack:///./src/model/SelectionColumn.ts","webpack:///./src/lineup.ts","webpack:///./src/model/LinkColumn.ts","webpack:///./src/model/MaxColumn.ts","webpack:///./src/model/MeanColumn.ts","webpack:///./src/model/MinColumn.ts","webpack:///./src/model/NestedColumn.ts","webpack:///./src/ui/ADOMBodyRenderer.ts","webpack:///./src/ui/HeaderRenderer.ts","webpack:///./src/ui/index.ts","webpack:///./src/ui_dialogs.ts","webpack:///./src/style.scss","webpack:///./src/provider/ACommonDataProvider.ts","webpack:///./src/provider/LocalDataProvider.ts","webpack:///./src/mappingeditor.ts","webpack:///./src/model/AnnotateColumn.ts","webpack:///./src/model/BooleanColumn.ts","webpack:///./src/model/CategoricalNumberColumn.ts","webpack:///./src/model/DummyColumn.ts","webpack:///./src/model/MultiLevelCompositeColumn.ts","webpack:///./src/ui/CanvasBodyRenderer.ts","webpack:///./src/ui/HTMLBodyRenderer.ts","webpack:///./src/ui/PoolRenderer.ts","webpack:///./src/ui/SVGBodyRenderer.ts","webpack:///./src/provider/index.ts","webpack:///./src/provider/RemoteDataProvider.ts","webpack:///./src/index.ts"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA,+C;;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC2B;AAC3B;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,0CAA0C,eAAe,EAAE,WAAW;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA,oCAAoC,gBAAgB;AACpD,iCAAiC,aAAa;AAC9C;AACA,gBAAgB,sCAAsC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACpXA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC6C;AAC7C;AACA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA,iCAAiC,mBAAmB;AACpD,kCAAkC,qBAAqB;AACvD;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wCAAwC,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wHAA6D,yBAAyB,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,iCAAiC,EAAE;AACrF;AACA;AACA,kDAAkD,6BAA6B,EAAE;AACjF;AACA;AACA,kDAAkD,6BAA6B,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,2BAA2B,YAAY;AACvC,4BAA4B,aAAa;AACzC,gDAAgD,qDAAqD,EAAE;AACvG,iDAAiD,mDAAmD,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;;;;;;;;AC5bA;AAAA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,aAAa,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;AC/BA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oBAAoB,EAAE;AAC3D;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD,8BAA8B,iBAAiB;AAC/C,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,iCAAiC,kBAAkB;AACnD,+BAA+B,kEAAkE,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,6BAA6B;AACvE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnwDAAwD;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,qCAAqC,UAAU,sDAAsD,EAAE;;;;;;;;;AChZvG;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACxGA;AAAA;AACA;AACA;AACA;AACkC;AACpB;AACd;AACA;AACA;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAA0B;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D,iCAAiC,iCAAiC,kBAAkB,GAAG;AACvF;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,+GAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,+GAA+G;AAC/G;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,yCAAyC,EAAE;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sFAAsF,6EAA6E,EAAE;AACrK;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,4EAA4E,EAAE;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjkJAAmF,+BAA+B,EAAE;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAA0B;AAC1B;AACA,iBAAiB;AACjB,8GAA+C;AAC/C;AACA;AACA;AACA,iBAAiB;AACjB,+GAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA,mDAAmD,4BAA4B,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,2DAA2D,oDAAoD,EAAE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,wBAAwB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,sHAAsH,4BAA4B,EAAE;AACpJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,wHAAwH,4BAA4B,EAAE;AACtJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA,2EAA2E,wBAAwB,EAAE;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,wBAAwB,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/nBA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACwH;AACxH;AACA;AAC+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,mGAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mMAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+BAA+B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,kDAAkD,gCAAgC,EAAE;AACpF;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gCAAgC;AACnF,wDAAwD,4DAA4D;AACpH;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,0EAA0E,gCAAgC,EAAE;AAC5G,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gCAAgC,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,wFAAgC,EAAE;AACnF;AACA;AACA;AACA,+CAA+C,mCAAmC,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,+BAA+B,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,wFAAgC,EAAE;AAC3F;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,6CAA6C,mCAAmC,EAAE;AAClF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iDAAiD,wFAAgC,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,+BAA+B,EAAE;AACzE,mBAAmB;AACnB;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,+BAA+B,EAAE;AACnH,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,6CAA6C,wBAAwB,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,yFAA0B;AAC5D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,+BAA+B,EAAE;AAChG;AACA;AACA;AACA;AACA,iDAAiD,uBAAuB,EAAE;AAC1E;AACA;AACA,iDAAiD,4CAA4C,EAAE;AAC/F,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrkBA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,mCAAmC,EAAE;AAClF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,oCAAoC,gBAAgB;AACpD,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,sDAAsD,0BAA0B,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,uBAAuB,EAAE;AAC1E;AACA;AACA,kDAAkD,6BAA6B,EAAE;AACjF;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA,gDAAgD,8BAA8B,EAAE;AAChF;AACA;AACA,CAAC;AACD;;;;;;;;;;;AC5IA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACiB;AACjB;AACsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9EA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACyC;AACJ;AACwD;AAC/D;AACc;AACN;AACA;AACC;AACA;AACK;AACH;AACA;AACD;AACxC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mDAAmD,aAAa;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,mBAAmB;AAC9C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChGA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oBAAoB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,4DAA4D,EAAE;AACnH,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,4DAA4D,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,4CAA4C,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oCAAoC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;AC3OA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,gBAAgB;AAC3C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;AC9BA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACyB;AACzB;AAC2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mCAAmC,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,0BAA0B,EAAE;AAC/E;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,6DAA6D,wCAAwC,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD,iCAAiC,aAAa;AAC9C,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA,yBAAyB;AACzB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,+BAA+B,6BAA6B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,4CAA4C,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,cAAc,EAAE;AACvD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,0EAA0E,gCAAgC,EAAE;AAC5G;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,uBAAuB,EAAE;AACxE;AACA;AACA,gDAAgD,6BAA6B,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACtTA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,kBAAkB;AAC7C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,+BAA+B,EAAE;AACnH;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,uDAAuD,8BAA8B,EAAE;AACvF;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;ACvEA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,oBAAoB;AAC/C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD,iCAAiC,aAAa;AAC9C;AACA,sKAAoH,sBAAsB,EAAE;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sCAAsC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gDAAgD,yBAAyB,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,cAAc,EAAE;AAChE;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA,4CAA4C,cAAc,EAAE;AAC5D,4CAA4C,cAAc,EAAE;AAC5D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wDAAwD,0DAA0D,EAAE;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA,mDAAmD,UAAU,0CAA0C,EAAE,EAAE;AAC3G;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3MA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AAC+C;AACb;AAClC;AAC6B;AAC7B;AACwC;AACxC;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0DAA0D,EAAE;AACjG,yCAAyC,0DAA0D,EAAE;AACrG;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8BAA8B;AAC9D;AACA,uFAAsD,4BAA4B,EAAE;AACpF;AACA,kEAAkE,oCAAoC,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,kCAAkC,EAAE;AACpF;AACA;AACA;AACA;AACA,uDAAuD,sBAAsB,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,sCAAsC,EAAE;AACpH;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;;ACrLA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACoB;AACpB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,aAAa;AACxC,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;;;;;;;;;;;;;ACzDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACwC;AAC2C;AAChD;AACgB;AACL;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,yBAAyB;AACzB;AACA;AACA,8FAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wKAAoE;AACpE;AACA;AACA;AACA;AACA,SAAS;AACT,kPAAuH;AACvH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qCAAqC;AAC5E,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,yCAAyC,mBAAmB,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,kCAAkC,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,yBAAyB,EAAE,wBAAwB,cAAc,EAAE;AACvH;AACA,2FAA2F,wCAAwC,EAAE;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mBAAmB,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;AC3RA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;;;;;;;;;AC5FA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACuB;AACvB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,eAAe;AAC1C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAAmD,+BAA+B,EAAE;AACpF;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,uDAAuD,8BAA8B,EAAE;AACvF;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;AC3DA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACyB;AACzB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,gBAAgB;AAC3C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAAoD,+BAA+B,EAAE;AACrF;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,uDAAuD,8BAA8B,EAAE;AACvF;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACxCA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACuB;AACvB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,eAAe;AAC1C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAAmD,+BAA+B,EAAE;AACpF;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,uDAAuD,8BAA8B,EAAE;AACvF;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;ACxDA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,2BAA2B,kBAAkB;AAC7C,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,+BAA+B,EAAE,SAAS;AACzF;AACA;AACA,+CAA+C,+BAA+B,EAAE,SAAS;AACzF;AACA;AACA,CAAC;AACD;;;;;;;;;;;;AC9CA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACkB;AACK;AACvB;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,aAAa,EAAE;AAChG;AACA;AACA,sDAAsD,qBAAqB,EAAE;AAC7E;AACA;AACA;AACA,6EAA6E,qBAAqB,EAAE;AACpG;AACA;AACA,+FAA+F,gBAAgB,EAAE;AACjH;AACA,oEAAoE,kCAAkC,EAAE;AACxG;AACA;AACA,gDAAgD,iCAAiC,EAAE;AACnF,gDAAgD,kCAAkC,EAAE;AACpF,2CAA2C,2EAA0C,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,uGAAuG,qCAAqC,EAAE;AAC9I;AACA,aAAa;AACb;AACA,gDAAgD,6CAA6C,EAAE;AAC/F,uDAAuD,UAAU,EAAE;AACnE,mDAAmD,iCAAiC,EAAE;AACtF;AACA;AACA,6EAA6E,8BAA8B,EAAE;AAC7G;AACA;AACA,+DAA+D,8CAA8C,EAAE;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,2JAA0H,sCAAsC,EAAE;AAClK;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gIAAgI,uCAAuC,qCAAqC,EAAE,EAAE,EAAE;AAClN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,qHAAsD,uCAAuC,EAAE;AAC/F;AACA;AACA;AACA;AACA,8CAA8C,0CAA0C,EAAE;AAC1F,+GAAgD,oCAAoC,EAAE;AACtF;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA,kHAAmD,oCAAoC,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,UAAU,iEAAiE,EAAE,EAAE;AACvI;AACA;AACA,2DAA2D,gDAAgD;AAC3G,qGAAqG,yDAAyD,EAAE;AAChK;AACA;AACA,wDAAwD,mCAAmC,EAAE;AAC7F,0DAA0D;AAC1D;AACA;AACA;AACA,aAAa,EAAE,EAAE,uBAAuB,uBAAuB,EAAE;AACjE,SAAS;AACT;AACA;AACA;AACA,SAAS,iCAAiC,4CAA4C,EAAE;AACxF,4CAA4C,6CAA6C,EAAE;AAC3F,qDAAqD,qBAAqB,EAAE;AAC5E;AACA,8BAA8B,gEAAgE,EAAE;AAChG,8BAA8B,gEAAgE;AAC9F,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;;;;;ACzMA;AAAA;AACA;AACA;AACA;AACgD;AAChD;AACA;AACA;AAC6B;AACU;AACT;AAC9B;AACqD;AACrD;AACA;AACA;AAC6H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4FAAoC,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,2GAAmD,EAAE;AAC3F;AACA,aAAa;AACb,sCAAsC,yIAAgD,EAAE;AACxF;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8GAA+C,uCAAuC,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,2GAAmD,EAAE;AAC/F;AACA;AACA;AACA;AACA,yCAAyC,mBAAmB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,0CAA0C,yIAAgD,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,kCAAkC,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+CAA+C,cAAc,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,2FAAmC,EAAE;AACvF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mCAAmC,yFAAgC,EAAE;AACrE;AACA;AACA,SAAS;AACT;AACA,mCAAmC,2FAAkC,EAAE;AACvE;AACA;AACA,SAAS;AACT;AACA,mCAAmC,kDAAkD,EAAE;AACvF;AACA;AACA,SAAS;AACT;AACA,mCAAmC,oCAAoC,EAAE;AACzE;AACA;AACA,SAAS;AACT;AACA,mCAAmC,yFAAiC,EAAE;AACtE;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,qDAAqD,2BAA2B,EAAE;AAClF,sDAAsD,0BAA0B,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mCAAmC,qHAA8B,EAAE;AACnE;AACA,kDAAkD,0BAA0B,EAAE;AAC9E,gDAAgD,yBAAyB,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+CAA+C,kCAAkC,EAAE;AACnF,iDAAiD,8DAA8D,EAAE;AACjH;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD,+BAA+B,kBAAkB;AACjD;AACA,mFAAmF,aAAa,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,+DAA+D,EAAE;AACrG,mCAAmC,gCAAgC,EAAE;AACrE,8CAA8C,gBAAgB;AAC9D,SAAS;AACT;AACA,mCAAmC,0NAA0N,EAAE;AAC/P,iCAAiC,yBAAyB,EAAE;AAC5D,qCAAqC,aAAa;AAClD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,4DAA4D,gBAAgB,EAAE;AAC9E,sCAAsC,qHAA8B,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,cAAc,EAAE;AAC3E;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC,sTAAmF,EAAE;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,0CAA0C,wHAA+B,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,wBAAwB,EAAE;AAC1E,iDAAiD,6BAA6B,EAAE;AAChF,+CAA+C,8BAA8B,EAAE;AAC/E,kDAAkD,sBAAsB,EAAE;AAC1E,8DAA8D,2BAA2B;AACzF,yBAAyB;AACzB,iDAAiD,2BAA2B,EAAE;AAC9E,sDAAsD,cAAc;AACpE,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,0CAA0C,0FAAkC,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,4BAA4B,EAAE;AACjF,oDAAoD,6BAA6B,EAAE;AACnF,+CAA+C,8BAA8B,EAAE;AAC/E,kDAAkD,sBAAsB;AACxE,yBAAyB;AACzB,oDAAoD,gCAAgC,EAAE;AACtF,oDAAoD,YAAY;AAChE,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;;AChgBA;AAAA;AACA;AACA;AAC0E;AACxC;AACD;AACjC;AACA;AACA;AACA;AACA,0BAA0B,cAAc;AACxC,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiB;AACjB;AAC+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gEAAgE;AAC5F;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA,gCAAgC,SAAS,mDAAmD,uCAAuC,EAAE;AACrI;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,UAAU,mCAAmC,EAAE,EAAE;AACxI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB,EAAE;AAChD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,qCAAqC,gCAAgC,EAAE;AACvE,iDAAiD,oBAAoB,EAAE;AACvE,gDAAgD,oBAAoB,EAAE;AACtE;AACA,uEAAuE,+BAA+B,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,0CAA0C,oCAAoC,EAAE;AAChF,8DAA8D,iBAAiB,EAAE;AACjF;AACA,KAAK;AACL;AACA,qDAAqD,iBAAiB,EAAE;AACxE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,KAAK;AACL;AACA;AACA;AACA,2EAA2E,gBAAgB,EAAE;AAC7F;AACA;AACA;AACA,KAAK;AACL;AACA,sDAAsD,gFAAgF,EAAE;AACxI,kEAAkE,mCAAmC,EAAE;AACvG;AACA;AACA;AACA;AACA,sDAAsD,iFAAiF,EAAE;AACzI;AACA;AACA,2CAA2C,qCAAqC,EAAE;AAClF;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qCAAqC,2BAA2B,EAAE;AAClE;AACA;AACA,KAAK;AACL;AACA,4CAA4C,oBAAoB,EAAE,oBAAoB,cAAc,EAAE;AACtgNAAgN;AAChN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,6BAA6B,gBAAgB,EAAE;AAC/C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,wGAAwG,gBAAgB,EAAE;AAC1H,2EAA2E,gBAAgB,EAAE;AAC7F;AACA,sDAAsD,gFAAgF,EAAE;AACxI,uEAAuE,8BAA8B,EAAE;AACvG,kEAAkE,mCAAmC,EAAE;AACvG;AACA;AACA;AACA;AACA,uDAAuD,iFAAiF,EAAE;AAC1I;AACA;AACA,2CAA2C,qCAAqC,EAAE;AAClF;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kDAAkD,UAAU,EAAE;AAC9D,KAAK;AACL;AACA,4CAA4C,oBAAoB,EAAE,oBAAoB,cAAc,EAAE;AACtG;AACA;AACA;AACA;AACA,mDAAmD,sBAAsB,EAAE;AAC3E;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACngBA,yC;;;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,yBAAyB,EAAE;AAC5E;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,4CAA4C,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA,0FAA0F,2BAA2B,EAAE;AACvH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;ACjIA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,2BAA2B;AACpE;AACA;AACA,gCAAgC,cAAc,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAgD,YAAY,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO,uBAAuB;AAC5C;AACA;AACA;AACA,uCAAuC,sBAAsB,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,+BAA+B,sBAAsB,eAAe,EAAE,EAAE;AACxE;AACA,+DAA+D,YAAY,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,UAAU,eAAe,EAAE,EAAE;AACjF;AACA;AACA,qEAAqE,uBAAuB,EAAE;AAC9F;AACA,qDAAqD,uCAAuC,6BAA6B,EAAE,EAAE,EAAE;AAC/H;AACA;AACA;AACA,iDAAiD,mCAAmC,EAAE;AACtF;AACA;AACA,qCAAqC,mDAAmD,EAAE;AAC1F;AACA,wDAAwD,YAAY,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA,6CAA6C,0BAA0B,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oCAAoC;AAChF;AACA;AACA,SAAS,EAAE,EAAE,EAAE,EAAE;AACjB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,gCAAgC,sDAAsD;AACtF;AACA,mCAAmC,wFAAwF,EAAE;AAC7H,kCAAkC,mGAAmG;AACrI;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,0CAA0C,EAAE;AACrG;AACA;AACA;AACA;AACA;AACA,2DAA2D,6CAA6C,EAAE;AAC1G,uGAAsE,0CAA0C,EAAE;AAClH;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACvNA;AAAA;AACA;AACA;AAC2D;AAC3C;AACsC;AACtD;AACA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB,EAAE;AAClD;AACA,4BAA4B,kBAAkB,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,q2EAAq2E,yUAAyU,8kBAA8kB;AAC5vG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0CAA0C,EAAE;AAC9E;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,kCAAkC,0CAA0C,EAAE;AAC9E;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU,sBAAsB,EAAE,EAAE;AAChG;AACA;AACA;AACA,oDAAoD,kBAAkB,EAAE;AACxE;AACA;AACA,+DAA+D,YAAY,EAAE;AAC7E,8DAA8D,YAAY,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,kCAAkC,0BAA0B,EAAE;AAC9D,kCAAkC,uBAAuB;AACzD,aAAa;AACb,0EAA0E,0BAA0B,EAAE;AACtG,mEAAmE,uBAAuB,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uCAAuC,mBAAmB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,qEAAqE;AACzH;AACA;AACA,oDAAoD,uEAAuE,EAAE;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;;;;;;;;;AChTA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;;;;;;;;;AC/DA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC1EA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,mFAAmF,EAAE;AAChJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,4DAA4D,EAAE;AACnH,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,8BAA8B,uBAAuB,QAAQ,EAAE;AAC9H;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,+DAA+D,8BAA8B,uBAAuB,QAAQ,EAAE;AAC9H;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;;;;;;ACnLA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;AACD;;;;;;;;;;AC5BA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;;;;;;;;;;;AClGA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC6C;AACZ;AACjC;AACqC;AACrC;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,0IAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,mEAAiC,EAAE;AACrF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wDAAwD,qCAAqC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,qBAAqB,oDAAoD,EAAE;AACxF,SAAS;AACT;AACA;AACA;AACA,wDAAwD,UAAU,iEAAiE,EAAE,EAAE;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,mEAAmE;AACnE;AACA;AACA;AACA,aAAa,EAAE,EAAE,uBAAuB,uBAAuB,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,yCAAyC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,UAAU,oEAAoE,EAAE,EAAE;AACzI,wDAAwD,UAAU,0CAA0C,EAAE,EAAE;AAChH,SAAS;AACT;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,0FAA0F,uBAAuB,EAAE;AACnH;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9RA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wCAAwC,oCAAoC,EAAE;AAC9E,uCAAuC,oCAAoC;AAC3E,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,2FAA2F,8BAA8B,EAAE;AAC3H,KAAK;AACL;AACA,mCAAmC,iEAAiE,EAAE;AACtG;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACpDA;AAAA;AACA;AACA;AAC0C;AAC1B;AACiB;AACjC;AACwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,yBAAyB,EAAE;AAC1H;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,kEAAkE,eAAe,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,kEAAkE,eAAe,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,qBAAqB,EAAE,oBAAoB,eAAe,EAAE;AACvH;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,gFAAgF,gBAAgB,EAAE;AAClG,6CAA6C,sDAAsD,EAAE;AACrG;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iCAAiC,yGAAyB;AAC1D,SAAS;AACT,mDAAmD,gBAAgB,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACvKA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACuB;AACH;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,4CAA4C,6BAA6B,EAAE;AAC3E,2CAA2C,6BAA6B;AACxE,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uDAAuD,8CAA8C,EAAE;AACvG,SAAS;AACT;AACA,uCAAuC,sEAAsE,EAAE;AAC/G;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wBAAwB,aAAa,EAAE;AAChD;AACA,sCAAsC,mDAAmD,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA,iCAAiC,sCAAsC,EAAE;AACzE;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,0DAA0D,cAAc,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,gLAAuH,sCAAsC,EAAE;AAC/J;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;ACrGA;AAAA;AACA;AACA;AACwE;AACN;AACb;;;;;;;;;;ACLrD;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,oBAAoB,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,+BAA+B,YAAY,EAAE,EAAE,EAAE;AACxG;AACA;AACA;AACA;AACA,yCAAyC,iCAAiC,EAAE;AAC5E;AACA,4CAA4C,wBAAwB,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,UAAU,qCAAqC,EAAE,EAAE;AACpH,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,mCAAmC,EAAE;AACxF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;AChGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA","file":"LineUpJS.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LineUpJS\"] = factory(require(\"d3\"));\n\telse\n\t\troot[\"LineUpJS\"] = factory(root[\"d3\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 44);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 81bf942b6ee61b1f60c5","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"d3\"\n// module id = 0\n// module chunks = 0 1","/**\r\n * Created by Samuel Gratzl on 06.08.2015.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport { AEventDispatcher } from '../utils';\r\n/**\r\n * converts a given id to css compatible one\r\n * @param id\r\n * @return {string|void}\r\n */\r\nexport function fixCSS(id) {\r\n    return id.replace(/[\\s!#$%&'()*+,.\\/:;<=>?@\\[\\\\\\]\\^`{|}~]/g, '_'); //replace non css stuff to _\r\n}\r\n/**\r\n * a column in LineUp\r\n */\r\nvar Column = (function (_super) {\r\n    __extends(Column, _super);\r\n    function Column(id, desc) {\r\n        var _this = _super.call(this) || this;\r\n        _this.desc = desc;\r\n        /**\r\n         * width of the column\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        _this.width = 100;\r\n        /**\r\n         * parent column of this column, set when added to a ranking or combined column\r\n         * @type {any}\r\n         */\r\n        _this.parent = null;\r\n        /**\r\n         * whether this column is compressed i.e. just shown in a minimal version\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.compressed = false;\r\n        _this.uid = fixCSS(id);\r\n        _this.cssClass = _this.desc.cssClass || '';\r\n        _this.metadata = {\r\n            label: _this.desc.label || _this.id,\r\n            description: _this.desc.description || '',\r\n            color: _this.desc.color || (_this.cssClass !== '' ? null : Column.DEFAULT_COLOR)\r\n        };\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Column.prototype, \"id\", {\r\n        get: function () {\r\n            return this.uid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Column.prototype.assignNewId = function (idGenerator) {\r\n        this.uid = fixCSS(idGenerator());\r\n    };\r\n    Object.defineProperty(Column.prototype, \"label\", {\r\n        get: function () {\r\n            return this.metadata.label;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Column.prototype, \"description\", {\r\n        get: function () {\r\n            return this.metadata.description;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Column.prototype, \"color\", {\r\n        get: function () {\r\n            return this.metadata.color;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Column.prototype, \"headerCssClass\", {\r\n        /**\r\n         * return the css class to use for the header\r\n         * @return {string}\r\n         */\r\n        get: function () {\r\n            return this.desc.type;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Column.prototype, \"fqid\", {\r\n        /**\r\n         * returns the fully qualified id i.e. path the parent\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return this.parent ? this.parent.fqid + '_' + this.id : this.id;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Column.prototype, \"fqpath\", {\r\n        get: function () {\r\n            return this.parent ? this.parent.fqpath + '@' + this.parent.indexOf(this) : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * fires:\r\n     *  * widthChanged\r\n     *  * filterChanged\r\n     *  * labelChanged\r\n     *  * metaDataChanged\r\n     *  * compressChanged\r\n     *  * addColumn, removeColumn ... for composite pattern\r\n     *  * dirty, dirtyHeader, dirtyValues\r\n     * @returns {string[]}\r\n     */\r\n    Column.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat([Column.EVENT_WIDTH_CHANGED, Column.EVENT_FILTER_CHANGED,\r\n            Column.EVENT_LABEL_CHANGED, Column.EVENT_METADATA_CHANGED, Column.EVENT_COMPRESS_CHANGED,\r\n            Column.EVENT_ADD_COLUMN, Column.EVENT_REMOVE_COLUMN,\r\n            Column.EVENT_DIRTY, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES]);\r\n    };\r\n    Column.prototype.getWidth = function () {\r\n        return this.width;\r\n    };\r\n    /**\r\n     * a column is hidden if it has no width\r\n     * @return {boolean}\r\n     */\r\n    Column.prototype.isHidden = function () {\r\n        return this.width <= 0;\r\n    };\r\n    Column.prototype.hide = function () {\r\n        return this.setWidth(0);\r\n    };\r\n    Column.prototype.setCompressed = function (value) {\r\n        if (this.compressed === value) {\r\n            return;\r\n        }\r\n        this.fire([Column.EVENT_COMPRESS_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.compressed, this.compressed = value);\r\n    };\r\n    Column.prototype.getCompressed = function () {\r\n        return this.compressed;\r\n    };\r\n    /**\r\n     * visitor pattern for flattening the columns\r\n     * @param r the result array\r\n     * @param offset left offset\r\n     * @param levelsToGo how many levels down\r\n     * @param padding padding between columns\r\n     * @returns {number} the used width by this column\r\n     */\r\n    Column.prototype.flatten = function (r, offset, levelsToGo, padding) {\r\n        if (levelsToGo === void 0) { levelsToGo = 0; }\r\n        if (padding === void 0) { padding = 0; }\r\n        var w = this.compressed ? Column.COMPRESSED_WIDTH : this.getWidth();\r\n        r.push({ col: this, offset: offset, width: w });\r\n        return w;\r\n    };\r\n    Column.prototype.setWidth = function (value) {\r\n        if (this.width === value) {\r\n            return;\r\n        }\r\n        this.fire([Column.EVENT_WIDTH_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.width, this.width = value);\r\n    };\r\n    Column.prototype.setWidthImpl = function (value) {\r\n        this.width = value;\r\n    };\r\n    Column.prototype.setMetaData = function (value) {\r\n        if (value.label === this.label && this.color === value.color && this.description === value.description) {\r\n            return;\r\n        }\r\n        var events = this.color === value.color ?\r\n            [Column.EVENT_LABEL_CHANGED, Column.EVENT_METADATA_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY] :\r\n            [Column.EVENT_LABEL_CHANGED, Column.EVENT_METADATA_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY];\r\n        var bak = this.getMetaData();\r\n        //copy to avoid reference\r\n        this.metadata = {\r\n            label: value.label,\r\n            color: value.color,\r\n            description: value.description\r\n        };\r\n        this.fire(events, bak, this.getMetaData());\r\n    };\r\n    Column.prototype.getMetaData = function () {\r\n        return {\r\n            label: this.label,\r\n            color: this.color,\r\n            description: this.description\r\n        };\r\n    };\r\n    /**\r\n     * triggers that the ranking is sorted by this column\r\n     * @param ascending\r\n     * @returns {any}\r\n     */\r\n    Column.prototype.sortByMe = function (ascending) {\r\n        if (ascending === void 0) { ascending = false; }\r\n        var r = this.findMyRanker();\r\n        if (r) {\r\n            return r.sortBy(this, ascending);\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * toggles the sorting order of this column in the ranking\r\n     * @returns {any}\r\n     */\r\n    Column.prototype.toggleMySorting = function () {\r\n        var r = this.findMyRanker();\r\n        if (r) {\r\n            return r.toggleSorting(this);\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * removes the column from the ranking\r\n     * @returns {boolean}\r\n     */\r\n    Column.prototype.removeMe = function () {\r\n        if (this.parent) {\r\n            return this.parent.remove(this);\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * inserts the given column after itself\r\n     * @param col\r\n     * @returns {boolean}\r\n     */\r\n    Column.prototype.insertAfterMe = function (col) {\r\n        if (this.parent) {\r\n            return this.parent.insertAfter(col, this) != null;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * finds the underlying ranking column\r\n     * @returns {Ranking}\r\n     */\r\n    Column.prototype.findMyRanker = function () {\r\n        if (this.parent) {\r\n            return this.parent.findMyRanker();\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * dumps this column to JSON compatible format\r\n     * @param toDescRef\r\n     * @returns {any}\r\n     */\r\n    Column.prototype.dump = function (toDescRef) {\r\n        var r = {\r\n            id: this.id,\r\n            desc: toDescRef(this.desc),\r\n            width: this.width,\r\n            compressed: this.compressed\r\n        };\r\n        if (this.label !== (this.desc.label || this.id)) {\r\n            r.label = this.label;\r\n        }\r\n        if (this.color !== (this.desc.color || Column.DEFAULT_COLOR) && this.color) {\r\n            r.color = this.color;\r\n        }\r\n        return r;\r\n    };\r\n    /**\r\n     * restore the column content from a dump\r\n     * @param dump\r\n     * @param factory\r\n     */\r\n    Column.prototype.restore = function (dump, factory) {\r\n        this.width = dump.width || this.width;\r\n        this.metadata = {\r\n            label: dump.label || this.label,\r\n            color: dump.color || this.color,\r\n            description: this.description\r\n        };\r\n        this.compressed = dump.compressed === true;\r\n    };\r\n    /**\r\n     * return the label of a given row for the current column\r\n     * @param row\r\n     * @param index\r\n     * @return {string}\r\n     */\r\n    Column.prototype.getLabel = function (row, index) {\r\n        return '' + this.getValue(row, index);\r\n    };\r\n    /**\r\n     * return the value of a given row for the current column\r\n     * @param row\r\n     * @param index\r\n     */\r\n    Column.prototype.getValue = function (row, index) {\r\n        return ''; //no value\r\n    };\r\n    /**\r\n     * compare function used to determine the order according to the values of the current column\r\n     * @param a first element\r\n     * @param b second element\r\n     * @param aIndex index of the first element\r\n     * @param bIndex index of the second element\r\n     * @return {number}\r\n     */\r\n    Column.prototype.compare = function (a, b, aIndex, bIndex) {\r\n        return 0; //can't compare\r\n    };\r\n    /**\r\n     * flag whether any filter is applied\r\n     * @return {boolean}\r\n     */\r\n    Column.prototype.isFiltered = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * predicate whether the current row should be included\r\n     * @param row\r\n     * @param index the row index\r\n     * @return {boolean}\r\n     */\r\n    Column.prototype.filter = function (row, index) {\r\n        return row !== null;\r\n    };\r\n    /**\r\n     * determines the renderer type that should be used to render this column. By default the same type as the column itself\r\n     * @return {string}\r\n     */\r\n    Column.prototype.rendererType = function () {\r\n        return this.desc.type;\r\n    };\r\n    /**\r\n     * describe the column if it is a sorting criteria\r\n     * @param toId helper to convert a description to an id\r\n     * @return {string} json compatible\r\n     */\r\n    Column.prototype.toSortingDesc = function (toId) {\r\n        return toId(this.desc);\r\n    };\r\n    return Column;\r\n}(AEventDispatcher));\r\nexport default Column;\r\n/**\r\n * default color that should be used\r\n * @type {string}\r\n */\r\nColumn.DEFAULT_COLOR = '#C1C1C1';\r\n/**\r\n * magic variable for showing all columns\r\n * @type {number}\r\n */\r\nColumn.FLAT_ALL_COLUMNS = -1;\r\n/**\r\n * width of a compressed column\r\n * @type {number}\r\n */\r\nColumn.COMPRESSED_WIDTH = 16;\r\nColumn.EVENT_WIDTH_CHANGED = 'widthChanged';\r\nColumn.EVENT_FILTER_CHANGED = 'filterChanged';\r\nColumn.EVENT_LABEL_CHANGED = 'labelChanged';\r\nColumn.EVENT_METADATA_CHANGED = 'metaDataChanged';\r\nColumn.EVENT_COMPRESS_CHANGED = 'compressChanged';\r\nColumn.EVENT_ADD_COLUMN = 'addColumn';\r\nColumn.EVENT_REMOVE_COLUMN = 'removeColumn';\r\nColumn.EVENT_DIRTY = 'dirty';\r\nColumn.EVENT_DIRTY_HEADER = 'dirtyHeader';\r\nColumn.EVENT_DIRTY_VALUES = 'dirtyValues';\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/Column.ts\n// module id = 1\n// module chunks = 0 1","/**\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport { dispatch, select, event as d3event } from 'd3';\r\n/**\r\n * create a delayed call, can be called multiple times but only the last one at most delayed by timeToDelay will be executed\r\n * @param callback the callback to call\r\n * @param timeToDelay delay the call in milliseconds\r\n * @param thisCallback this argument of the callback\r\n * @return {function(...[any]): undefined} a function that can be called with the same interface as the callback but delayed\r\n */\r\nexport function delayedCall(callback, timeToDelay, thisCallback) {\r\n    if (timeToDelay === void 0) { timeToDelay = 100; }\r\n    if (thisCallback === void 0) { thisCallback = this; }\r\n    var tm = -1;\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i - 0] = arguments[_i];\r\n        }\r\n        if (tm >= 0) {\r\n            clearTimeout(tm);\r\n            tm = -1;\r\n        }\r\n        args.unshift(thisCallback === null ? this : thisCallback);\r\n        tm = setTimeout(callback.bind.apply(callback, args), timeToDelay);\r\n    };\r\n}\r\n/**\r\n * base class for event dispatching using d3 event mechanism\r\n */\r\nexport var AEventDispatcher = (function () {\r\n    function AEventDispatcher() {\r\n        this.listeners = dispatch.apply(void 0, this.createEventList());\r\n        var that = this;\r\n        this.forwarder = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i - 0] = arguments[_i];\r\n            }\r\n            that.fire.apply(that, [this.type].concat(args));\r\n        };\r\n    }\r\n    AEventDispatcher.prototype.on = function (type, listener) {\r\n        var _this = this;\r\n        if (arguments.length > 1) {\r\n            if (Array.isArray(type)) {\r\n                type.forEach(function (d) { return _this.listeners.on(d, listener); });\r\n            }\r\n            else {\r\n                this.listeners.on(type, listener);\r\n            }\r\n            return this;\r\n        }\r\n        return this.listeners.on(type);\r\n    };\r\n    /**\r\n     * return the list of events to be able to dispatch\r\n     * @return {Array}\r\n     */\r\n    AEventDispatcher.prototype.createEventList = function () {\r\n        return [];\r\n    };\r\n    AEventDispatcher.prototype.fire = function (type) {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var fireImpl = function (t) {\r\n            //local context per event, set a this argument\r\n            var context = {\r\n                source: _this,\r\n                type: t,\r\n                args: args //the arguments to the listener\r\n            };\r\n            _this.listeners[t].apply(context, args);\r\n        };\r\n        if (Array.isArray(type)) {\r\n            type.forEach(fireImpl.bind(this));\r\n        }\r\n        else {\r\n            fireImpl(type);\r\n        }\r\n    };\r\n    /**\r\n     * forwards one or more events from a given dispatcher to the current one\r\n     * i.e. when one of the given events is fired in 'from' it will be forwarded to all my listeners\r\n     * @param from the event dispatcher to forward from\r\n     * @param types the event types to forward\r\n     */\r\n    AEventDispatcher.prototype.forward = function (from) {\r\n        var types = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            types[_i - 1] = arguments[_i];\r\n        }\r\n        from.on(types, this.forwarder);\r\n    };\r\n    /**\r\n     * removes the forwarding declarations\r\n     * @param from\r\n     * @param types\r\n     */\r\n    AEventDispatcher.prototype.unforward = function (from) {\r\n        var types = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            types[_i - 1] = arguments[_i];\r\n        }\r\n        from.on(types, null);\r\n    };\r\n    return AEventDispatcher;\r\n}());\r\nvar TYPE_OBJECT = '[object Object]';\r\n//credits to https://github.com/vladmiller/dextend/blob/master/lib/dextend.js\r\nexport function merge() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i - 0] = arguments[_i];\r\n    }\r\n    var result = null;\r\n    for (var i = 0; i < args.length; i++) {\r\n        var toMerge = args[i], keys = Object.keys(toMerge);\r\n        if (result === null) {\r\n            result = toMerge;\r\n            continue;\r\n        }\r\n        for (var j = 0; j < keys.length; j++) {\r\n            var keyName = keys[j];\r\n            var value = toMerge[keyName];\r\n            //merge just POJOs\r\n            if (Object.prototype.toString.call(value) === TYPE_OBJECT && (Object.getPrototypeOf(value) === Object.prototype)) {\r\n                if (result[keyName] === undefined) {\r\n                    result[keyName] = {};\r\n                }\r\n                result[keyName] = merge(result[keyName], value);\r\n            }\r\n            else if (Array.isArray(value)) {\r\n                if (result[keyName] === undefined) {\r\n                    result[keyName] = [];\r\n                }\r\n                result[keyName] = value.concat(result[keyName]);\r\n            }\r\n            else {\r\n                result[keyName] = value;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * computes the absolute offset of the given element\r\n * @param element\r\n * @return {{left: number, top: number, width: number, height: number}}\r\n */\r\nexport function offset(element) {\r\n    var obj = element.getBoundingClientRect();\r\n    return {\r\n        left: obj.left + window.pageXOffset,\r\n        top: obj.top + window.pageYOffset,\r\n        width: obj.width,\r\n        height: obj.height\r\n    };\r\n}\r\n/**\r\n * content scroller utility\r\n *\r\n * a class for efficiently selecting a range of data items that are currently visible according to the scrolled position\r\n */\r\nexport var ContentScroller = (function (_super) {\r\n    __extends(ContentScroller, _super);\r\n    /**\r\n     *\r\n     * @param container the container element wrapping the content with a fixed height for enforcing scrolling\r\n     * @param content the content element to scroll\r\n     * @param options options see attribute\r\n     */\r\n    function ContentScroller(container, content, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var _this = _super.call(this) || this;\r\n        _this.container = container;\r\n        _this.content = content;\r\n        _this.options = {\r\n            /**\r\n             * shift that should be used for calculating the top position\r\n             */\r\n            topShift: function () { return 0; },\r\n            /**\r\n             * backup rows, i.e .the number of rows that should also be shown for avoiding to frequent updates\r\n             */\r\n            backupRows: 5,\r\n            /**\r\n             * the height of one row in pixel\r\n             */\r\n            rowHeight: 10\r\n        };\r\n        _this.prevScrollTop = 0;\r\n        _this.shift = 0;\r\n        merge(_this.options, options);\r\n        select(container).on('scroll.scroller', function () { return _this.onScroll(); });\r\n        //keep the previous state computing whether a redraw is needed\r\n        _this.prevScrollTop = container.scrollTop;\r\n        //total shift to the top\r\n        _this.shift = offset(content).top - offset(container).top;\r\n        return _this;\r\n    }\r\n    /**\r\n     * two events are fired:\r\n     *  * scroll when the user scrolls the container\r\n     *  * redraw when a redraw of the content must be performed due to scrolling changes. Note due to backup rows\r\n     *     a scrolling operation might not include a redraw\r\n     *\r\n     * @returns {string[]}\r\n     */\r\n    ContentScroller.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat([ContentScroller.EVENT_REDRAW, ContentScroller.EVENT_SCROLL]);\r\n    };\r\n    ContentScroller.prototype.scrollIntoView = function (start, length, index, row2y) {\r\n        var range = this.selectImpl(start, length, row2y, 0);\r\n        if (range.from <= index && index <= range.to) {\r\n            return; //already visible\r\n        }\r\n        var target = row2y(index) - 10; //magic constanst shift\r\n        var min = 0;\r\n        var max = this.container.scrollHeight - this.container.clientHeight;\r\n        // clamp to valid area\r\n        this.container.scrollTop = Math.max(min, Math.min(max, target));\r\n    };\r\n    /**\r\n     * selects a range identified by start and length and the row2y position callback returning the slice to show according to the current user scrolling position\r\n     * @param start start of the range\r\n     * @param length length of the range\r\n     * @param row2y lookup for computing the y position of a given row\r\n     * @returns {{from: number, to: number}} the slide to show\r\n     */\r\n    ContentScroller.prototype.select = function (start, length, row2y) {\r\n        return this.selectImpl(start, length, row2y, this.options.backupRows);\r\n    };\r\n    ContentScroller.prototype.selectImpl = function (start, length, row2y, backupRows) {\r\n        var top = this.container.scrollTop - this.shift - this.options.topShift(), bottom = top + this.container.clientHeight;\r\n        var i = 0, j;\r\n        /*console.log(window.matchMedia('print').matches, window.matchMedia('screen').matches, top, bottom);\r\n         if (typeof window.matchMedia === 'function' && window.matchMedia('print').matches) {\r\n         console.log('show all');\r\n         return [0, data.length];\r\n         }*/\r\n        if (top > 0) {\r\n            i = Math.round(top / this.options.rowHeight);\r\n            //count up till really even partial rows are visible\r\n            while (i >= start && row2y(i + 1) > top) {\r\n                i--;\r\n            }\r\n            i -= backupRows; //one more row as backup for scrolling\r\n        }\r\n        {\r\n            j = Math.round(bottom / this.options.rowHeight);\r\n            //count down till really even partial rows are visible\r\n            while (j <= length && row2y(j - 1) < bottom) {\r\n                j++;\r\n            }\r\n            j += backupRows; //one more row as backup for scrolling\r\n        }\r\n        return {\r\n            from: Math.max(i, start),\r\n            to: Math.min(j, length)\r\n        };\r\n    };\r\n    ContentScroller.prototype.onScroll = function () {\r\n        var top = this.container.scrollTop;\r\n        var left = this.container.scrollLeft;\r\n        //at least one row changed\r\n        //console.log(top, left);\r\n        this.fire(ContentScroller.EVENT_SCROLL, top, left);\r\n        if (Math.abs(this.prevScrollTop - top) >= this.options.rowHeight * this.options.backupRows) {\r\n            //we scrolled out of our backup rows, so we have to redraw the content\r\n            this.prevScrollTop = top;\r\n            this.fire(ContentScroller.EVENT_REDRAW);\r\n        }\r\n    };\r\n    /**\r\n     * removes the listeners\r\n     */\r\n    ContentScroller.prototype.destroy = function () {\r\n        select(this.container).on('scroll.scroller', null);\r\n    };\r\n    return ContentScroller;\r\n}(AEventDispatcher));\r\nContentScroller.EVENT_SCROLL = 'scroll';\r\nContentScroller.EVENT_REDRAW = 'redraw';\r\n/**\r\n * checks whether the given DragEvent has one of the given types\r\n */\r\nexport function hasDnDType(e, typesToCheck) {\r\n    var types = e.dataTransfer.types;\r\n    if (typeof types.indexOf === 'function') {\r\n        return typesToCheck.some(function (type) { return types.indexOf(type) >= 0; });\r\n    }\r\n    if (typeof types.includes === 'function') {\r\n        return typesToCheck.some(function (type) { return types.includes(type); });\r\n    }\r\n    if (typeof types.contains === 'function') {\r\n        return typesToCheck.some(function (type) { return types.contains(type); });\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * should it be a copy dnd operation?\r\n */\r\nexport function copyDnD(e) {\r\n    var dT = e.dataTransfer;\r\n    return (e.ctrlKey && dT.effectAllowed.match(/copy/gi) != null) || (dT.effectAllowed.match(/move/gi) == null);\r\n}\r\n/**\r\n * updates the drop effect according to the currently selected meta keys\r\n * @param e\r\n */\r\nexport function updateDropEffect(e) {\r\n    var dT = e.dataTransfer;\r\n    if (copyDnD(e)) {\r\n        dT.dropEffect = 'copy';\r\n    }\r\n    else {\r\n        dT.dropEffect = 'move';\r\n    }\r\n}\r\n/**\r\n * returns a d3 callable function to make an element dropable, managed the class css 'drag_over' for hovering effects\r\n * @param mimeTypes the mime types to be dropable\r\n * @param onDrop: handler when an element is dropped\r\n */\r\nexport function dropAble(mimeTypes, onDrop) {\r\n    return function ($node) {\r\n        $node.on('dragenter', function () {\r\n            var e = d3event;\r\n            //var xy = mouse($node.node());\r\n            if (hasDnDType(e, mimeTypes)) {\r\n                select(this).classed('drag_over', true);\r\n                //sounds good\r\n                return false;\r\n            }\r\n            //not a valid mime type\r\n            select(this).classed('drag_over', false);\r\n        }).on('dragover', function () {\r\n            var e = d3event;\r\n            if (hasDnDType(e, mimeTypes)) {\r\n                e.preventDefault();\r\n                updateDropEffect(e);\r\n                select(this).classed('drag_over', true);\r\n                return false;\r\n            }\r\n        }).on('dragleave', function () {\r\n            //\r\n            select(this).classed('drag_over', false);\r\n        }).on('drop', function (d) {\r\n            var e = d3event;\r\n            e.preventDefault();\r\n            select(this).classed('drag_over', false);\r\n            //var xy = mouse($node.node());\r\n            if (hasDnDType(e, mimeTypes)) {\r\n                var data_1 = {};\r\n                //selects the data contained in the data transfer\r\n                mimeTypes.forEach(function (mime) {\r\n                    var value = e.dataTransfer.getData(mime);\r\n                    if (value !== '') {\r\n                        data_1[mime] = value;\r\n                    }\r\n                });\r\n                return onDrop(data_1, d, copyDnD(e));\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * utility function to sets attributes and styles in a nodes\r\n * @param node\r\n * @param attrs\r\n * @param styles\r\n * @return {T}\r\n */\r\nexport function attr(node, attrs, styles) {\r\n    if (attrs === void 0) { attrs = {}; }\r\n    if (styles === void 0) { styles = {}; }\r\n    Object.keys(attrs).forEach(function (attr) { return node.setAttribute(attr, String(attrs[attr])); });\r\n    Object.keys(styles).forEach(function (attr) { return node.style.setProperty(attr, styles[attr]); });\r\n    return node;\r\n}\r\n/**\r\n * for each item matching the selector execute the callback\r\n * @param node\r\n * @param selector\r\n * @param callback\r\n */\r\nexport function forEach(node, selector, callback) {\r\n    Array.prototype.slice.call(node.querySelectorAll(selector)).forEach(callback);\r\n}\r\nvar ellipsis = '…';\r\nexport function createTextHints(ctx, font) {\r\n    var bak = ctx.font;\r\n    ctx.font = font;\r\n    var alphabet = 'abcdefghijklmnopqrstuvwxyz';\r\n    var testText = alphabet + (alphabet.toUpperCase()) + '0123456789';\r\n    var r = {\r\n        maxLetterWidth: ctx.measureText('M').width,\r\n        avgLetterWidth: ctx.measureText(testText).width / testText.length,\r\n        ellipsisWidth: ctx.measureText(ellipsis).width\r\n    };\r\n    ctx.font = bak;\r\n    return r;\r\n}\r\nexport function clipText(ctx, text, x, y, maxWidth, hints) {\r\n    //based on http://stackoverflow.com/questions/10508988/html-canvas-text-overflow-ellipsis#10511598\r\n    var render = function (t) { return ctx.fillText(t, x, y, maxWidth); };\r\n    //check if using heuristics\r\n    if (hints.maxLetterWidth * text.length <= maxWidth || maxWidth <= hints.ellipsisWidth || text.length === 0) {\r\n        return render(text);\r\n    }\r\n    //check precisely\r\n    if (ctx.measureText(text).width <= maxWidth) {\r\n        return render(text);\r\n    }\r\n    var availWidth = maxWidth - hints.ellipsisWidth;\r\n    // use binary search\r\n    var min = 0;\r\n    var max = text.length - 1;\r\n    // guess first based on average letter width\r\n    var guess = Math.min(max, Math.floor(maxWidth / hints.avgLetterWidth));\r\n    while (min < max) {\r\n        var overflow = availWidth - ctx.measureText(text.substring(0, guess + 1)).width;\r\n        if (overflow < 0) {\r\n            max = guess - 1;\r\n        }\r\n        else if (overflow > 0) {\r\n            min = guess + 1;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n        guess = Math.floor((max + min) / 2); //compute next guess\r\n    }\r\n    return render(text.substring(0, min + 1) + ellipsis);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils.ts\n// module id = 2\n// module chunks = 0 1","var __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\n/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nimport Column from './Column';\r\n/**\r\n * a column having an accessor to get the cell value\r\n */\r\nvar ValueColumn = (function (_super) {\r\n    __extends(ValueColumn, _super);\r\n    function ValueColumn(id, desc) {\r\n        var _this = _super.call(this, id, desc) || this;\r\n        //find accessor\r\n        _this.accessor = desc.accessor || (function () { return null; });\r\n        return _this;\r\n    }\r\n    ValueColumn.prototype.getLabel = function (row, index) {\r\n        return '' + this.getValue(row, index);\r\n    };\r\n    ValueColumn.prototype.getRaw = function (row, index) {\r\n        return this.accessor(row, index, this.id, this.desc, this.findMyRanker());\r\n    };\r\n    ValueColumn.prototype.getValue = function (row, index) {\r\n        return this.getRaw(row, index);\r\n    };\r\n    return ValueColumn;\r\n}(Column));\r\nexport default ValueColumn;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/ValueColumn.ts\n// module id = 3\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport { scale, format } from 'd3';\r\nimport Column from './Column';\r\nimport ValueColumn from './ValueColumn';\r\n/**\r\n * checks whether the given column or description is a number column, i.e. the value is a number\r\n * @param col\r\n * @returns {boolean}\r\n */\r\nexport function isNumberColumn(col) {\r\n    return (col instanceof Column && typeof col.getNumber === 'function' || (!(col instanceof Column) && col.type.match(/(number|stack|ordinal)/) != null));\r\n}\r\nfunction isMissingValue(v) {\r\n    return typeof (v) === 'undefined' || v == null || isNaN(v) || v === '' || v === 'NA' || (typeof (v) === 'string' && (v.toLowerCase() === 'na'));\r\n}\r\n/**\r\n * save number comparison\r\n * @param a\r\n * @param b\r\n * @return {number}\r\n */\r\nexport function numberCompare(a, b) {\r\n    if (isNaN(a)) {\r\n        return isNaN(b) ? 0 : +1;\r\n    }\r\n    if (isNaN(b)) {\r\n        return -1;\r\n    }\r\n    return a - b;\r\n}\r\nfunction toScale(type) {\r\n    if (type === void 0) { type = 'linear'; }\r\n    switch (type) {\r\n        case 'log':\r\n            return scale.log().clamp(true);\r\n        case 'sqrt':\r\n            return scale.sqrt().clamp(true);\r\n        case 'pow1.1':\r\n            return scale.pow().exponent(1.1).clamp(true);\r\n        case 'pow2':\r\n            return scale.pow().exponent(2).clamp(true);\r\n        case 'pow3':\r\n            return scale.pow().exponent(3).clamp(true);\r\n        default:\r\n            return scale.linear().clamp(true);\r\n    }\r\n}\r\nfunction isSame(a, b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n    return a.every(function (ai, i) { return ai === b[i]; });\r\n}\r\nfunction fixDomain(domain, type) {\r\n    if (type === 'log' && domain[0] === 0) {\r\n        domain[0] = 0.0000001; //0 is bad\r\n    }\r\n    return domain;\r\n}\r\n/**\r\n * a mapping function based on a d3 scale (linear, sqrt, log)\r\n */\r\nexport var ScaleMappingFunction = (function () {\r\n    function ScaleMappingFunction(domain, type, range) {\r\n        if (domain === void 0) { domain = [0, 1]; }\r\n        if (type === void 0) { type = 'linear'; }\r\n        if (range === void 0) { range = [0, 1]; }\r\n        this.type = type;\r\n        this.s = toScale(type).domain(fixDomain(domain, this.type)).range(range);\r\n    }\r\n    Object.defineProperty(ScaleMappingFunction.prototype, \"domain\", {\r\n        get: function () {\r\n            return this.s.domain();\r\n        },\r\n        set: function (domain) {\r\n            this.s.domain(fixDomain(domain, this.type));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ScaleMappingFunction.prototype, \"range\", {\r\n        get: function () {\r\n            return this.s.range();\r\n        },\r\n        set: function (range) {\r\n            this.s.range(range);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ScaleMappingFunction.prototype.apply = function (v) {\r\n        return this.s(v);\r\n    };\r\n    Object.defineProperty(ScaleMappingFunction.prototype, \"scaleType\", {\r\n        get: function () {\r\n            return this.type;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ScaleMappingFunction.prototype.dump = function () {\r\n        return {\r\n            type: this.type,\r\n            domain: this.domain,\r\n            range: this.range\r\n        };\r\n    };\r\n    ScaleMappingFunction.prototype.eq = function (other) {\r\n        if (!(other instanceof ScaleMappingFunction)) {\r\n            return false;\r\n        }\r\n        var that = other;\r\n        return that.type === this.type && isSame(this.domain, that.domain) && isSame(this.range, that.range);\r\n    };\r\n    ScaleMappingFunction.prototype.restore = function (dump) {\r\n        this.type = dump.type;\r\n        this.s = toScale(dump.type).domain(dump.domain).range(dump.range);\r\n    };\r\n    ScaleMappingFunction.prototype.clone = function () {\r\n        return new ScaleMappingFunction(this.domain, this.type, this.range);\r\n    };\r\n    return ScaleMappingFunction;\r\n}());\r\n/**\r\n * a mapping function based on a custom user function using 'value' as the current value\r\n */\r\nexport var ScriptMappingFunction = (function () {\r\n    function ScriptMappingFunction(domain_, code_) {\r\n        if (domain_ === void 0) { domain_ = [0, 1]; }\r\n        if (code_ === void 0) { code_ = 'return this.linear(value,this.value_min,this.value_max);'; }\r\n        this.domain_ = domain_;\r\n        this.code_ = code_;\r\n        this.f = new Function('value', code_);\r\n    }\r\n    Object.defineProperty(ScriptMappingFunction.prototype, \"domain\", {\r\n        get: function () {\r\n            return this.domain_;\r\n        },\r\n        set: function (domain) {\r\n            this.domain_ = domain;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ScriptMappingFunction.prototype, \"code\", {\r\n        get: function () {\r\n            return this.code_;\r\n        },\r\n        set: function (code) {\r\n            if (this.code_ === code) {\r\n                return;\r\n            }\r\n            this.code_ = code;\r\n            this.f = new Function('value', code);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ScriptMappingFunction.prototype.apply = function (v) {\r\n        var min = this.domain_[0], max = this.domain_[this.domain_.length - 1];\r\n        var r = this.f.call({\r\n            value_min: min,\r\n            value_max: max,\r\n            value_range: max - min,\r\n            value_domain: this.domain_.slice(),\r\n            linear: function (v, mi, ma) { return (v - mi) / (ma - mi); }\r\n        }, v);\r\n        if (typeof r === 'number') {\r\n            return Math.max(Math.min(r, 1), 0);\r\n        }\r\n        return NaN;\r\n    };\r\n    ScriptMappingFunction.prototype.dump = function () {\r\n        return {\r\n            type: 'script',\r\n            code: this.code\r\n        };\r\n    };\r\n    ScriptMappingFunction.prototype.eq = function (other) {\r\n        if (!(other instanceof ScriptMappingFunction)) {\r\n            return false;\r\n        }\r\n        var that = other;\r\n        return that.code === this.code;\r\n    };\r\n    ScriptMappingFunction.prototype.restore = function (dump) {\r\n        this.code = dump.code;\r\n    };\r\n    ScriptMappingFunction.prototype.clone = function () {\r\n        return new ScriptMappingFunction(this.domain, this.code);\r\n    };\r\n    return ScriptMappingFunction;\r\n}());\r\nexport function createMappingFunction(dump) {\r\n    if (dump.type === 'script') {\r\n        var s = new ScriptMappingFunction();\r\n        s.restore(dump);\r\n        return s;\r\n    }\r\n    else {\r\n        var l = new ScaleMappingFunction();\r\n        l.restore(dump);\r\n        return l;\r\n    }\r\n}\r\n/**\r\n * a number column mapped from an original input scale to an output range\r\n */\r\nvar NumberColumn = (function (_super) {\r\n    __extends(NumberColumn, _super);\r\n    function NumberColumn(id, desc) {\r\n        var _this = _super.call(this, id, desc) || this;\r\n        _this.missingValue = 0;\r\n        /**\r\n         * currently active filter\r\n         * @type {{min: number, max: number}}\r\n         * @private\r\n         */\r\n        _this.currentFilter = NumberColumn.noFilter();\r\n        _this.numberFormat = format('.3n');\r\n        if (desc.map) {\r\n            _this.mapping = createMappingFunction(desc.map);\r\n        }\r\n        else if (desc.domain) {\r\n            _this.mapping = new ScaleMappingFunction(desc.domain, 'linear', desc.range || [0, 1]);\r\n        }\r\n        _this.original = _this.mapping.clone();\r\n        if (desc.numberFormat) {\r\n            _this.numberFormat = format(desc.numberFormat);\r\n        }\r\n        return _this;\r\n    }\r\n    NumberColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        r.map = this.mapping.dump();\r\n        r.filter = this.currentFilter;\r\n        r.missingValue = this.missingValue;\r\n        return r;\r\n    };\r\n    NumberColumn.prototype.restore = function (dump, factory) {\r\n        _super.prototype.restore.call(this, dump, factory);\r\n        if (dump.map) {\r\n            this.mapping = createMappingFunction(dump.map);\r\n        }\r\n        else if (dump.domain) {\r\n            this.mapping = new ScaleMappingFunction(dump.domain, 'linear', dump.range || [0, 1]);\r\n        }\r\n        if (dump.currentFilter) {\r\n            this.currentFilter = dump.currentFilter;\r\n        }\r\n        if (dump.missingValue) {\r\n            this.missingValue = dump.missingValue;\r\n        }\r\n        if (dump.numberFormat) {\r\n            this.numberFormat = format(dump.numberFormat);\r\n        }\r\n    };\r\n    NumberColumn.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat([NumberColumn.EVENT_MAPPING_CHANGED]);\r\n    };\r\n    NumberColumn.prototype.getLabel = function (row, index) {\r\n        if (this.desc.numberFormat) {\r\n            var raw = this.getRawValue(row, index);\r\n            //if a dedicated format and a number use the formatter in any case\r\n            if (isNaN(raw)) {\r\n                return 'NaN';\r\n            }\r\n            return this.numberFormat(raw);\r\n        }\r\n        var v = _super.prototype.getValue.call(this, row, index);\r\n        //keep non number if it is not a number else convert using formatter\r\n        if (typeof v === 'number') {\r\n            return this.numberFormat(+v);\r\n        }\r\n        return String(v);\r\n    };\r\n    NumberColumn.prototype.getRawValue = function (row, index) {\r\n        var v = _super.prototype.getValue.call(this, row, index);\r\n        if (isMissingValue(v)) {\r\n            return this.missingValue;\r\n        }\r\n        return +v;\r\n    };\r\n    NumberColumn.prototype.getValue = function (row, index) {\r\n        var v = this.getRawValue(row, index);\r\n        if (isNaN(v)) {\r\n            return v;\r\n        }\r\n        return this.mapping.apply(v);\r\n    };\r\n    NumberColumn.prototype.getNumber = function (row, index) {\r\n        return this.getValue(row, index);\r\n    };\r\n    NumberColumn.prototype.compare = function (a, b, aIndex, bIndex) {\r\n        return numberCompare(this.getValue(a, aIndex), this.getValue(b, bIndex));\r\n    };\r\n    NumberColumn.prototype.getOriginalMapping = function () {\r\n        return this.original.clone();\r\n    };\r\n    NumberColumn.prototype.getMapping = function () {\r\n        return this.mapping.clone();\r\n    };\r\n    NumberColumn.prototype.setMapping = function (mapping) {\r\n        if (this.mapping.eq(mapping)) {\r\n            return;\r\n        }\r\n        this.fire([NumberColumn.EVENT_MAPPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.mapping.clone(), this.mapping = mapping);\r\n    };\r\n    NumberColumn.prototype.isFiltered = function () {\r\n        return this.currentFilter.filterMissing || isFinite(this.currentFilter.min) || isFinite(this.currentFilter.max);\r\n    };\r\n    Object.defineProperty(NumberColumn.prototype, \"filterMin\", {\r\n        get: function () {\r\n            return this.currentFilter.min;\r\n        },\r\n        set: function (min) {\r\n            var bak = this.getFilter();\r\n            this.currentFilter.min = isNaN(min) ? -Infinity : min;\r\n            this.fire([Column.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, this.getFilter());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NumberColumn.prototype, \"filterMax\", {\r\n        get: function () {\r\n            return this.currentFilter.max;\r\n        },\r\n        set: function (max) {\r\n            var bak = this.getFilter();\r\n            this.currentFilter.max = isNaN(max) ? Infinity : max;\r\n            this.fire([Column.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, this.getFilter());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NumberColumn.prototype, \"filterMissing\", {\r\n        get: function () {\r\n            return this.currentFilter.filterMissing;\r\n        },\r\n        set: function (filterMissing) {\r\n            var bak = this.getFilter();\r\n            this.currentFilter.filterMissing = filterMissing;\r\n            this.fire([Column.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, this.getFilter());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    NumberColumn.prototype.getFilter = function () {\r\n        return {\r\n            min: this.currentFilter.min,\r\n            max: this.currentFilter.max,\r\n            filterMissing: this.currentFilter.filterMissing\r\n        };\r\n    };\r\n    NumberColumn.prototype.setFilter = function (value) {\r\n        if (value === void 0) { value = { min: -Infinity, max: +Infinity, filterMissing: false }; }\r\n        if (this.currentFilter.min === value.min && this.currentFilter.max === value.max && this.currentFilter.filterMissing === value.filterMissing) {\r\n            return;\r\n        }\r\n        var bak = this.getFilter();\r\n        this.currentFilter.min = isNaN(value.min) ? -Infinity : value.min;\r\n        this.currentFilter.max = isNaN(value.max) ? Infinity : value.max;\r\n        this.currentFilter.filterMissing = value.filterMissing;\r\n        this.fire([Column.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, this.getFilter());\r\n    };\r\n    /**\r\n     * filter the current row if any filter is set\r\n     * @param row\r\n     * @param index row index\r\n     * @returns {boolean}\r\n     */\r\n    NumberColumn.prototype.filter = function (row, index) {\r\n        if (!this.isFiltered()) {\r\n            return true;\r\n        }\r\n        var v = _super.prototype.getValue.call(this, row, index);\r\n        if (isMissingValue(v)) {\r\n            return !this.filterMissing;\r\n        }\r\n        var vn = +v;\r\n        return !((isFinite(this.currentFilter.min) && vn < this.currentFilter.min) || (isFinite(this.currentFilter.max) && vn > this.currentFilter.max));\r\n    };\r\n    NumberColumn.prototype.rendererType = function () {\r\n        if (this.getCompressed()) {\r\n            return NumberColumn.COMPRESSED_RENDERER;\r\n        }\r\n        return _super.prototype.rendererType.call(this);\r\n    };\r\n    return NumberColumn;\r\n}(ValueColumn));\r\nexport default NumberColumn;\r\nNumberColumn.EVENT_MAPPING_CHANGED = 'mappingChanged';\r\nNumberColumn.COMPRESSED_RENDERER = 'heatmap';\r\nNumberColumn.noFilter = function () { return ({ min: -Infinity, max: Infinity, filterMissing: false }); };\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/NumberColumn.ts\n// module id = 4\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport Column from './Column';\r\nimport ValueColumn from './ValueColumn';\r\n/**\r\n * a string column with optional alignment\r\n */\r\nvar StringColumn = (function (_super) {\r\n    __extends(StringColumn, _super);\r\n    function StringColumn(id, desc) {\r\n        var _this = _super.call(this, id, desc) || this;\r\n        _this.currentFilter = null;\r\n        _this._alignment = 'left';\r\n        _this.setWidthImpl(200); //by default 200\r\n        _this._alignment = desc.alignment || 'left';\r\n        return _this;\r\n    }\r\n    Object.defineProperty(StringColumn.prototype, \"alignment\", {\r\n        //readonly\r\n        get: function () {\r\n            return this._alignment;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    StringColumn.prototype.getValue = function (row, index) {\r\n        var v = _super.prototype.getValue.call(this, row, index);\r\n        if (typeof (v) === 'undefined' || v == null) {\r\n            return '';\r\n        }\r\n        return String(v);\r\n    };\r\n    StringColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        if (this.currentFilter instanceof RegExp) {\r\n            r.filter = 'REGEX:' + this.currentFilter.source;\r\n        }\r\n        else {\r\n            r.filter = this.currentFilter;\r\n        }\r\n        r.alignment = this.alignment;\r\n        return r;\r\n    };\r\n    StringColumn.prototype.restore = function (dump, factory) {\r\n        _super.prototype.restore.call(this, dump, factory);\r\n        if (dump.filter && dump.filter.slice(0, 6) === 'REGEX:') {\r\n            this.currentFilter = new RegExp(dump.filter.slice(6));\r\n        }\r\n        else {\r\n            this.currentFilter = dump.filter || null;\r\n        }\r\n        this._alignment = dump.alignment || this._alignment;\r\n    };\r\n    StringColumn.prototype.isFiltered = function () {\r\n        return this.currentFilter != null;\r\n    };\r\n    StringColumn.prototype.filter = function (row, index) {\r\n        if (!this.isFiltered()) {\r\n            return true;\r\n        }\r\n        var r = this.getLabel(row, index), filter = this.currentFilter;\r\n        if (filter === StringColumn.FILTER_MISSING) {\r\n            return r != null && r.trim() !== '';\r\n        }\r\n        if (typeof filter === 'string' && filter.length > 0) {\r\n            return r && r.toLowerCase().indexOf(filter.toLowerCase()) >= 0;\r\n        }\r\n        if (filter instanceof RegExp) {\r\n            return r && filter.test(r);\r\n        }\r\n        return true;\r\n    };\r\n    StringColumn.prototype.getFilter = function () {\r\n        return this.currentFilter;\r\n    };\r\n    StringColumn.prototype.setFilter = function (filter) {\r\n        if (filter === '') {\r\n            filter = null;\r\n        }\r\n        if (this.currentFilter === filter) {\r\n            return;\r\n        }\r\n        this.fire([Column.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.currentFilter, this.currentFilter = filter);\r\n    };\r\n    StringColumn.prototype.compare = function (a, b, aIndex, bIndex) {\r\n        var a_val, b_val;\r\n        if ((a_val = this.getValue(a, aIndex)) === '') {\r\n            return this.getValue(b, bIndex) === '' ? 0 : +1; //same = 0\r\n        }\r\n        else if ((b_val = this.getValue(b, bIndex)) === '') {\r\n            return -1;\r\n        }\r\n        return a_val.localeCompare(b_val);\r\n    };\r\n    return StringColumn;\r\n}(ValueColumn));\r\nexport default StringColumn;\r\n//magic key for filtering missing ones\r\nStringColumn.FILTER_MISSING = '__FILTER_MISSING';\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/StringColumn.ts\n// module id = 5\n// module chunks = 0 1","/**\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\nimport Column from './model/Column';\r\nimport { forEach, attr, clipText } from './utils';\r\nimport { hsl } from 'd3';\r\n/**\r\n * default renderer instance rendering the value as a text\r\n */\r\nexport var DefaultCellRenderer = (function () {\r\n    function DefaultCellRenderer(textClass, align) {\r\n        if (textClass === void 0) { textClass = 'text'; }\r\n        if (align === void 0) { align = 'left'; }\r\n        this.textClass = textClass;\r\n        this.align = align;\r\n    }\r\n    DefaultCellRenderer.prototype.createSVG = function (col, context) {\r\n        var _this = this;\r\n        return {\r\n            template: \"<text class=\\\"\" + this.textClass + \"\\\" clip-path=\\\"url(#cp\" + context.idPrefix + \"clipCol\" + col.id + \")\\\"></text>\",\r\n            update: function (n, d) {\r\n                var alignmentShift = 2;\r\n                if (_this.align === 'right') {\r\n                    alignmentShift = col.getWidth() - 5;\r\n                }\r\n                else if (_this.align === 'center') {\r\n                    alignmentShift = col.getWidth() * 0.5;\r\n                }\r\n                attr(n, {\r\n                    x: alignmentShift\r\n                });\r\n                n.textContent = col.getLabel(d.v, d.dataIndex);\r\n            }\r\n        };\r\n    };\r\n    DefaultCellRenderer.prototype.createHTML = function (col, context) {\r\n        return {\r\n            template: \"<div class=\\\"\" + this.textClass + \" \" + this.align + \"\\\"></div>\",\r\n            update: function (n, d) {\r\n                attr(n, {}, {\r\n                    width: col.getWidth() + \"px\"\r\n                });\r\n                n.textContent = col.getLabel(d.v, d.dataIndex);\r\n            }\r\n        };\r\n    };\r\n    DefaultCellRenderer.prototype.createCanvas = function (col, context) {\r\n        var _this = this;\r\n        return function (ctx, d) {\r\n            var bak = ctx.textAlign;\r\n            ctx.textAlign = _this.align;\r\n            var w = col.getWidth();\r\n            var shift = 0;\r\n            if (_this.align === 'center') {\r\n                shift = w / 2;\r\n            }\r\n            else if (_this.align === 'right') {\r\n                shift = w;\r\n            }\r\n            clipText(ctx, col.getLabel(d.v, d.dataIndex), shift, 0, w, context.textHints);\r\n            ctx.textAlign = bak;\r\n        };\r\n    };\r\n    return DefaultCellRenderer;\r\n}());\r\n/**\r\n * a renderer rendering a bar for numerical columns\r\n */\r\nexport var BarCellRenderer = (function () {\r\n    function BarCellRenderer(renderValue, colorOf) {\r\n        if (renderValue === void 0) { renderValue = false; }\r\n        if (colorOf === void 0) { colorOf = function (d, i, col) { return col.color; }; }\r\n        this.colorOf = colorOf;\r\n        /**\r\n         * flag to always render the value\r\n         * @type {boolean}\r\n         */\r\n        this.renderValue = false;\r\n        this.renderValue = renderValue;\r\n    }\r\n    BarCellRenderer.prototype.createSVG = function (col, context) {\r\n        var _this = this;\r\n        var padding = context.option('rowPadding', 1);\r\n        return {\r\n            template: \"<g class=\\\"bar\\\">\\n          <rect class=\\\"\" + col.cssClass + \"\\\" y=\\\"\" + padding + \"\\\" style=\\\"fill: \" + col.color + \"\\\">\\n            <title></title>\\n          </rect>\\n          <text class=\\\"number \" + (this.renderValue ? '' : 'hoverOnly') + \"\\\" clip-path=\\\"url(#cp\" + context.idPrefix + \"clipCol\" + col.id + \")\\\"></text>\\n        </g>\",\r\n            update: function (n, d, i) {\r\n                n.querySelector('rect title').textContent = col.getLabel(d.v, d.dataIndex);\r\n                var width = col.getWidth() * col.getValue(d.v, d.dataIndex);\r\n                attr(n.querySelector('rect'), {\r\n                    y: padding,\r\n                    width: isNaN(width) ? 0 : width,\r\n                    height: context.rowHeight(i) - padding * 2\r\n                }, {\r\n                    fill: _this.colorOf(d.v, i, col)\r\n                });\r\n                attr(n.querySelector('text'), {}).textContent = col.getLabel(d.v, d.dataIndex);\r\n            }\r\n        };\r\n    };\r\n    BarCellRenderer.prototype.createHTML = function (col, context) {\r\n        var _this = this;\r\n        var padding = context.option('rowPadding', 1);\r\n        return {\r\n            template: \"<div class=\\\"bar\\\" style=\\\"top:\" + padding + \"px; background-color: \" + col.color + \"\\\">\\n          <span class=\\\"number \" + (this.renderValue ? '' : 'hoverOnly') + \"\\\"></span>\\n        </div>\",\r\n            update: function (n, d, i) {\r\n                var width = col.getWidth() * col.getValue(d.v, d.dataIndex);\r\n                attr(n, {\r\n                    title: col.getLabel(d.v, d.dataIndex)\r\n                }, {\r\n                    width: (isNaN(width) ? 0 : width) + \"px\",\r\n                    height: context.rowHeight(i) - padding * 2 + \"px\",\r\n                    top: padding + \"px\",\r\n                    'background-color': _this.colorOf(d.v, i, col)\r\n                });\r\n                n.querySelector('span').textContent = col.getLabel(d.v, d.dataIndex);\r\n            }\r\n        };\r\n    };\r\n    BarCellRenderer.prototype.createCanvas = function (col, context) {\r\n        var _this = this;\r\n        var padding = context.option('rowPadding', 1);\r\n        return function (ctx, d, i) {\r\n            ctx.fillStyle = _this.colorOf(d.v, i, col);\r\n            var width = col.getWidth() * col.getValue(d.v, d.dataIndex);\r\n            ctx.fillRect(padding, padding, isNaN(width) ? 0 : width, context.rowHeight(i) - padding * 2);\r\n            if (_this.renderValue || context.hovered(d.dataIndex) || context.selected(d.dataIndex)) {\r\n                ctx.fillStyle = context.option('style.text', 'black');\r\n                clipText(ctx, col.getLabel(d.v, d.dataIndex), 1, 0, col.getWidth() - 1, context.textHints);\r\n            }\r\n        };\r\n    };\r\n    return BarCellRenderer;\r\n}());\r\nfunction toHeatMapColor(d, index, col) {\r\n    var v = col.getNumber(d, index);\r\n    if (isNaN(v)) {\r\n        v = 0;\r\n    }\r\n    //hsl space encoding, encode in lightness\r\n    var color = hsl(col.color || Column.DEFAULT_COLOR);\r\n    color.l = v;\r\n    return color.toString();\r\n}\r\nvar heatmap = {\r\n    createSVG: function (col, context) {\r\n        var padding = context.option('rowPadding', 1);\r\n        return {\r\n            template: \"<rect class=\\\"heatmap \" + col.cssClass + \"\\\" y=\\\"\" + padding + \"\\\" style=\\\"fill: \" + col.color + \"\\\">\\n            <title></title>\\n          </rect>\",\r\n            update: function (n, d, i) {\r\n                n.querySelector('title').textContent = col.getLabel(d.v, d.dataIndex);\r\n                var w = context.rowHeight(i) - padding * 2;\r\n                attr(n, {\r\n                    y: padding,\r\n                    width: w,\r\n                    height: w\r\n                }, {\r\n                    fill: toHeatMapColor(d.v, d.dataIndex, col)\r\n                });\r\n            }\r\n        };\r\n    },\r\n    createHTML: function (col, context) {\r\n        var padding = context.option('rowPadding', 1);\r\n        return {\r\n            template: \"<div class=\\\"heatmap \" + col.cssClass + \"\\\" style=\\\"background-color: \" + col.color + \"; top: \" + padding + \"\\\"></div>\",\r\n            update: function (n, d, i) {\r\n                var w = context.rowHeight(i) - padding * 2;\r\n                attr(n, {\r\n                    title: col.getLabel(d.v, d.dataIndex)\r\n                }, {\r\n                    width: w + \"px\",\r\n                    height: w + \"px\",\r\n                    top: padding + \"px\",\r\n                    'background-color': toHeatMapColor(d.v, d.dataIndex, col)\r\n                });\r\n            }\r\n        };\r\n    },\r\n    createCanvas: function (col, context) {\r\n        var padding = context.option('rowPadding', 1);\r\n        return function (ctx, d, i) {\r\n            var w = context.rowHeight(i) - padding * 2;\r\n            ctx.fillStyle = toHeatMapColor(d.v, d.dataIndex, col);\r\n            ctx.fillRect(padding, padding, w, w);\r\n        };\r\n    }\r\n};\r\nvar action = {\r\n    createSVG: function (col, context) {\r\n        var actions = context.option('actions', []);\r\n        return {\r\n            template: \"<text class=\\\"actions hoverOnly fa\\\">\" + actions.map(function (a) { return \"<tspan>\" + a.icon + \"></tspan>\"; }) + \"</text>\",\r\n            update: function (n, d) {\r\n                forEach(n, 'tspan', function (ni, i) {\r\n                    ni.onclick = function (event) {\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                        actions[i].action(d.v, d.dataIndex);\r\n                    };\r\n                });\r\n            }\r\n        };\r\n    },\r\n    createHTML: function (col, context) {\r\n        var actions = context.option('actions', []);\r\n        return {\r\n            template: \"<div class=\\\"actions hoverOnly\\\">\" + actions.map(function (a) { return \"<span title=\\\"\" + a.name + \"\\\" class=\\\"fa\\\">\" + a.icon + \"></span>\"; }) + \"</div>\",\r\n            update: function (n, d) {\r\n                forEach(n, 'span', function (ni, i) {\r\n                    ni.onclick = function (event) {\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                        actions[i].action(d.v, d.dataIndex);\r\n                    };\r\n                });\r\n            }\r\n        };\r\n    },\r\n    createCanvas: function (col, context) {\r\n        var actions = context.option('actions', []);\r\n        return function (ctx, d, i, dx, dy) {\r\n            var hovered = context.hovered(d.dataIndex);\r\n            if (hovered) {\r\n                var overlay = showOverlay(context.idPrefix + col.id, dx, dy);\r\n                overlay.style.width = col.getWidth() + 'px';\r\n                overlay.classList.add('actions');\r\n                overlay.innerHTML = actions.map(function (a) { return \"<span title=\\\"\" + a.name + \"\\\" class=\\\"fa\\\">\" + a.icon + \"</span>\"; }).join('');\r\n                forEach(overlay, 'span', function (ni, i) {\r\n                    ni.onclick = function (event) {\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                        actions[i].action(d.v, d.dataIndex);\r\n                    };\r\n                });\r\n            }\r\n        };\r\n    }\r\n};\r\nvar selection = {\r\n    createSVG: function (col) {\r\n        return {\r\n            template: \"<text class=\\\"selection fa\\\"><tspan class=\\\"selectionOnly\\\">\\uF046</tspan><tspan class=\\\"notSelectionOnly\\\">\\uF096</tspan></text>\",\r\n            update: function (n, d) {\r\n                n.onclick = function (event) {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    col.toggleValue(d.v, d.dataIndex);\r\n                };\r\n            }\r\n        };\r\n    },\r\n    createHTML: function (col) {\r\n        return {\r\n            template: \"<div class=\\\"selection fa\\\"></div>\",\r\n            update: function (n, d) {\r\n                n.onclick = function (event) {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    col.toggleValue(d.v, d.dataIndex);\r\n                };\r\n            }\r\n        };\r\n    },\r\n    createCanvas: function (col, context) {\r\n        return function (ctx, d) {\r\n            var bak = ctx.font;\r\n            ctx.font = '10pt FontAwesome';\r\n            clipText(ctx, col.getValue(d.v, d.dataIndex) ? '\\uf046' : '\\uf096', 0, 0, col.getWidth(), context.textHints);\r\n            ctx.font = bak;\r\n        };\r\n    }\r\n};\r\nvar annotate = {\r\n    createSVG: function (col, context) {\r\n        return {\r\n            template: \"<g class=\\\"annotations\\\">\\n        <text class=\\\"notHoverOnly text\\\" clip-path=\\\"url(#cp\" + context.idPrefix + \"clipCol\" + col.id + \")\\\"></text>\\n        <foreignObject class=\\\"hoverOnly\\\" x=\\\"-2\\\" y=\\\"-2\\\">\\n          <input type=\\\"text\\\">\\n        </foreignObject>\\n       </g>\",\r\n            update: function (n, d, i) {\r\n                var input = n.querySelector('foreignObject *');\r\n                input.onchange = function () {\r\n                    col.setValue(d.v, d.dataIndex, this.value);\r\n                };\r\n                input.onclick = function (event) {\r\n                    event.stopPropagation();\r\n                };\r\n                input.style.width = col.getWidth() + 'px';\r\n                input.value = col.getLabel(d.v, d.dataIndex);\r\n                n.querySelector('text').textContent = col.getLabel(d.v, d.dataIndex);\r\n                var f = n.querySelector('foreignObject');\r\n                f.setAttribute('width', String(col.getWidth()));\r\n                f.setAttribute('height', String(context.rowHeight(i)));\r\n            }\r\n        };\r\n    },\r\n    createHTML: function (col) {\r\n        return {\r\n            template: \"<div class=\\\"annotations text\\\">\\n        <input type=\\\"text\\\" class=\\\"hoverOnly\\\">\\n        <span class=\\\"text notHoverOnly\\\"></span>\\n       </div>\",\r\n            update: function (n, d) {\r\n                var input = n.querySelector('input');\r\n                input.onchange = function () {\r\n                    col.setValue(d.v, d.dataIndex, this.value);\r\n                };\r\n                input.onclick = function (event) {\r\n                    event.stopPropagation();\r\n                };\r\n                n.style.width = input.style.width = col.getWidth() + 'px';\r\n                input.value = col.getLabel(d.v, d.dataIndex);\r\n                n.querySelector('span').textContent = col.getLabel(d.v, d.dataIndex);\r\n            }\r\n        };\r\n    },\r\n    createCanvas: function (col, context) {\r\n        return function (ctx, d, i, dx, dy) {\r\n            var hovered = context.hovered(d.dataIndex);\r\n            if (hovered) {\r\n                var overlay = showOverlay(context.idPrefix + col.id, dx, dy);\r\n                overlay.style.width = col.getWidth() + 'px';\r\n                overlay.innerHTML = \"<input type=\\\"text\\\" value=\\\"\" + col.getValue(d.v, d.dataIndex) + \"\\\" style=\\\"width:\" + col.getWidth() + \"px\\\">\";\r\n                var input = overlay.childNodes[0];\r\n                input.onchange = function () {\r\n                    col.setValue(d.v, d.dataIndex, this.value);\r\n                };\r\n                input.onclick = function (event) {\r\n                    event.stopPropagation();\r\n                };\r\n            }\r\n            else {\r\n                clipText(ctx, col.getLabel(d.v, d.dataIndex), 0, 0, col.getWidth(), context.textHints);\r\n            }\r\n        };\r\n    }\r\n};\r\nfunction showOverlay(id, dx, dy) {\r\n    var overlay = document.querySelector(\"div.lu-overlay#O\" + id);\r\n    if (!overlay) {\r\n        overlay = document.createElement('div');\r\n        overlay.classList.add('lu-overlay');\r\n        overlay.id = 'O' + id;\r\n        document.querySelector('.lu-body').appendChild(overlay);\r\n    }\r\n    overlay.style.display = 'block';\r\n    overlay.style.left = dx + 'px';\r\n    overlay.style.top = dy + 'px';\r\n    return overlay;\r\n}\r\nexport function hideOverlays() {\r\n    forEach(document.querySelector('div.lu-body'), 'div.lu-overlay', function (d) { return d.style.display = null; });\r\n}\r\nvar link = {\r\n    createSVG: function (col, context) {\r\n        return {\r\n            template: \"<text class=\\\"link text\\\" clip-path=\\\"url(#cp\" + context.idPrefix + \"clipCol\" + col.id + \")\\\"></text>\",\r\n            update: function (n, d) {\r\n                n.innerHTML = col.isLink(d.v, d.dataIndex) ? \"<a class=\\\"link\\\" xlink:href=\\\"\" + col.getValue(d.v, d.dataIndex) + \"\\\" target=\\\"_blank\\\">\" + col.getLabel(d.v, d.dataIndex) + \"</a>\" : col.getLabel(d.v, d.dataIndex);\r\n            }\r\n        };\r\n    },\r\n    createHTML: function (col) {\r\n        return {\r\n            template: \"<div class=\\\"link text\\\"></div>\",\r\n            update: function (n, d) {\r\n                n.style.width = col.getWidth() + 'px';\r\n                n.innerHTML = col.isLink(d.v, d.dataIndex) ? \"<a class=\\\"link\\\" href=\\\"\" + col.getValue(d.v, d.dataIndex) + \"\\\" target=\\\"_blank\\\">\" + col.getLabel(d.v, d.dataIndex) + \"</a>\" : col.getLabel(d.v, d.dataIndex);\r\n            }\r\n        };\r\n    },\r\n    createCanvas: function (col, context) {\r\n        return function (ctx, d, i, dx, dy) {\r\n            var isLink = col.isLink(d.v, d.dataIndex);\r\n            if (!isLink) {\r\n                clipText(ctx, col.getLabel(d.v, d.dataIndex), 0, 0, col.getWidth(), context.textHints);\r\n                return;\r\n            }\r\n            var hovered = context.hovered(d.dataIndex);\r\n            if (hovered) {\r\n                var overlay = showOverlay(context.idPrefix + col.id, dx, dy);\r\n                overlay.style.width = col.getWidth() + 'px';\r\n                overlay.innerHTML = \"<a class=\\\"link\\\" href=\\\"\" + col.getValue(d.v, d.dataIndex) + \"\\\" target=\\\"_blank\\\">\" + col.getLabel(d.v, d.dataIndex) + \"</a>\";\r\n            }\r\n            else {\r\n                var bak = ctx.fillStyle;\r\n                ctx.fillStyle = context.option('style.link', context.option('style.text', 'black'));\r\n                clipText(ctx, col.getLabel(d.v, d.dataIndex), 0, 0, col.getWidth(), context.textHints);\r\n                ctx.fillStyle = bak;\r\n            }\r\n        };\r\n    }\r\n};\r\n/**\r\n * renders a string with additional alignment behavior\r\n * one instance factory shared among strings\r\n */\r\nvar StringCellRenderer = (function () {\r\n    function StringCellRenderer() {\r\n        this.alignments = {\r\n            left: new DefaultCellRenderer(),\r\n            right: new DefaultCellRenderer('text_right', 'right'),\r\n            center: new DefaultCellRenderer('text_center', 'center')\r\n        };\r\n    }\r\n    StringCellRenderer.prototype.createSVG = function (col, context) {\r\n        return this.alignments[col.alignment].createSVG(col, context);\r\n    };\r\n    StringCellRenderer.prototype.createHTML = function (col, context) {\r\n        return this.alignments[col.alignment].createHTML(col, context);\r\n    };\r\n    StringCellRenderer.prototype.createCanvas = function (col, context) {\r\n        return this.alignments[col.alignment].createCanvas(col, context);\r\n    };\r\n    return StringCellRenderer;\r\n}());\r\n/**\r\n * renders categorical columns as a colored rect with label\r\n */\r\nexport var CategoricalCellRenderer = (function () {\r\n    function CategoricalCellRenderer(textClass) {\r\n        if (textClass === void 0) { textClass = 'cat'; }\r\n        /**\r\n         * class to append to the text elements\r\n         * @type {string}\r\n         */\r\n        this.textClass = 'cat';\r\n        this.textClass = textClass;\r\n    }\r\n    CategoricalCellRenderer.prototype.createSVG = function (col, context) {\r\n        var padding = context.option('rowPadding', 1);\r\n        return {\r\n            template: \"<g class=\\\"\" + this.textClass + \"\\\">\\n        <text clip-path=\\\"url(#cp\" + context.idPrefix + \"clipCol\" + col.id + \")\\\"></text>\\n        <rect y=\\\"\" + padding + \"\\\"></rect>\\n      </g>\",\r\n            update: function (n, d, i) {\r\n                var cell = Math.max(context.rowHeight(i) - padding * 2, 0);\r\n                attr(n.querySelector('rect'), {\r\n                    width: cell,\r\n                    height: cell\r\n                }, {\r\n                    fill: col.getColor(d.v, d.dataIndex)\r\n                });\r\n                attr(n.querySelector('text'), {\r\n                    x: context.rowHeight(i)\r\n                }).textContent = col.getLabel(d.v, d.dataIndex);\r\n            }\r\n        };\r\n    };\r\n    CategoricalCellRenderer.prototype.createHTML = function (col, context) {\r\n        var padding = context.option('rowPadding', 1);\r\n        return {\r\n            template: \"<div class=\\\"\" + this.textClass + \"\\\">\\n        <div></div>\\n        <span></span>\\n      </div>\",\r\n            update: function (n, d, i) {\r\n                var cell = Math.max(context.rowHeight(i) - padding * 2, 0);\r\n                attr(n, {}, {\r\n                    width: col.getWidth() + \"px\"\r\n                });\r\n                attr(n.querySelector('div'), {}, {\r\n                    width: cell + 'px',\r\n                    height: cell + 'px',\r\n                    'background-color': col.getColor(d.v, d.dataIndex)\r\n                });\r\n                attr(n.querySelector('span'), {}).textContent = col.getLabel(d.v, d.dataIndex);\r\n            }\r\n        };\r\n    };\r\n    CategoricalCellRenderer.prototype.createCanvas = function (col, context) {\r\n        var padding = context.option('rowPadding', 1);\r\n        return function (ctx, d, i) {\r\n            var cell = Math.max(context.rowHeight(i) - padding * 2, 0);\r\n            ctx.fillStyle = col.getColor(d.v, d.dataIndex);\r\n            ctx.fillRect(0, 0, cell, cell);\r\n            ctx.fillStyle = context.option('style.text', 'black');\r\n            clipText(ctx, col.getLabel(d.v, d.dataIndex), cell + 2, 0, col.getWidth() - cell - 2, context.textHints);\r\n        };\r\n    };\r\n    ;\r\n    return CategoricalCellRenderer;\r\n}());\r\n/**\r\n * machtes the columns and the dom nodes representing them\r\n * @param node\r\n * @param columns\r\n * @param helperType\r\n */\r\nexport function matchColumns(node, columns, helperType) {\r\n    if (helperType === void 0) { helperType = 'svg'; }\r\n    if (node.childElementCount === 0) {\r\n        // initial call fast method\r\n        node.innerHTML = columns.map(function (c) { return c.renderer.template; }).join('');\r\n        columns.forEach(function (col, i) {\r\n            var cnode = node.childNodes[i];\r\n            // set attribute for finding again\r\n            cnode.setAttribute('data-column-id', col.column.id);\r\n            // store current renderer\r\n            cnode.setAttribute('data-renderer', col.column.rendererType());\r\n        });\r\n        return;\r\n    }\r\n    function matches(c, i) {\r\n        //do both match?\r\n        var n = (node.childElementCount <= i ? null : node.childNodes[i]);\r\n        return n != null && n.getAttribute('data-column-id') === c.column.id && n.getAttribute('data-renderer') === c.column.rendererType();\r\n    }\r\n    if (columns.every(matches)) {\r\n        return; //nothing to do\r\n    }\r\n    var idsAndRenderer = new Set(columns.map(function (c) { return c.column.id + '@' + c.column.rendererType(); }));\r\n    //remove all that are not existing anymore\r\n    Array.prototype.slice.call(node.childNodes).forEach(function (n) {\r\n        var id = n.getAttribute('data-column-id');\r\n        var renderer = n.getAttribute('data-renderer');\r\n        var idAndRenderer = id + '@' + renderer;\r\n        if (!idsAndRenderer.has(idAndRenderer)) {\r\n            node.removeChild(n);\r\n        }\r\n    });\r\n    var helper = helperType === 'svg' ? document.createElementNS('http://www.w3.org/2000/svg', 'g') : document.createElement('div');\r\n    columns.forEach(function (col) {\r\n        var cnode = node.querySelector(\"[data-column-id=\\\"\" + col.column.id + \"\\\"]\");\r\n        if (!cnode) {\r\n            //create one\r\n            helper.innerHTML = col.renderer.template;\r\n            cnode = helper.childNodes[0];\r\n            cnode.setAttribute('data-column-id', col.column.id);\r\n            cnode.setAttribute('data-renderer', col.column.rendererType());\r\n        }\r\n        node.appendChild(cnode);\r\n    });\r\n}\r\n/**\r\n * renders a stacked column using composite pattern\r\n */\r\nvar StackCellRenderer = (function () {\r\n    function StackCellRenderer(nestingPossible) {\r\n        if (nestingPossible === void 0) { nestingPossible = true; }\r\n        this.nestingPossible = nestingPossible;\r\n    }\r\n    StackCellRenderer.prototype.createData = function (col, context) {\r\n        var stacked = this.nestingPossible && context.option('stacked', true);\r\n        var padding = context.option('columnPadding', 0);\r\n        var offset = 0;\r\n        return col.children.map(function (d) {\r\n            var shift = offset;\r\n            offset += d.getWidth();\r\n            offset += (!stacked ? padding : 0);\r\n            return {\r\n                column: d,\r\n                shift: shift,\r\n                stacked: stacked,\r\n                renderer: context.renderer(d)\r\n            };\r\n        });\r\n    };\r\n    StackCellRenderer.prototype.createSVG = function (col, context) {\r\n        var cols = this.createData(col, context);\r\n        return {\r\n            template: \"<g class=\\\"stack component\" + context.option('stackLevel', 0) + \"\\\">\" + cols.map(function (d) { return d.renderer.template; }).join('') + \"</g>\",\r\n            update: function (n, d, i) {\r\n                var stackShift = 0;\r\n                matchColumns(n, cols);\r\n                cols.forEach(function (col, ci) {\r\n                    var cnode = n.childNodes[ci];\r\n                    cnode.setAttribute('transform', \"translate(\" + (col.shift - stackShift) + \",0)\");\r\n                    col.renderer.update(cnode, d, i);\r\n                    if (col.stacked) {\r\n                        stackShift += col.column.getWidth() * (1 - col.column.getValue(d.v, d.dataIndex));\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    };\r\n    StackCellRenderer.prototype.createHTML = function (col, context) {\r\n        var cols = this.createData(col, context);\r\n        return {\r\n            template: \"<div class=\\\"stack component\" + context.option('stackLevel', 0) + \"\\\">\" + cols.map(function (d) { return d.renderer.template; }).join('') + \"</div>\",\r\n            update: function (n, d, i) {\r\n                var stackShift = 0;\r\n                matchColumns(n, cols, 'html');\r\n                cols.forEach(function (col, ci) {\r\n                    var cnode = n.childNodes[ci];\r\n                    cnode.style.transform = \"translate(\" + (col.shift - stackShift) + \"px,0)\";\r\n                    col.renderer.update(cnode, d, i);\r\n                    if (col.stacked) {\r\n                        stackShift += col.column.getWidth() * (1 - col.column.getValue(d.v, d.dataIndex));\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    };\r\n    StackCellRenderer.prototype.createCanvas = function (col, context) {\r\n        var cols = this.createData(col, context);\r\n        return function (ctx, d, i, dx, dy) {\r\n            var stackShift = 0;\r\n            cols.forEach(function (col) {\r\n                var shift = col.shift - stackShift;\r\n                ctx.translate(shift, 0);\r\n                col.renderer(ctx, d, i, dx + shift, dy);\r\n                ctx.translate(-shift, 0);\r\n                if (col.stacked) {\r\n                    stackShift += col.column.getWidth() * (1 - col.column.getValue(d.v, d.dataIndex));\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return StackCellRenderer;\r\n}());\r\nexport var defaultCellRenderer = new DefaultCellRenderer();\r\nvar combineCellRenderer = new BarCellRenderer(false, function (d, i, col) { return col.getColor(d); });\r\n/**\r\n * default render factories\r\n */\r\nexport var renderers = {\r\n    rank: new DefaultCellRenderer('rank', 'right'),\r\n    boolean: new DefaultCellRenderer('boolean', 'center'),\r\n    number: new BarCellRenderer(),\r\n    ordinal: new BarCellRenderer(true, function (d, i, col) { return col.getColor(d); }),\r\n    string: new StringCellRenderer(),\r\n    selection: selection,\r\n    heatmap: heatmap,\r\n    link: link,\r\n    annotate: annotate,\r\n    actions: action,\r\n    stack: new StackCellRenderer(),\r\n    nested: new StackCellRenderer(false),\r\n    categorical: new CategoricalCellRenderer(),\r\n    max: combineCellRenderer,\r\n    min: combineCellRenderer,\r\n    mean: combineCellRenderer,\r\n    script: combineCellRenderer\r\n};\r\nfunction chooseRenderer(col, renderers) {\r\n    var r = renderers[col.rendererType()];\r\n    return r || defaultCellRenderer;\r\n}\r\nexport function createSVG(col, renderers, context) {\r\n    var r = chooseRenderer(col, renderers);\r\n    return (r.createSVG ? r.createSVG.bind(r) : defaultCellRenderer.createSVG.bind(r))(col, context);\r\n}\r\nexport function createHTML(col, renderers, context) {\r\n    var r = chooseRenderer(col, renderers);\r\n    return (r.createHTML ? r.createHTML.bind(r) : defaultCellRenderer.createHTML.bind(r))(col, context);\r\n}\r\nexport function createCanvas(col, renderers, context) {\r\n    var r = chooseRenderer(col, renderers);\r\n    return (r.createCanvas ? r.createCanvas.bind(r) : defaultCellRenderer.createCanvas.bind(r))(col, context);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/renderer.ts\n// module id = 6\n// module chunks = 0 1","/**\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport { isSupportType, models, createActionDesc, isNumberColumn, createStackDesc, createRankDesc, createSelectionDesc } from '../model';\r\nimport Ranking from '../model/Ranking';\r\nimport RankColumn from '../model/RankColumn';\r\nimport { merge, AEventDispatcher, delayedCall } from '../utils';\r\n/**\r\n * a basic data provider holding the data and rankings\r\n */\r\nvar ADataProvider = (function (_super) {\r\n    __extends(ADataProvider, _super);\r\n    function ADataProvider(options) {\r\n        if (options === void 0) { options = {}; }\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * all rankings\r\n         * @type {Array}\r\n         * @private\r\n         */\r\n        _this.rankings_ = [];\r\n        /**\r\n         * the current selected indices\r\n         * @type {Set}\r\n         */\r\n        _this.selection = new Set();\r\n        _this.uid = 0;\r\n        /**\r\n         * lookup map of a column type to its column implementation\r\n         */\r\n        _this.columnTypes = merge({}, models());\r\n        _this.multiSelections = true;\r\n        _this.createHelper = function (d) {\r\n            //factory method for restoring a column\r\n            var desc = _this.fromDescRef(d.desc);\r\n            var c = null;\r\n            if (desc && desc.type) {\r\n                _this.fixDesc(d.desc);\r\n                var type = _this.columnTypes[desc.type];\r\n                c = new type(d.id, desc);\r\n                c.restore(d, _this.createHelper);\r\n            }\r\n            return c;\r\n        };\r\n        _this.columnTypes = merge(models(), options.columnTypes || {});\r\n        _this.multiSelections = options.multiSelection !== false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * events:\r\n     *  * column changes: addColumn, removeColumn\r\n     *  * ranking changes: addRanking, removeRanking\r\n     *  * dirty: dirty, dirtyHeder, dirtyValues\r\n     *  * selectionChanged\r\n     * @returns {string[]}\r\n     */\r\n    ADataProvider.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat([\r\n            ADataProvider.EVENT_ADD_COLUMN, ADataProvider.EVENT_REMOVE_COLUMN,\r\n            ADataProvider.EVENT_ADD_RANKING, ADataProvider.EVENT_REMOVE_RANKING,\r\n            ADataProvider.EVENT_DIRTY, ADataProvider.EVENT_DIRTY_HEADER, ADataProvider.EVENT_DIRTY_VALUES,\r\n            ADataProvider.EVENT_ORDER_CHANGED, ADataProvider.EVENT_SELECTION_CHANGED, ADataProvider.EVENT_ADD_DESC,\r\n            ADataProvider.EVENT_JUMP_TO_NEAREST\r\n        ]);\r\n    };\r\n    /**\r\n     * adds a new ranking\r\n     * @param existing an optional existing ranking to clone\r\n     * @return the new ranking\r\n     */\r\n    ADataProvider.prototype.pushRanking = function (existing) {\r\n        var r = this.cloneRanking(existing);\r\n        this.insertRanking(r);\r\n        return r;\r\n    };\r\n    ADataProvider.prototype.takeSnapshot = function (col) {\r\n        var r = this.cloneRanking();\r\n        r.push(this.clone(col));\r\n        this.insertRanking(r);\r\n        return r;\r\n    };\r\n    ADataProvider.prototype.insertRanking = function (r, index) {\r\n        if (index === void 0) { index = this.rankings_.length; }\r\n        this.rankings_.splice(index, 0, r);\r\n        this.forward(r, Ranking.EVENT_ADD_COLUMN + '.provider', Ranking.EVENT_REMOVE_COLUMN + '.provider', Ranking.EVENT_DIRTY + '.provider', Ranking.EVENT_DIRTY_HEADER + '.provider', Ranking.EVENT_ORDER_CHANGED + '.provider', Ranking.EVENT_DIRTY_VALUES + '.provider');\r\n        var that = this;\r\n        //delayed reordering per ranking\r\n        r.on(Ranking.EVENT_DIRTY_ORDER + '.provider', delayedCall(function () {\r\n            that.triggerReorder(this.source);\r\n        }, 100, null));\r\n        this.fire([ADataProvider.EVENT_ADD_RANKING, ADataProvider.EVENT_DIRTY_HEADER, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY], r, index);\r\n        this.triggerReorder(r);\r\n    };\r\n    ADataProvider.prototype.triggerReorder = function (ranking) {\r\n        this.sort(ranking).then(function (order) { return ranking.setOrder(order); });\r\n    };\r\n    /**\r\n     * removes a ranking from this data provider\r\n     * @param ranking\r\n     * @returns {boolean}\r\n     */\r\n    ADataProvider.prototype.removeRanking = function (ranking) {\r\n        var i = this.rankings_.indexOf(ranking);\r\n        if (i < 0) {\r\n            return false;\r\n        }\r\n        this.unforward(ranking, Ranking.EVENT_ADD_COLUMN + '.provider', Ranking.EVENT_REMOVE_COLUMN + '.provider', Ranking.EVENT_DIRTY + '.provider', Ranking.EVENT_DIRTY_HEADER + '.provider', Ranking.EVENT_ORDER_CHANGED + '.provider', Ranking.EVENT_DIRTY_VALUES + '.provider');\r\n        this.rankings_.splice(i, 1);\r\n        ranking.on(Ranking.EVENT_DIRTY_ORDER + '.provider', null);\r\n        this.cleanUpRanking(ranking);\r\n        this.fire([ADataProvider.EVENT_REMOVE_RANKING, ADataProvider.EVENT_DIRTY_HEADER, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY], ranking, i);\r\n        return true;\r\n    };\r\n    /**\r\n     * removes all rankings\r\n     */\r\n    ADataProvider.prototype.clearRankings = function () {\r\n        var _this = this;\r\n        this.rankings_.forEach(function (ranking) {\r\n            _this.unforward(ranking, Ranking.EVENT_ADD_COLUMN + '.provider', Ranking.EVENT_REMOVE_COLUMN + '.provider', Ranking.EVENT_DIRTY + '.provider', Ranking.EVENT_DIRTY_HEADER + '.provider', Ranking.EVENT_ORDER_CHANGED + '.provider', Ranking.EVENT_DIRTY_VALUES + '.provider');\r\n            ranking.on(Ranking.EVENT_DIRTY_ORDER + '.provider', null);\r\n            _this.cleanUpRanking(ranking);\r\n        });\r\n        this.rankings_ = [];\r\n        this.fire([ADataProvider.EVENT_REMOVE_RANKING, ADataProvider.EVENT_DIRTY_HEADER, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY], null);\r\n    };\r\n    /**\r\n     * returns a list of all current rankings\r\n     * @returns {Ranking[]}\r\n     */\r\n    ADataProvider.prototype.getRankings = function () {\r\n        return this.rankings_.slice();\r\n    };\r\n    /**\r\n     * returns the last ranking for quicker access\r\n     * @returns {Ranking}\r\n     */\r\n    ADataProvider.prototype.getLastRanking = function () {\r\n        return this.rankings_[this.rankings_.length - 1];\r\n    };\r\n    /**\r\n     * hook method for cleaning up a ranking\r\n     * @param ranking\r\n     */\r\n    ADataProvider.prototype.cleanUpRanking = function (ranking) {\r\n        //nothing to do\r\n    };\r\n    /**\r\n     * adds a column to a ranking described by its column description\r\n     * @param ranking the ranking to add the column to\r\n     * @param desc the description of the column\r\n     * @return {Column} the newly created column or null\r\n     */\r\n    ADataProvider.prototype.push = function (ranking, desc) {\r\n        var r = this.create(desc);\r\n        if (r) {\r\n            ranking.push(r);\r\n            return r;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * adds a column to a ranking described by its column description\r\n     * @param ranking the ranking to add the column to\r\n     * @param index the position to insert the column\r\n     * @param desc the description of the column\r\n     * @return {Column} the newly created column or null\r\n     */\r\n    ADataProvider.prototype.insert = function (ranking, index, desc) {\r\n        var r = this.create(desc);\r\n        if (r) {\r\n            ranking.insert(r, index);\r\n            return r;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * creates a new unique id for a column\r\n     * @returns {string}\r\n     */\r\n    ADataProvider.prototype.nextId = function () {\r\n        return 'col' + (this.uid++);\r\n    };\r\n    ADataProvider.prototype.fixDesc = function (desc) {\r\n        var _this = this;\r\n        //hacks for provider dependent descriptors\r\n        if (desc.type === 'rank') {\r\n            desc.accessor = this.rankAccessor.bind(this);\r\n        }\r\n        else if (desc.type === 'selection') {\r\n            desc.accessor = function (row, index) { return _this.isSelected(index); };\r\n            desc.setter = function (row, index, value) { return value ? _this.select(index) : _this.deselect(index); };\r\n        }\r\n    };\r\n    /**\r\n     * creates an internal column model out of the given column description\r\n     * @param desc\r\n     * @returns {Column] the new column or null if it can't be created\r\n     */\r\n    ADataProvider.prototype.create = function (desc) {\r\n        this.fixDesc(desc);\r\n        //find by type and instantiate\r\n        var type = this.columnTypes[desc.type];\r\n        if (type) {\r\n            return new type(this.nextId(), desc);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * clones a column by dumping and restoring\r\n     * @param col\r\n     * @returns {Column}\r\n     */\r\n    ADataProvider.prototype.clone = function (col) {\r\n        var dump = this.dumpColumn(col);\r\n        return this.restoreColumn(dump);\r\n    };\r\n    /**\r\n     * restores a column from a dump\r\n     * @param dump\r\n     * @returns {Column}\r\n     */\r\n    ADataProvider.prototype.restoreColumn = function (dump) {\r\n        var _this = this;\r\n        var create = function (d) {\r\n            var desc = _this.fromDescRef(d.desc);\r\n            var type = _this.columnTypes[desc.type];\r\n            _this.fixDesc(desc);\r\n            var c = new type('', desc);\r\n            c.restore(d, create);\r\n            c.assignNewId(_this.nextId.bind(_this));\r\n            return c;\r\n        };\r\n        return create(dump);\r\n    };\r\n    /**\r\n     * finds a column in all rankings returning the first match\r\n     * @param id_or_filter by id or by a filter function\r\n     * @returns {Column}\r\n     */\r\n    ADataProvider.prototype.find = function (id_or_filter) {\r\n        //convert to function\r\n        var filter = typeof (id_or_filter) === 'string' ? function (col) { return col.id === id_or_filter; } : id_or_filter;\r\n        for (var i = 0; i < this.rankings_.length; ++i) {\r\n            var r = this.rankings_[i].find(filter);\r\n            if (r) {\r\n                return r;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * dumps this whole provider including selection and the rankings\r\n     * @returns {{uid: number, selection: number[], rankings: *[]}}\r\n     */\r\n    ADataProvider.prototype.dump = function () {\r\n        var _this = this;\r\n        return {\r\n            uid: this.uid,\r\n            selection: this.getSelection(),\r\n            rankings: this.rankings_.map(function (r) { return r.dump(_this.toDescRef); })\r\n        };\r\n    };\r\n    /**\r\n     * dumps a specific column\r\n     * @param col\r\n     * @returns {any}\r\n     */\r\n    ADataProvider.prototype.dumpColumn = function (col) {\r\n        return col.dump(this.toDescRef);\r\n    };\r\n    /**\r\n     * for better dumping describe reference, by default just return the description\r\n     * @param desc\r\n     * @returns {any}\r\n     */\r\n    ADataProvider.prototype.toDescRef = function (desc) {\r\n        return desc;\r\n    };\r\n    /**\r\n     * inverse operation of toDescRef\r\n     * @param descRef\r\n     * @returns {any}\r\n     */\r\n    ADataProvider.prototype.fromDescRef = function (descRef) {\r\n        return descRef;\r\n    };\r\n    ADataProvider.prototype.restoreRanking = function (dump) {\r\n        var ranking = this.cloneRanking();\r\n        ranking.restore(dump, this.createHelper);\r\n        //if no rank column add one\r\n        if (!ranking.children.some(function (d) { return d instanceof RankColumn; })) {\r\n            ranking.insert(this.create(createRankDesc()), 0);\r\n        }\r\n        var idGenerator = this.nextId.bind(this);\r\n        ranking.children.forEach(function (c) { return c.assignNewId(idGenerator); });\r\n        return ranking;\r\n    };\r\n    ADataProvider.prototype.restore = function (dump) {\r\n        var _this = this;\r\n        //clean old\r\n        this.clearRankings();\r\n        //restore selection\r\n        this.uid = dump.uid || 0;\r\n        if (dump.selection) {\r\n            dump.selection.forEach(function (s) { return _this.selection.add(s); });\r\n        }\r\n        //restore rankings\r\n        if (dump.rankings) {\r\n            dump.rankings.forEach(function (r) {\r\n                var ranking = _this.cloneRanking();\r\n                ranking.restore(r, _this.createHelper);\r\n                //if no rank column add one\r\n                if (!ranking.children.some(function (d) { return d instanceof RankColumn; })) {\r\n                    ranking.insert(_this.create(createRankDesc()), 0);\r\n                }\r\n                _this.insertRanking(ranking);\r\n            });\r\n        }\r\n        if (dump.layout) {\r\n            Object.keys(dump.layout).forEach(function (key) {\r\n                _this.deriveRanking(dump.layout[key]);\r\n            });\r\n        }\r\n        //assign new ids\r\n        var idGenerator = this.nextId.bind(this);\r\n        this.rankings_.forEach(function (r) {\r\n            r.children.forEach(function (c) { return c.assignNewId(idGenerator); });\r\n        });\r\n    };\r\n    /**\r\n     * generates a default ranking by using all column descriptions ones\r\n     */\r\n    ADataProvider.prototype.deriveDefault = function () {\r\n        var _this = this;\r\n        if (this.rankings_.length > 0) {\r\n            //no default if we have a ranking\r\n            return;\r\n        }\r\n        var r = this.pushRanking();\r\n        this.getColumns().forEach(function (col) {\r\n            if (!isSupportType(col)) {\r\n                _this.push(r, col);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * derives a ranking from an old layout bundle format\r\n     * @param bundle\r\n     */\r\n    ADataProvider.prototype.deriveRanking = function (bundle) {\r\n        var _this = this;\r\n        var ranking = this.cloneRanking();\r\n        ranking.clear();\r\n        var toCol = function (column) {\r\n            switch (column.type) {\r\n                case 'rank':\r\n                    return _this.create(createRankDesc());\r\n                case 'selection':\r\n                    return _this.create(createSelectionDesc());\r\n                case 'actions': {\r\n                    var r = _this.create(createActionDesc(column.label || 'actions'));\r\n                    r.restore(column, null);\r\n                    return r;\r\n                }\r\n                case 'stacked': {\r\n                    //create a stacked one\r\n                    var r_1 = _this.create(createStackDesc(column.label || 'Combined'));\r\n                    (column.children || []).forEach(function (col) {\r\n                        var c = toCol(col);\r\n                        if (c) {\r\n                            r_1.push(c);\r\n                        }\r\n                    });\r\n                    return r_1;\r\n                }\r\n                default: {\r\n                    var desc = _this.findDesc(column.column);\r\n                    if (desc) {\r\n                        var r = _this.create(desc);\r\n                        column.label = column.label || desc.label || desc.column;\r\n                        r.restore(column, null);\r\n                        return r;\r\n                    }\r\n                    return null;\r\n                }\r\n            }\r\n        };\r\n        bundle.forEach(function (column) {\r\n            var col = toCol(column);\r\n            if (col) {\r\n                ranking.push(col);\r\n            }\r\n        });\r\n        //if no rank column add one\r\n        if (!ranking.children.some(function (d) { return d instanceof RankColumn; })) {\r\n            ranking.insert(this.create(createRankDesc()), 0);\r\n        }\r\n        this.insertRanking(ranking);\r\n        return ranking;\r\n    };\r\n    /**\r\n     * is the given row selected\r\n     * @param index\r\n     * @return {boolean}\r\n     */\r\n    ADataProvider.prototype.isSelected = function (index) {\r\n        return this.selection.has(index);\r\n    };\r\n    /**\r\n     * also select the given row\r\n     * @param index\r\n     */\r\n    ADataProvider.prototype.select = function (index) {\r\n        if (this.selection.has(index)) {\r\n            return; //no change\r\n        }\r\n        if (!this.multiSelections && this.selection.size > 0) {\r\n            this.selection = new Set();\r\n        }\r\n        this.selection.add(index);\r\n        this.fire(ADataProvider.EVENT_SELECTION_CHANGED, this.getSelection());\r\n    };\r\n    ADataProvider.prototype.jumpToNearest = function (indices) {\r\n        if (indices.length === 0) {\r\n            return;\r\n        }\r\n        this.fire(ADataProvider.EVENT_JUMP_TO_NEAREST, indices);\r\n    };\r\n    /**\r\n     * also select all the given rows\r\n     * @param indices\r\n     */\r\n    ADataProvider.prototype.selectAll = function (indices) {\r\n        var _this = this;\r\n        if (indices.every(function (i) { return _this.selection.has(i); })) {\r\n            return; //no change\r\n        }\r\n        if (!this.multiSelections) {\r\n            this.selection = new Set();\r\n            indices = indices.slice(0, 1); //just the first one\r\n        }\r\n        indices.forEach(function (index) {\r\n            _this.selection.add(index);\r\n        });\r\n        this.fire(ADataProvider.EVENT_SELECTION_CHANGED, this.getSelection());\r\n    };\r\n    /**\r\n     * set the selection to the given rows\r\n     * @param indices\r\n     */\r\n    ADataProvider.prototype.setSelection = function (indices) {\r\n        var _this = this;\r\n        if (this.selection.size === indices.length && indices.every(function (i) { return _this.selection.has(i); })) {\r\n            return; //no change\r\n        }\r\n        this.selection = new Set();\r\n        this.selectAll(indices);\r\n    };\r\n    /**\r\n     * toggles the selection of the given data index\r\n     * @param index\r\n     * @param additional just this element or all\r\n     * @returns {boolean} whether the index is currently selected\r\n     */\r\n    ADataProvider.prototype.toggleSelection = function (index, additional) {\r\n        if (additional === void 0) { additional = false; }\r\n        if (this.isSelected(index)) {\r\n            if (additional) {\r\n                this.deselect(index);\r\n            }\r\n            else {\r\n                this.clearSelection();\r\n            }\r\n            return false;\r\n        }\r\n        else {\r\n            if (additional) {\r\n                this.select(index);\r\n            }\r\n            else {\r\n                this.setSelection([index]);\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * deselect the given row\r\n     * @param index\r\n     */\r\n    ADataProvider.prototype.deselect = function (index) {\r\n        if (!this.selection.has(index)) {\r\n            return; //no change\r\n        }\r\n        this.selection.delete(index);\r\n        this.fire(ADataProvider.EVENT_SELECTION_CHANGED, this.getSelection());\r\n    };\r\n    /**\r\n     * returns a promise containing the selected rows\r\n     * @return {Promise<any[]>}\r\n     */\r\n    ADataProvider.prototype.selectedRows = function () {\r\n        if (this.selection.size == 0) {\r\n            return Promise.resolve([]);\r\n        }\r\n        return this.view(this.getSelection());\r\n    };\r\n    /**\r\n     * returns the currently selected indices\r\n     * @returns {Array}\r\n     */\r\n    ADataProvider.prototype.getSelection = function () {\r\n        var indices = [];\r\n        this.selection.forEach(function (s) { return indices.push(s); });\r\n        indices.sort();\r\n        return indices;\r\n    };\r\n    /**\r\n     * clears the selection\r\n     */\r\n    ADataProvider.prototype.clearSelection = function () {\r\n        if (this.selection.size === 0) {\r\n            return; //no change\r\n        }\r\n        this.selection = new Set();\r\n        this.fire(ADataProvider.EVENT_SELECTION_CHANGED, [], false);\r\n    };\r\n    /**\r\n     * utility to export a ranking to a table with the given separator\r\n     * @param ranking\r\n     * @param options\r\n     * @returns {Promise<string>}\r\n     */\r\n    ADataProvider.prototype.exportTable = function (ranking, options) {\r\n        if (options === void 0) { options = {}; }\r\n        options = merge({\r\n            separator: '\\t',\r\n            newline: '\\n',\r\n            header: true,\r\n            quote: false,\r\n            quoteChar: '\"',\r\n            filter: function (c) { return !isSupportType(c); }\r\n        }, options);\r\n        //optionally quote not numbers\r\n        function quote(l, c) {\r\n            if (options.quote && (!c || !isNumberColumn(c))) {\r\n                return options.quoteChar + l + options.quoteChar;\r\n            }\r\n            return l;\r\n        }\r\n        var columns = ranking.flatColumns.filter(function (c) { return options.filter(c.desc); });\r\n        var order = ranking.getOrder();\r\n        return this.view(order).then(function (data) {\r\n            var r = [];\r\n            if (options.header) {\r\n                r.push(columns.map(function (d) { return quote(d.label); }).join(options.separator));\r\n            }\r\n            data.forEach(function (row, i) {\r\n                r.push(columns.map(function (c) { return quote(c.getLabel(row, order[i]), c); }).join(options.separator));\r\n            });\r\n            return r.join(options.newline);\r\n        });\r\n    };\r\n    return ADataProvider;\r\n}(AEventDispatcher));\r\nADataProvider.EVENT_SELECTION_CHANGED = 'selectionChanged';\r\nADataProvider.EVENT_ADD_COLUMN = Ranking.EVENT_ADD_COLUMN;\r\nADataProvider.EVENT_REMOVE_COLUMN = Ranking.EVENT_REMOVE_COLUMN;\r\nADataProvider.EVENT_ADD_RANKING = 'addRanking';\r\nADataProvider.EVENT_REMOVE_RANKING = 'removeRanking';\r\nADataProvider.EVENT_DIRTY = Ranking.EVENT_DIRTY;\r\nADataProvider.EVENT_DIRTY_HEADER = Ranking.EVENT_DIRTY_HEADER;\r\nADataProvider.EVENT_DIRTY_VALUES = Ranking.EVENT_DIRTY_VALUES;\r\nADataProvider.EVENT_ORDER_CHANGED = Ranking.EVENT_ORDER_CHANGED;\r\nADataProvider.EVENT_ADD_DESC = 'addDesc';\r\nADataProvider.EVENT_JUMP_TO_NEAREST = 'jumpToNearest';\r\nexport default ADataProvider;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/provider/ADataProvider.ts\n// module id = 7\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport Column from './Column';\r\nexport function isMultiLevelColumn(col) {\r\n    return typeof (col.getCollapsed) === 'function';\r\n}\r\n/**\r\n * implementation of a combine column, standard operations how to select\r\n */\r\nvar CompositeColumn = (function (_super) {\r\n    __extends(CompositeColumn, _super);\r\n    function CompositeColumn(id, desc) {\r\n        var _this = _super.call(this, id, desc) || this;\r\n        _this._children = [];\r\n        return _this;\r\n    }\r\n    CompositeColumn.prototype.assignNewId = function (idGenerator) {\r\n        _super.prototype.assignNewId.call(this, idGenerator);\r\n        this._children.forEach(function (c) { return c.assignNewId(idGenerator); });\r\n    };\r\n    Object.defineProperty(CompositeColumn.prototype, \"children\", {\r\n        get: function () {\r\n            return this._children.slice();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CompositeColumn.prototype, \"length\", {\r\n        get: function () {\r\n            return this._children.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompositeColumn.prototype.flatten = function (r, offset, levelsToGo, padding) {\r\n        if (levelsToGo === void 0) { levelsToGo = 0; }\r\n        if (padding === void 0) { padding = 0; }\r\n        var w = 0;\r\n        //no more levels or just this one\r\n        if (levelsToGo === 0 || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\r\n            w = this.getCompressed() ? Column.COMPRESSED_WIDTH : this.getWidth();\r\n            if (levelsToGo === 0) {\r\n                return w;\r\n            }\r\n        }\r\n        //push children\r\n        this._children.forEach(function (c) {\r\n            if (!c.isHidden() || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\r\n                c.flatten(r, offset, levelsToGo - 1, padding);\r\n            }\r\n        });\r\n        return w;\r\n    };\r\n    CompositeColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        r.children = this._children.map(function (d) { return d.dump(toDescRef); });\r\n        return r;\r\n    };\r\n    CompositeColumn.prototype.restore = function (dump, factory) {\r\n        var _this = this;\r\n        dump.children.map(function (child) {\r\n            var c = factory(child);\r\n            if (c) {\r\n                _this.push(c);\r\n            }\r\n        });\r\n        _super.prototype.restore.call(this, dump, factory);\r\n    };\r\n    /**\r\n     * inserts a column at a the given position\r\n     * @param col\r\n     * @param index\r\n     * @returns {any}\r\n     */\r\n    CompositeColumn.prototype.insert = function (col, index) {\r\n        this._children.splice(index, 0, col);\r\n        //listen and propagate events\r\n        return this.insertImpl(col, index);\r\n    };\r\n    CompositeColumn.prototype.insertImpl = function (col, index) {\r\n        col.parent = this;\r\n        this.forward(col, Column.EVENT_DIRTY_HEADER + '.combine', Column.EVENT_DIRTY_VALUES + '.combine', Column.EVENT_DIRTY + '.combine', Column.EVENT_FILTER_CHANGED + '.combine');\r\n        this.fire([Column.EVENT_ADD_COLUMN, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], col, index);\r\n        return col;\r\n    };\r\n    CompositeColumn.prototype.push = function (col) {\r\n        return this.insert(col, this._children.length);\r\n    };\r\n    CompositeColumn.prototype.at = function (index) {\r\n        return this._children[index];\r\n    };\r\n    CompositeColumn.prototype.indexOf = function (col) {\r\n        return this._children.indexOf(col);\r\n    };\r\n    CompositeColumn.prototype.insertAfter = function (col, ref) {\r\n        var i = this.indexOf(ref);\r\n        if (i < 0) {\r\n            return null;\r\n        }\r\n        return this.insert(col, i + 1);\r\n    };\r\n    CompositeColumn.prototype.remove = function (child) {\r\n        var i = this._children.indexOf(child);\r\n        if (i < 0) {\r\n            return false;\r\n        }\r\n        this._children.splice(i, 1); //remove and deregister listeners\r\n        return this.removeImpl(child);\r\n    };\r\n    CompositeColumn.prototype.removeImpl = function (child) {\r\n        child.parent = null;\r\n        this.unforward(child, Column.EVENT_DIRTY_HEADER + '.combine', Column.EVENT_DIRTY_VALUES + '.combine', Column.EVENT_DIRTY + '.combine', Column.EVENT_FILTER_CHANGED + '.combine');\r\n        this.fire([Column.EVENT_REMOVE_COLUMN, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], child);\r\n        return true;\r\n    };\r\n    CompositeColumn.prototype.getColor = function (row, index) {\r\n        return this.color;\r\n    };\r\n    CompositeColumn.prototype.isFiltered = function () {\r\n        return this._children.some(function (d) { return d.isFiltered(); });\r\n    };\r\n    CompositeColumn.prototype.filter = function (row, index) {\r\n        return this._children.every(function (d) { return d.filter(row, index); });\r\n    };\r\n    /**\r\n     * describe the column if it is a sorting criteria\r\n     * @param toId helper to convert a description to an id\r\n     * @return {string} json compatible\r\n     */\r\n    CompositeColumn.prototype.toSortingDesc = function (toId) {\r\n        return this._children.map(function (c) { return c.toSortingDesc(toId); });\r\n    };\r\n    return CompositeColumn;\r\n}(Column));\r\nexport default CompositeColumn;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/CompositeColumn.ts\n// module id = 8\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport { format } from 'd3';\r\nimport CompositeColumn from './CompositeColumn';\r\nimport NumberColumn, { isNumberColumn, numberCompare } from './NumberColumn';\r\n/**\r\n * implementation of a combine column, standard operations how to select\r\n */\r\nvar CompositeNumberColumn = (function (_super) {\r\n    __extends(CompositeNumberColumn, _super);\r\n    function CompositeNumberColumn(id, desc) {\r\n        var _this = _super.call(this, id, desc) || this;\r\n        _this.missingValue = 0;\r\n        _this.numberFormat = format('.3n');\r\n        if (desc.numberFormat) {\r\n            _this.numberFormat = format(desc.numberFormat);\r\n        }\r\n        return _this;\r\n    }\r\n    CompositeNumberColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        r.missingValue = this.missingValue;\r\n        return r;\r\n    };\r\n    CompositeNumberColumn.prototype.restore = function (dump, factory) {\r\n        if (dump.missingValue) {\r\n            this.missingValue = dump.missingValue;\r\n        }\r\n        if (dump.numberFormat) {\r\n            this.numberFormat = format(dump.numberFormat);\r\n        }\r\n        _super.prototype.restore.call(this, dump, factory);\r\n    };\r\n    /**\r\n     * inserts a column at a the given position\r\n     * @param col\r\n     * @param index\r\n     * @returns {any}\r\n     */\r\n    CompositeNumberColumn.prototype.insert = function (col, index) {\r\n        if (!isNumberColumn(col)) {\r\n            return null;\r\n        }\r\n        return _super.prototype.insert.call(this, col, index);\r\n    };\r\n    CompositeNumberColumn.prototype.getLabel = function (row, index) {\r\n        var v = this.getValue(row, index);\r\n        //keep non number if it is not a number else convert using formatter\r\n        return '' + (typeof v === 'number' ? this.numberFormat(v) : v);\r\n    };\r\n    CompositeNumberColumn.prototype.getValue = function (row, index) {\r\n        //weighted sum\r\n        var v = this.compute(row, index);\r\n        if (typeof (v) === 'undefined' || v == null || isNaN(v)) {\r\n            return this.missingValue;\r\n        }\r\n        return v;\r\n    };\r\n    CompositeNumberColumn.prototype.compute = function (row, index) {\r\n        return NaN;\r\n    };\r\n    CompositeNumberColumn.prototype.getNumber = function (row, index) {\r\n        return this.getValue(row, index);\r\n    };\r\n    CompositeNumberColumn.prototype.compare = function (a, b, aIndex, bIndex) {\r\n        return numberCompare(this.getValue(a, aIndex), this.getValue(b, bIndex));\r\n    };\r\n    CompositeNumberColumn.prototype.rendererType = function () {\r\n        return NumberColumn.prototype.rendererType.call(this);\r\n    };\r\n    return CompositeNumberColumn;\r\n}(CompositeColumn));\r\nexport default CompositeNumberColumn;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/CompositeNumberColumn.ts\n// module id = 9\n// module chunks = 0 1","/**\r\n * Created by Samuel Gratzl on 06.08.2015.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport { merge } from '../utils';\r\nimport ValueColumn from './ValueColumn';\r\nimport NumberColumn from './NumberColumn';\r\nimport StringColumn from './StringColumn';\r\nimport StackColumn from './StackColumn';\r\nimport AnnotateColumn from './AnnotateColumn';\r\nimport BooleanColumn from './BooleanColumn';\r\nimport CategoricalColumn from './CategoricalColumn';\r\nimport MinColumn from './MinColumn';\r\nimport MaxColumn from './MaxColumn';\r\nimport MeanColumn from './MeanColumn';\r\nimport RankColumn from './RankColumn';\r\nimport SelectionColumn from './SelectionColumn';\r\nimport ScriptColumn from './ScriptColumn';\r\nimport CategoricalNumberColumn from './CategoricalNumberColumn';\r\nimport NestedColumn from './NestedColumn';\r\nimport DummyColumn from './DummyColumn';\r\nimport LinkColumn from './LinkColumn';\r\nexport { default as Column, IColumnDesc } from './Column';\r\nexport { default as CompositeColumn } from './CompositeColumn';\r\nexport { createMappingFunction, ScaleMappingFunction, ScriptMappingFunction, isNumberColumn } from './NumberColumn';\r\nexport { isCategoricalColumn } from './CategoricalColumn';\r\nexport { default as Ranking, isSupportType } from './Ranking';\r\nexport { createDesc as createMinDesc } from './MinColumn';\r\nexport { createDesc as createMaxDesc } from './MaxColumn';\r\nexport { createDesc as createMeanDesc } from './MeanColumn';\r\nexport { createDesc as createRankDesc } from './RankColumn';\r\nexport { createDesc as createSelectionDesc } from './SelectionColumn';\r\nexport { createDesc as createScriptDesc } from './ScriptColumn';\r\nexport { createDesc as createNestedDesc } from './NestedColumn';\r\nexport { createDesc as createStackDesc } from './StackColumn';\r\n/**\r\n * defines a new column type\r\n * @param name\r\n * @param functions\r\n * @returns {CustomColumn}\r\n */\r\nexport function defineColumn(name, functions) {\r\n    if (functions === void 0) { functions = {}; }\r\n    var CustomColumn = (function (_super) {\r\n        __extends(CustomColumn, _super);\r\n        function CustomColumn(id, desc) {\r\n            var _this = _super.call(this, id, desc) || this;\r\n            if (typeof (_this.init) === 'function') {\r\n                _this.init.apply(_this, [].slice.apply(arguments));\r\n            }\r\n            return _this;\r\n        }\r\n        CustomColumn.prototype.init = function () {\r\n            // dummy\r\n        };\r\n        return CustomColumn;\r\n    }(ValueColumn));\r\n    CustomColumn.prototype.toString = function () { return name; };\r\n    CustomColumn.prototype = merge(CustomColumn.prototype, functions);\r\n    return CustomColumn;\r\n}\r\n/**\r\n * utility for creating an action description with optional label\r\n * @param label\r\n * @returns {{type: string, label: string}}\r\n */\r\nexport function createActionDesc(label) {\r\n    if (label === void 0) { label = 'actions'; }\r\n    return { type: 'actions', label: label };\r\n}\r\n/**\r\n * a map of all known column types\r\n */\r\nexport function models() {\r\n    return {\r\n        number: NumberColumn,\r\n        string: StringColumn,\r\n        link: LinkColumn,\r\n        stack: StackColumn,\r\n        rank: RankColumn,\r\n        boolean: BooleanColumn,\r\n        categorical: CategoricalColumn,\r\n        ordinal: CategoricalNumberColumn,\r\n        actions: DummyColumn,\r\n        annotate: AnnotateColumn,\r\n        selection: SelectionColumn,\r\n        max: MaxColumn,\r\n        min: MinColumn,\r\n        mean: MeanColumn,\r\n        script: ScriptColumn,\r\n        nested: NestedColumn\r\n    };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/index.ts\n// module id = 10\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport { ascending, scale } from 'd3';\r\nimport Column from './Column';\r\nimport ValueColumn from './ValueColumn';\r\nimport StringColumn from './StringColumn';\r\n/**\r\n * checks whether the given column or description is a categorical column, i.e. the value is a list of categories\r\n * @param col\r\n * @returns {boolean}\r\n */\r\nexport function isCategoricalColumn(col) {\r\n    return (col instanceof Column && typeof col.getCategories === 'function' || (!(col instanceof Column) && col.type.match(/(categorical|ordinal)/) != null));\r\n}\r\nfunction arrayEquals(a, b) {\r\n    var al = a != null ? a.length : 0;\r\n    var bl = b != null ? b.length : 0;\r\n    if (al !== bl) {\r\n        return false;\r\n    }\r\n    if (al === 0) {\r\n        return true;\r\n    }\r\n    return a.every(function (ai, i) { return ai === b[i]; });\r\n}\r\n/**\r\n * column for categorical values\r\n */\r\nvar CategoricalColumn = (function (_super) {\r\n    __extends(CategoricalColumn, _super);\r\n    function CategoricalColumn(id, desc) {\r\n        var _this = _super.call(this, id, desc) || this;\r\n        /**\r\n         * colors for each category\r\n         * @type {Ordinal<string, string>}\r\n         */\r\n        _this.colors = scale.category10();\r\n        /**\r\n         * category labels by default the category name itself\r\n         * @type {Array}\r\n         */\r\n        _this.catLabels = new Map();\r\n        /**\r\n         * set of categories to show\r\n         * @type {null}\r\n         * @private\r\n         */\r\n        _this.currentFilter = null;\r\n        /**\r\n         * split multiple categories\r\n         * @type {string}\r\n         */\r\n        _this.separator = ';';\r\n        _this.separator = desc.separator || _this.separator;\r\n        _this.initCategories(desc);\r\n        return _this;\r\n        //TODO infer categories from data\r\n    }\r\n    CategoricalColumn.prototype.initCategories = function (desc) {\r\n        if (desc.categories) {\r\n            var cats_1 = [], cols_1 = this.colors.range().slice(), //work on a copy since it will be manipulated\r\n            labels_1 = new Map();\r\n            desc.categories.forEach(function (cat, i) {\r\n                if (typeof cat === 'string') {\r\n                    //just the category value\r\n                    cats_1.push(cat);\r\n                }\r\n                else {\r\n                    //the name or value of the category\r\n                    cats_1.push(cat.name || cat.value);\r\n                    //optional label mapping\r\n                    if (cat.label) {\r\n                        labels_1.set(cat.name, cat.label);\r\n                    }\r\n                    //optional color\r\n                    if (cat.color) {\r\n                        cols_1[i] = cat.color;\r\n                    }\r\n                }\r\n            });\r\n            this.catLabels = labels_1;\r\n            this.colors.domain(cats_1).range(cols_1);\r\n        }\r\n    };\r\n    Object.defineProperty(CategoricalColumn.prototype, \"categories\", {\r\n        get: function () {\r\n            return this.colors.domain();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoricalColumn.prototype, \"categoryColors\", {\r\n        get: function () {\r\n            return this.colors.range();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoricalColumn.prototype, \"categoryLabels\", {\r\n        get: function () {\r\n            var _this = this;\r\n            //no mapping\r\n            if (this.catLabels === null || this.catLabels.size === 0) {\r\n                return this.categories;\r\n            }\r\n            //label or identity mapping\r\n            return this.categories.map(function (c) { return _this.catLabels.has(c) ? _this.catLabels.get(c) : c; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CategoricalColumn.prototype.colorOf = function (cat) {\r\n        return this.colors(cat);\r\n    };\r\n    CategoricalColumn.prototype.getLabel = function (row, index) {\r\n        //no mapping\r\n        if (this.catLabels === null || this.catLabels.size === 0) {\r\n            return '' + StringColumn.prototype.getValue.call(this, row, index);\r\n        }\r\n        return this.getLabels(row, index).join(this.separator);\r\n    };\r\n    CategoricalColumn.prototype.getFirstLabel = function (row, index) {\r\n        var l = this.getLabels(row, index);\r\n        return l.length > 0 ? l[0] : null;\r\n    };\r\n    CategoricalColumn.prototype.getLabels = function (row, index) {\r\n        var _this = this;\r\n        var v = StringColumn.prototype.getValue.call(this, row, index);\r\n        var r = v ? v.split(this.separator) : [];\r\n        var mapToLabel = function (values) {\r\n            if (_this.catLabels === null || _this.catLabels.size === 0) {\r\n                return values;\r\n            }\r\n            return values.map(function (v) { return _this.catLabels.has(v) ? _this.catLabels.get(v) : v; });\r\n        };\r\n        return mapToLabel(r);\r\n    };\r\n    CategoricalColumn.prototype.getValue = function (row, index) {\r\n        var r = this.getValues(row, index);\r\n        return r.length > 0 ? r[0] : null;\r\n    };\r\n    CategoricalColumn.prototype.getValues = function (row, index) {\r\n        var v = StringColumn.prototype.getValue.call(this, row, index);\r\n        return v ? v.split(this.separator) : [];\r\n    };\r\n    CategoricalColumn.prototype.getCategories = function (row, index) {\r\n        return this.getValues(row, index);\r\n    };\r\n    CategoricalColumn.prototype.getColor = function (row, index) {\r\n        var cat = this.getValue(row, index);\r\n        if (cat === null || cat === '') {\r\n            return null;\r\n        }\r\n        return this.colors(cat);\r\n    };\r\n    CategoricalColumn.prototype.getColors = function (row, index) {\r\n        return this.getCategories(row, index).map(this.colors);\r\n    };\r\n    CategoricalColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        r.filter = this.currentFilter;\r\n        r.colors = {\r\n            domain: this.colors.domain(),\r\n            range: this.colors.range(),\r\n            separator: this.separator\r\n        };\r\n        if (this.catLabels !== null && this.catLabels.size !== 0) {\r\n            r.labels = this.catLabels.entries();\r\n        }\r\n        return r;\r\n    };\r\n    CategoricalColumn.prototype.restore = function (dump, factory) {\r\n        var _this = this;\r\n        _super.prototype.restore.call(this, dump, factory);\r\n        this.currentFilter = dump.filter || null;\r\n        if (dump.colors) {\r\n            this.colors.domain(dump.colors.domain).range(dump.colors.range);\r\n        }\r\n        if (dump.labels) {\r\n            this.catLabels = new Map();\r\n            dump.labels.forEach(function (e) { return _this.catLabels.set(e.key, e.value); });\r\n        }\r\n        this.separator = dump.separator || this.separator;\r\n    };\r\n    CategoricalColumn.prototype.isFiltered = function () {\r\n        return this.currentFilter != null;\r\n    };\r\n    CategoricalColumn.prototype.filter = function (row, index) {\r\n        if (!this.isFiltered()) {\r\n            return true;\r\n        }\r\n        var vs = this.getCategories(row, index), filter = this.currentFilter;\r\n        return vs.every(function (v) {\r\n            if (Array.isArray(filter) && filter.length > 0) {\r\n                return filter.indexOf(v) >= 0;\r\n            }\r\n            else if (typeof filter === 'string' && filter.length > 0) {\r\n                return v && v.toLowerCase().indexOf(filter.toLowerCase()) >= 0;\r\n            }\r\n            else if (filter instanceof RegExp) {\r\n                return v != null && v.match(filter).length > 0;\r\n            }\r\n            return true;\r\n        });\r\n    };\r\n    CategoricalColumn.prototype.getFilter = function () {\r\n        return this.currentFilter;\r\n    };\r\n    CategoricalColumn.prototype.setFilter = function (filter) {\r\n        if (arrayEquals(this.currentFilter, filter)) {\r\n            return;\r\n        }\r\n        this.fire([Column.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.currentFilter, this.currentFilter = filter);\r\n    };\r\n    CategoricalColumn.prototype.compare = function (a, b, aIndex, bIndex) {\r\n        var va = this.getValues(a, aIndex);\r\n        var vb = this.getValues(b, bIndex);\r\n        //check all categories\r\n        for (var i = 0; i < Math.min(va.length, vb.length); ++i) {\r\n            var ci = ascending(va[i], vb[i]);\r\n            if (ci !== 0) {\r\n                return ci;\r\n            }\r\n        }\r\n        //smaller length wins\r\n        return va.length - vb.length;\r\n    };\r\n    return CategoricalColumn;\r\n}(ValueColumn));\r\nexport default CategoricalColumn;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/CategoricalColumn.ts\n// module id = 11\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport ValueColumn from './ValueColumn';\r\n/**\r\n * factory for creating a description creating a rank column\r\n * @param label\r\n * @returns {{type: string, label: string}}\r\n */\r\nexport function createDesc(label) {\r\n    if (label === void 0) { label = 'Rank'; }\r\n    return { type: 'rank', label: label };\r\n}\r\n/**\r\n * a rank column\r\n */\r\nvar RankColumn = (function (_super) {\r\n    __extends(RankColumn, _super);\r\n    function RankColumn(id, desc) {\r\n        var _this = _super.call(this, id, desc) || this;\r\n        _this.setWidthImpl(50);\r\n        return _this;\r\n    }\r\n    return RankColumn;\r\n}(ValueColumn));\r\nexport default RankColumn;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/RankColumn.ts\n// module id = 12\n// module chunks = 0 1","/**\r\n * Created by Samuel Gratzl on 06.08.2015.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport Column, { fixCSS } from './Column';\r\nimport StringColumn from './StringColumn';\r\nimport { AEventDispatcher } from '../utils';\r\nexport function isSupportType(col) {\r\n    return ['rank', 'selection', 'actions'].indexOf(col.type) >= 0;\r\n}\r\n/**\r\n * a ranking\r\n */\r\nvar Ranking = (function (_super) {\r\n    __extends(Ranking, _super);\r\n    function Ranking(id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.id = id;\r\n        /**\r\n         * the current sort criteria\r\n         * @type {null}\r\n         * @private\r\n         */\r\n        _this.sortColumn = null;\r\n        /**\r\n         * ascending or descending order\r\n         * @type {boolean}\r\n         */\r\n        _this.ascending = false;\r\n        /**\r\n         * columns of this ranking\r\n         * @type {Array}\r\n         * @private\r\n         */\r\n        _this.columns = [];\r\n        _this.comparator = function (a, b, aIndex, bIndex) {\r\n            if (_this.sortColumn === null) {\r\n                return 0;\r\n            }\r\n            var r = _this.sortColumn.compare(a, b, aIndex, bIndex);\r\n            return _this.ascending ? r : -r;\r\n        };\r\n        _this.dirtyOrder = function () {\r\n            _this.fire([Ranking.EVENT_DIRTY_ORDER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], _this.getSortCriteria());\r\n        };\r\n        /**\r\n         * the current ordering as an sorted array of indices\r\n         * @type {Array}\r\n         */\r\n        _this.order = [];\r\n        _this.id = fixCSS(id);\r\n        return _this;\r\n    }\r\n    Ranking.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat([\r\n            Ranking.EVENT_WIDTH_CHANGED, Ranking.EVENT_FILTER_CHANGED,\r\n            Ranking.EVENT_LABEL_CHANGED, Ranking.EVENT_COMPRESS_CHANGED,\r\n            Ranking.EVENT_ADD_COLUMN, Ranking.EVENT_REMOVE_COLUMN,\r\n            Ranking.EVENT_DIRTY, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES,\r\n            Ranking.EVENT_SORT_CRITERIA_CHANGED, Ranking.EVENT_DIRTY_ORDER, Ranking.EVENT_ORDER_CHANGED\r\n        ]);\r\n    };\r\n    Ranking.prototype.assignNewId = function (idGenerator) {\r\n        this.id = fixCSS(idGenerator());\r\n        this.columns.forEach(function (c) { return c.assignNewId(idGenerator); });\r\n    };\r\n    Ranking.prototype.setOrder = function (order) {\r\n        this.fire([Ranking.EVENT_ORDER_CHANGED, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], this.order, this.order = order);\r\n    };\r\n    Ranking.prototype.getOrder = function () {\r\n        return this.order;\r\n    };\r\n    Ranking.prototype.dump = function (toDescRef) {\r\n        var r = {};\r\n        r.columns = this.columns.map(function (d) { return d.dump(toDescRef); });\r\n        r.sortColumn = {\r\n            asc: this.ascending\r\n        };\r\n        if (this.sortColumn) {\r\n            r.sortColumn.sortBy = this.sortColumn.id; //store the index not the object\r\n        }\r\n        return r;\r\n    };\r\n    Ranking.prototype.restore = function (dump, factory) {\r\n        var _this = this;\r\n        this.clear();\r\n        dump.columns.map(function (child) {\r\n            var c = factory(child);\r\n            if (c) {\r\n                _this.push(c);\r\n            }\r\n        });\r\n        if (dump.sortColumn) {\r\n            this.ascending = dump.sortColumn.asc;\r\n            if (dump.sortColumn.sortBy) {\r\n                var help = this.columns.filter(function (d) { return d.id === dump.sortColumn.sortBy; });\r\n                this.sortBy(help.length === 0 ? null : help[0], dump.sortColumn.asc);\r\n            }\r\n        }\r\n    };\r\n    Ranking.prototype.flatten = function (r, offset, levelsToGo, padding) {\r\n        if (levelsToGo === void 0) { levelsToGo = 0; }\r\n        if (padding === void 0) { padding = 0; }\r\n        var acc = offset; // + this.getWidth() + padding;\r\n        if (levelsToGo > 0 || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\r\n            this.columns.forEach(function (c) {\r\n                if (!c.isHidden() || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\r\n                    acc += c.flatten(r, acc, levelsToGo - 1, padding) + padding;\r\n                }\r\n            });\r\n        }\r\n        return acc - offset;\r\n    };\r\n    Ranking.prototype.getSortCriteria = function () {\r\n        return {\r\n            col: this.sortColumn,\r\n            asc: this.ascending\r\n        };\r\n    };\r\n    Ranking.prototype.toggleSorting = function (col) {\r\n        if (this.sortColumn === col) {\r\n            return this.sortBy(col, !this.ascending);\r\n        }\r\n        return this.sortBy(col);\r\n    };\r\n    Ranking.prototype.setSortCriteria = function (value) {\r\n        return this.sortBy(value.col, value.asc);\r\n    };\r\n    Ranking.prototype.sortBy = function (col, ascending) {\r\n        if (ascending === void 0) { ascending = false; }\r\n        if (col !== null && col.findMyRanker() !== this) {\r\n            return false; //not one of mine\r\n        }\r\n        if (this.sortColumn === col && this.ascending === ascending) {\r\n            return true; //already in this order\r\n        }\r\n        if (this.sortColumn) {\r\n            this.sortColumn.on(Column.EVENT_DIRTY_VALUES + '.order', null);\r\n        }\r\n        var bak = this.getSortCriteria();\r\n        this.sortColumn = col;\r\n        if (this.sortColumn) {\r\n            this.sortColumn.on(Column.EVENT_DIRTY_VALUES + '.order', this.dirtyOrder);\r\n        }\r\n        this.ascending = ascending;\r\n        this.fire([Ranking.EVENT_SORT_CRITERIA_CHANGED, Ranking.EVENT_DIRTY_ORDER, Ranking.EVENT_DIRTY_HEADER,\r\n            Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], bak, this.getSortCriteria());\r\n        return true;\r\n    };\r\n    Object.defineProperty(Ranking.prototype, \"children\", {\r\n        get: function () {\r\n            return this.columns.slice();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Ranking.prototype, \"length\", {\r\n        get: function () {\r\n            return this.columns.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Ranking.prototype.insert = function (col, index) {\r\n        if (index === void 0) { index = this.columns.length; }\r\n        this.columns.splice(index, 0, col);\r\n        col.parent = this;\r\n        this.forward(col, Column.EVENT_DIRTY_VALUES + '.ranking', Column.EVENT_DIRTY_HEADER + '.ranking', Column.EVENT_DIRTY + '.ranking', Column.EVENT_FILTER_CHANGED + '.ranking');\r\n        col.on(Ranking.EVENT_FILTER_CHANGED + '.order', this.dirtyOrder);\r\n        this.fire([Ranking.EVENT_ADD_COLUMN, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], col, index);\r\n        if (this.sortColumn === null && !isSupportType(col.desc)) {\r\n            this.sortBy(col, col instanceof StringColumn);\r\n        }\r\n        return col;\r\n    };\r\n    Object.defineProperty(Ranking.prototype, \"fqpath\", {\r\n        get: function () {\r\n            return '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Ranking.prototype.findByPath = function (fqpath) {\r\n        var p = this;\r\n        var indices = fqpath.split('@').map(Number).slice(1); //ignore the first entry = ranking\r\n        while (indices.length > 0) {\r\n            var i = indices.shift();\r\n            p = p.at(i);\r\n        }\r\n        return p;\r\n    };\r\n    Ranking.prototype.indexOf = function (col) {\r\n        return this.columns.indexOf(col);\r\n    };\r\n    Ranking.prototype.at = function (index) {\r\n        return this.columns[index];\r\n    };\r\n    Ranking.prototype.insertAfter = function (col, ref) {\r\n        var i = this.columns.indexOf(ref);\r\n        if (i < 0) {\r\n            return null;\r\n        }\r\n        return this.insert(col, i + 1);\r\n    };\r\n    Ranking.prototype.push = function (col) {\r\n        return this.insert(col);\r\n    };\r\n    Ranking.prototype.remove = function (col) {\r\n        var i = this.columns.indexOf(col);\r\n        if (i < 0) {\r\n            return false;\r\n        }\r\n        this.unforward(col, Column.EVENT_DIRTY_VALUES + '.ranking', Column.EVENT_DIRTY_HEADER + '.ranking', Column.EVENT_DIRTY + '.ranking', Column.EVENT_FILTER_CHANGED + '.ranking');\r\n        if (this.sortColumn === col) {\r\n            var next = this.columns.filter(function (d) { return d !== col && !isSupportType(d.desc); })[0];\r\n            this.sortBy(next ? next : null);\r\n        }\r\n        col.parent = null;\r\n        this.columns.splice(i, 1);\r\n        this.fire([Ranking.EVENT_REMOVE_COLUMN, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], col, i);\r\n        return true;\r\n    };\r\n    Ranking.prototype.clear = function () {\r\n        var _this = this;\r\n        if (this.columns.length === 0) {\r\n            return;\r\n        }\r\n        this.sortColumn = null;\r\n        this.columns.forEach(function (col) {\r\n            _this.unforward(col, Column.EVENT_DIRTY_VALUES + '.ranking', Column.EVENT_DIRTY_HEADER + '.ranking', Column.EVENT_DIRTY + '.ranking', Column.EVENT_FILTER_CHANGED + '.ranking');\r\n            col.parent = null;\r\n        });\r\n        this.columns.length = 0;\r\n        this.fire([Ranking.EVENT_REMOVE_COLUMN, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], null);\r\n    };\r\n    Object.defineProperty(Ranking.prototype, \"flatColumns\", {\r\n        get: function () {\r\n            var r = [];\r\n            this.flatten(r, 0, Column.FLAT_ALL_COLUMNS);\r\n            return r.map(function (d) { return d.col; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Ranking.prototype.find = function (id_or_filter) {\r\n        var filter = typeof (id_or_filter) === 'string' ? function (col) { return col.id === id_or_filter; } : id_or_filter;\r\n        var r = this.flatColumns;\r\n        for (var i = 0; i < r.length; ++i) {\r\n            if (filter(r[i])) {\r\n                return r[i];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * converts the sorting criteria to a json compatible notation for transferring it to the server\r\n     * @param toId\r\n     * @return {any}\r\n     */\r\n    Ranking.prototype.toSortingDesc = function (toId) {\r\n        //TODO describe also all the filter settings\r\n        var resolve = function (s) {\r\n            if (s === null) {\r\n                return null;\r\n            }\r\n            return s.toSortingDesc(toId);\r\n        };\r\n        var id = resolve(this.sortColumn);\r\n        if (id === null) {\r\n            return null;\r\n        }\r\n        return {\r\n            id: id,\r\n            asc: this.ascending\r\n        };\r\n    };\r\n    Ranking.prototype.isFiltered = function () {\r\n        return this.columns.some(function (d) { return d.isFiltered(); });\r\n    };\r\n    Ranking.prototype.filter = function (row, index) {\r\n        return this.columns.every(function (d) { return d.filter(row, index); });\r\n    };\r\n    Ranking.prototype.findMyRanker = function () {\r\n        return this;\r\n    };\r\n    Object.defineProperty(Ranking.prototype, \"fqid\", {\r\n        get: function () {\r\n            return this.id;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Ranking;\r\n}(AEventDispatcher));\r\nexport default Ranking;\r\nRanking.EVENT_WIDTH_CHANGED = Column.EVENT_WIDTH_CHANGED;\r\nRanking.EVENT_FILTER_CHANGED = Column.EVENT_FILTER_CHANGED;\r\nRanking.EVENT_LABEL_CHANGED = Column.EVENT_LABEL_CHANGED;\r\nRanking.EVENT_COMPRESS_CHANGED = Column.EVENT_COMPRESS_CHANGED;\r\nRanking.EVENT_ADD_COLUMN = Column.EVENT_ADD_COLUMN;\r\nRanking.EVENT_REMOVE_COLUMN = Column.EVENT_REMOVE_COLUMN;\r\nRanking.EVENT_DIRTY = Column.EVENT_DIRTY;\r\nRanking.EVENT_DIRTY_HEADER = Column.EVENT_DIRTY_HEADER;\r\nRanking.EVENT_DIRTY_VALUES = Column.EVENT_DIRTY_VALUES;\r\nRanking.EVENT_SORT_CRITERIA_CHANGED = 'sortCriteriaChanged';\r\nRanking.EVENT_DIRTY_ORDER = 'dirtyOrder';\r\nRanking.EVENT_ORDER_CHANGED = 'orderChanged';\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/Ranking.ts\n// module id = 13\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport Column from './Column';\r\nimport CompositeNumberColumn from './CompositeNumberColumn';\r\n/**\r\n * factory for creating a description creating a mean column\r\n * @param label\r\n * @returns {{type: string, label: string}}\r\n */\r\nexport function createDesc(label) {\r\n    if (label === void 0) { label = 'script'; }\r\n    return { type: 'script', label: label, script: ScriptColumn.DEFAULT_SCRIPT };\r\n}\r\nvar ScriptColumn = (function (_super) {\r\n    __extends(ScriptColumn, _super);\r\n    function ScriptColumn(id, desc) {\r\n        var _this = _super.call(this, id, desc) || this;\r\n        _this.script = ScriptColumn.DEFAULT_SCRIPT;\r\n        _this.f = null;\r\n        _this.script = desc.script || _this.script;\r\n        return _this;\r\n    }\r\n    ScriptColumn.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat([ScriptColumn.EVENT_SCRIPT_CHANGED]);\r\n    };\r\n    ScriptColumn.prototype.setScript = function (script) {\r\n        if (this.script === script) {\r\n            return;\r\n        }\r\n        this.f = null;\r\n        this.fire([ScriptColumn.EVENT_SCRIPT_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.script, this.script = script);\r\n    };\r\n    ScriptColumn.prototype.getScript = function () {\r\n        return this.script;\r\n    };\r\n    ScriptColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        r.script = this.script;\r\n        return r;\r\n    };\r\n    ScriptColumn.prototype.restore = function (dump, factory) {\r\n        this.script = dump.script || this.script;\r\n        _super.prototype.restore.call(this, dump, factory);\r\n    };\r\n    ScriptColumn.prototype.compute = function (row, index) {\r\n        if (this.f == null) {\r\n            this.f = new Function('children', 'values', this.script);\r\n        }\r\n        return this.f.call(this, this._children, this._children.map(function (d) { return d.getValue(row, index); }));\r\n    };\r\n    /**\r\n     * describe the column if it is a sorting criteria\r\n     * @param toId helper to convert a description to an id\r\n     * @return {string} json compatible\r\n     */\r\n    ScriptColumn.prototype.toSortingDesc = function (toId) {\r\n        return {\r\n            code: this.script,\r\n            operands: this._children.map(function (c) { return c.toSortingDesc(toId); })\r\n        };\r\n    };\r\n    return ScriptColumn;\r\n}(CompositeNumberColumn));\r\nexport default ScriptColumn;\r\nScriptColumn.EVENT_SCRIPT_CHANGED = 'scriptChanged';\r\nScriptColumn.DEFAULT_SCRIPT = 'return Math.max.apply(Math,values)';\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/ScriptColumn.ts\n// module id = 14\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport CompositeNumberColumn from './CompositeNumberColumn';\r\nimport Column from './Column';\r\n/**\r\n * factory for creating a description creating a stacked column\r\n * @param label\r\n * @returns {{type: string, label: string}}\r\n */\r\nexport function createDesc(label) {\r\n    if (label === void 0) { label = 'Combined'; }\r\n    return { type: 'stack', label: label };\r\n}\r\n/**\r\n * implementation of the stacked column\r\n */\r\nvar StackColumn = (function (_super) {\r\n    __extends(StackColumn, _super);\r\n    function StackColumn(id, desc) {\r\n        var _this = _super.call(this, id, desc) || this;\r\n        /**\r\n         * whether this stack column is collapsed i.e. just looks like an ordinary number column\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.collapsed = false;\r\n        var that = _this;\r\n        _this.adaptChange = function (old, new_) {\r\n            that.adaptWidthChange(this.source, old, new_);\r\n        };\r\n        return _this;\r\n    }\r\n    StackColumn.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat([StackColumn.EVENT_COLLAPSE_CHANGED, StackColumn.EVENT_WEIGHTS_CHANGED]);\r\n    };\r\n    StackColumn.prototype.setCollapsed = function (value) {\r\n        if (this.collapsed === value) {\r\n            return;\r\n        }\r\n        this.fire([StackColumn.EVENT_COLLAPSE_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.collapsed, this.collapsed = value);\r\n    };\r\n    StackColumn.prototype.getCollapsed = function () {\r\n        return this.collapsed;\r\n    };\r\n    StackColumn.prototype.flatten = function (r, offset, levelsToGo, padding) {\r\n        if (levelsToGo === void 0) { levelsToGo = 0; }\r\n        if (padding === void 0) { padding = 0; }\r\n        var self = null;\r\n        var children = levelsToGo <= Column.FLAT_ALL_COLUMNS ? this._children : this._children.filter(function (c) { return !c.isHidden(); });\r\n        //no more levels or just this one\r\n        if (levelsToGo === 0 || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\r\n            var w = this.getCompressed() ? Column.COMPRESSED_WIDTH : this.getWidth();\r\n            if (!this.collapsed && !this.getCompressed()) {\r\n                w += (children.length - 1) * padding;\r\n            }\r\n            r.push(self = { col: this, offset: offset, width: w });\r\n            if (levelsToGo === 0) {\r\n                return w;\r\n            }\r\n        }\r\n        //push children\r\n        var acc = offset;\r\n        children.forEach(function (c) {\r\n            acc += c.flatten(r, acc, levelsToGo - 1, padding) + padding;\r\n        });\r\n        if (self) {\r\n            self.width = acc - offset - padding;\r\n        }\r\n        return acc - offset - padding;\r\n    };\r\n    StackColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        r.collapsed = this.collapsed;\r\n        return r;\r\n    };\r\n    StackColumn.prototype.restore = function (dump, factory) {\r\n        this.collapsed = dump.collapsed === true;\r\n        _super.prototype.restore.call(this, dump, factory);\r\n    };\r\n    /**\r\n     * inserts a column at a the given position\r\n     * @param col\r\n     * @param index\r\n     * @param weight\r\n     * @returns {any}\r\n     */\r\n    StackColumn.prototype.insert = function (col, index, weight) {\r\n        if (weight === void 0) { weight = NaN; }\r\n        if (!isNaN(weight)) {\r\n            col.setWidth((weight / (1 - weight) * this.getWidth()));\r\n        }\r\n        col.on(Column.EVENT_WIDTH_CHANGED + '.stack', this.adaptChange);\r\n        //increase my width\r\n        _super.prototype.setWidth.call(this, this.length === 0 ? col.getWidth() : (this.getWidth() + col.getWidth()));\r\n        return _super.prototype.insert.call(this, col, index);\r\n    };\r\n    StackColumn.prototype.push = function (col, weight) {\r\n        if (weight === void 0) { weight = NaN; }\r\n        return this.insert(col, this.length, weight);\r\n    };\r\n    StackColumn.prototype.insertAfter = function (col, ref, weight) {\r\n        if (weight === void 0) { weight = NaN; }\r\n        var i = this.indexOf(ref);\r\n        if (i < 0) {\r\n            return null;\r\n        }\r\n        return this.insert(col, i + 1, weight);\r\n    };\r\n    /**\r\n     * adapts weights according to an own width change\r\n     * @param col\r\n     * @param old\r\n     * @param new_\r\n     */\r\n    StackColumn.prototype.adaptWidthChange = function (col, old, new_) {\r\n        if (old === new_) {\r\n            return;\r\n        }\r\n        var bak = this.getWeights();\r\n        var full = this.getWidth(), change = (new_ - old) / full;\r\n        var oldWeight = old / full;\r\n        var factor = (1 - oldWeight - change) / (1 - oldWeight);\r\n        this._children.forEach(function (c) {\r\n            if (c === col) {\r\n            }\r\n            else {\r\n                c.setWidthImpl(c.getWidth() * factor);\r\n            }\r\n        });\r\n        this.fire([StackColumn.EVENT_WEIGHTS_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, this.getWeights());\r\n    };\r\n    StackColumn.prototype.getWeights = function () {\r\n        var w = this.getWidth();\r\n        return this._children.map(function (d) { return d.getWidth() / w; });\r\n    };\r\n    StackColumn.prototype.setWeights = function (weights) {\r\n        var bak = this.getWeights();\r\n        var delta = weights.length - this.length;\r\n        var s;\r\n        if (delta < 0) {\r\n            s = weights.reduce(function (p, a) { return p + a; }, 0);\r\n            if (s <= 1) {\r\n                for (var i = 0; i < -delta; ++i) {\r\n                    weights.push((1 - s) * (1 / -delta));\r\n                }\r\n            }\r\n            else if (s <= 100) {\r\n                for (var i = 0; i < -delta; ++i) {\r\n                    weights.push((100 - s) * (1 / -delta));\r\n                }\r\n            }\r\n        }\r\n        weights = weights.slice(0, this.length);\r\n        s = weights.reduce(function (p, a) { return p + a; }, 0) / this.getWidth();\r\n        weights = weights.map(function (d) { return d / s; });\r\n        this._children.forEach(function (c, i) {\r\n            c.setWidthImpl(weights[i]);\r\n        });\r\n        this.fire([StackColumn.EVENT_WEIGHTS_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, weights);\r\n    };\r\n    StackColumn.prototype.removeImpl = function (child) {\r\n        child.on(Column.EVENT_WIDTH_CHANGED + '.stack', null);\r\n        _super.prototype.setWidth.call(this, this.length === 1 ? 100 : this.getWidth() - child.getWidth());\r\n        return _super.prototype.removeImpl.call(this, child);\r\n    };\r\n    StackColumn.prototype.setWidth = function (value) {\r\n        var factor = value / this.getWidth();\r\n        this._children.forEach(function (child) {\r\n            //disable since we change it\r\n            child.setWidthImpl(child.getWidth() * factor);\r\n        });\r\n        _super.prototype.setWidth.call(this, value);\r\n    };\r\n    StackColumn.prototype.compute = function (row, index) {\r\n        var w = this.getWidth();\r\n        return this._children.reduce(function (acc, d) { return acc + d.getValue(row, index) * (d.getWidth() / w); }, 0);\r\n    };\r\n    StackColumn.prototype.rendererType = function () {\r\n        if (this.getCollapsed()) {\r\n            return StackColumn.COLLAPSED_RENDERER;\r\n        }\r\n        return _super.prototype.rendererType.call(this);\r\n    };\r\n    /**\r\n     * describe the column if it is a sorting criteria\r\n     * @param toId helper to convert a description to an id\r\n     * @return {string} json compatible\r\n     */\r\n    StackColumn.prototype.toSortingDesc = function (toId) {\r\n        var w = this.getWeights();\r\n        return this._children.map(function (c, i) { return ({ weight: w[i], id: c.toSortingDesc(toId) }); });\r\n    };\r\n    return StackColumn;\r\n}(CompositeNumberColumn));\r\nexport default StackColumn;\r\nStackColumn.EVENT_COLLAPSE_CHANGED = 'collapseChanged';\r\nStackColumn.EVENT_WEIGHTS_CHANGED = 'weightsChanged';\r\nStackColumn.COLLAPSED_RENDERER = 'number';\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/StackColumn.ts\n// module id = 15\n// module chunks = 0 1","/**\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport * as d3 from 'd3';\r\nimport { merge, delayedCall, AEventDispatcher } from '../utils';\r\nimport { Ranking, isNumberColumn } from '../model';\r\nimport Column from '../model/Column';\r\nimport { isMultiLevelColumn } from '../model/CompositeColumn';\r\nimport DataProvider from '../provider/ADataProvider';\r\nimport { renderers as defaultRenderers } from '../renderer';\r\nexport var ERenderReason;\r\n(function (ERenderReason) {\r\n    ERenderReason[ERenderReason[\"DIRTY\"] = 0] = \"DIRTY\";\r\n    ERenderReason[ERenderReason[\"SCROLLED\"] = 1] = \"SCROLLED\";\r\n})(ERenderReason || (ERenderReason = {}));\r\nvar ABodyRenderer = (function (_super) {\r\n    __extends(ABodyRenderer, _super);\r\n    function ABodyRenderer(data, parent, slicer, root, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var _this = _super.call(this) || this;\r\n        _this.data = data;\r\n        _this.slicer = slicer;\r\n        _this.options = {\r\n            rowHeight: 20,\r\n            rowPadding: 1,\r\n            rowBarPadding: 1,\r\n            idPrefix: '',\r\n            slopeWidth: 150,\r\n            columnPadding: 5,\r\n            stacked: true,\r\n            animation: false,\r\n            animationDuration: 1000,\r\n            renderers: merge({}, defaultRenderers),\r\n            meanLine: false,\r\n            actions: [],\r\n            freezeCols: 0\r\n        };\r\n        _this.histCache = new Map();\r\n        //merge options\r\n        merge(_this.options, options);\r\n        _this.$node = d3.select(parent).append(root).classed('lu-body', true);\r\n        _this.changeDataStorage(data);\r\n        return _this;\r\n    }\r\n    ABodyRenderer.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat([ABodyRenderer.EVENT_HOVER_CHANGED, ABodyRenderer.EVENT_RENDER_FINISHED]);\r\n    };\r\n    Object.defineProperty(ABodyRenderer.prototype, \"node\", {\r\n        get: function () {\r\n            return this.$node.node();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ABodyRenderer.prototype.setOption = function (key, value) {\r\n        this.options[key] = value;\r\n    };\r\n    ABodyRenderer.prototype.changeDataStorage = function (data) {\r\n        if (this.data) {\r\n            this.data.on([DataProvider.EVENT_DIRTY_VALUES + '.bodyRenderer', DataProvider.EVENT_SELECTION_CHANGED + '.bodyRenderer'], null);\r\n        }\r\n        this.data = data;\r\n        data.on(DataProvider.EVENT_DIRTY_VALUES + '.bodyRenderer', delayedCall(this.update.bind(this), 1));\r\n        data.on(DataProvider.EVENT_SELECTION_CHANGED + '.bodyRenderer', delayedCall(this.drawSelection.bind(this), 1));\r\n    };\r\n    ABodyRenderer.prototype.showMeanLine = function (col) {\r\n        //show mean line if option is enabled and top level\r\n        return this.options.meanLine && isNumberColumn(col) && !col.getCompressed() && col.parent instanceof Ranking;\r\n    };\r\n    ABodyRenderer.prototype.fireFinished = function () {\r\n        this.fire(ABodyRenderer.EVENT_RENDER_FINISHED, this);\r\n    };\r\n    ABodyRenderer.prototype.createContext = function (index_shift, creator) {\r\n        var _this = this;\r\n        var options = this.options;\r\n        function findOption(key, default_) {\r\n            if (key in options) {\r\n                return options[key];\r\n            }\r\n            if (key.indexOf('.') > 0) {\r\n                var p = key.substring(0, key.indexOf('.'));\r\n                key = key.substring(key.indexOf('.') + 1);\r\n                if (p in options && key in options[p]) {\r\n                    return options[p][key];\r\n                }\r\n            }\r\n            return default_;\r\n        }\r\n        return {\r\n            cellY: function (index) { return (index + index_shift) * (_this.options.rowHeight); },\r\n            cellPrevY: function (index) { return (index + index_shift) * (_this.options.rowHeight); },\r\n            idPrefix: options.idPrefix,\r\n            option: findOption,\r\n            rowHeight: function () {\r\n                return options.rowHeight - options.rowPadding;\r\n            },\r\n            renderer: function (col) {\r\n                return creator(col, options.renderers, this);\r\n            }\r\n        };\r\n    };\r\n    ABodyRenderer.prototype.select = function (dataIndex, additional) {\r\n        if (additional === void 0) { additional = false; }\r\n        return this.data.toggleSelection(dataIndex, additional);\r\n    };\r\n    ABodyRenderer.prototype.fakeHover = function (dataIndex) {\r\n        this.mouseOver(dataIndex, true);\r\n    };\r\n    ABodyRenderer.prototype.mouseOver = function (dataIndex, hover) {\r\n        if (hover === void 0) { hover = true; }\r\n        this.fire(ABodyRenderer.EVENT_HOVER_CHANGED, hover ? dataIndex : -1);\r\n    };\r\n    ABodyRenderer.prototype.scrolled = function () {\r\n        return this.update(ERenderReason.SCROLLED);\r\n    };\r\n    /**\r\n     * render the body\r\n     */\r\n    ABodyRenderer.prototype.update = function (reason) {\r\n        var _this = this;\r\n        if (reason === void 0) { reason = ERenderReason.DIRTY; }\r\n        var rankings = this.data.getRankings();\r\n        var maxElems = d3.max(rankings, function (d) { return d.getOrder().length; }) || 0;\r\n        var height = this.options.rowHeight * maxElems;\r\n        var visibleRange = this.slicer(0, maxElems, function (i) { return i * _this.options.rowHeight; });\r\n        var orderSlicer = function (order) {\r\n            if (visibleRange.from === 0 && order.length <= visibleRange.to) {\r\n                return order;\r\n            }\r\n            return order.slice(visibleRange.from, Math.min(order.length, visibleRange.to));\r\n        };\r\n        var context = this.createContextImpl(visibleRange.from);\r\n        var orders = rankings.map(function (r) { return orderSlicer(r.getOrder()); });\r\n        var data = this.data.fetch(orders);\r\n        var padding = this.options.columnPadding;\r\n        var totalWidth = 0;\r\n        var rdata = rankings.map(function (r, i) {\r\n            var cols = r.children.filter(function (d) { return !d.isHidden(); });\r\n            var rankingShift = totalWidth;\r\n            var width = 0;\r\n            var colData = cols.map(function (o) {\r\n                var colShift = width;\r\n                width += (o.getCompressed() ? Column.COMPRESSED_WIDTH : o.getWidth()) + padding;\r\n                if (isMultiLevelColumn(o) && !o.getCollapsed() && !o.getCompressed()) {\r\n                    width += padding * (o.length - 1);\r\n                }\r\n                return {\r\n                    column: o,\r\n                    renderer: context.renderer(o),\r\n                    shift: colShift\r\n                };\r\n            });\r\n            totalWidth += width;\r\n            totalWidth += _this.options.slopeWidth;\r\n            var frozen = colData.slice(0, _this.options.freezeCols);\r\n            return {\r\n                id: r.id,\r\n                ranking: r,\r\n                order: orders[i],\r\n                shift: rankingShift,\r\n                width: width,\r\n                //compute frozen columns just for the first one\r\n                frozen: frozen,\r\n                frozenWidth: Math.max.apply(Math, (frozen.map(function (d) { return d.shift + d.column.getWidth(); }))),\r\n                columns: colData.slice(_this.options.freezeCols),\r\n                data: data[i]\r\n            };\r\n        });\r\n        //one to often\r\n        totalWidth -= this.options.slopeWidth;\r\n        this.updateImpl(rdata, context, totalWidth, height, reason).then(this.fireFinished.bind(this));\r\n    };\r\n    return ABodyRenderer;\r\n}(AEventDispatcher));\r\nABodyRenderer.EVENT_HOVER_CHANGED = 'hoverChanged';\r\nABodyRenderer.EVENT_RENDER_FINISHED = 'renderFinished';\r\nexport default ABodyRenderer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui/ABodyRenderer.ts\n// module id = 16\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport { ascending } from 'd3';\r\nimport ValueColumn from './ValueColumn';\r\n/**\r\n * factory for creating a description creating a rank column\r\n * @param label\r\n * @returns {{type: string, label: string}}\r\n */\r\nexport function createDesc(label) {\r\n    if (label === void 0) { label = 'S'; }\r\n    return { type: 'selection', label: label };\r\n}\r\n/**\r\n * a checkbox column for selections\r\n */\r\nvar SelectionColumn = (function (_super) {\r\n    __extends(SelectionColumn, _super);\r\n    function SelectionColumn(id, desc) {\r\n        var _this = _super.call(this, id, desc) || this;\r\n        _this.setCompressed(true);\r\n        return _this;\r\n    }\r\n    SelectionColumn.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat([SelectionColumn.EVENT_SELECT]);\r\n    };\r\n    SelectionColumn.prototype.setValue = function (row, index, value) {\r\n        var old = this.getValue(row, index);\r\n        if (old === value) {\r\n            return true;\r\n        }\r\n        return this.setImpl(row, index, value);\r\n    };\r\n    SelectionColumn.prototype.setImpl = function (row, index, value) {\r\n        if (this.desc.setter) {\r\n            this.desc.setter(row, index, value);\r\n        }\r\n        this.fire(SelectionColumn.EVENT_SELECT, row, value);\r\n        return true;\r\n    };\r\n    SelectionColumn.prototype.toggleValue = function (row, index) {\r\n        var old = this.getValue(row, index);\r\n        this.setImpl(row, index, !old);\r\n        return !old;\r\n    };\r\n    SelectionColumn.prototype.compare = function (a, b, aIndex, bIndex) {\r\n        return ascending(this.getValue(a, aIndex), this.getValue(b, bIndex));\r\n    };\r\n    return SelectionColumn;\r\n}(ValueColumn));\r\nexport default SelectionColumn;\r\nSelectionColumn.EVENT_SELECT = 'select';\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/SelectionColumn.ts\n// module id = 17\n// module chunks = 0 1","/**\r\n * main module of LineUp.js containing the main class and exposes all other modules\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport DataProvider from './provider/ADataProvider';\r\nimport { renderers as defaultRenderers } from './renderer';\r\nimport { dummyRankingButtonHook, PoolRenderer, HeaderRenderer, createBodyRenderer } from './ui';\r\nimport { default as ABodyRenderer } from './ui/ABodyRenderer';\r\nimport { AEventDispatcher, ContentScroller, merge } from './utils';\r\nimport { scale as d3scale, selection, select } from 'd3';\r\n/**\r\n * main LineUp class managing data and rendering\r\n */\r\nvar LineUp = (function (_super) {\r\n    __extends(LineUp, _super);\r\n    function LineUp(container, data, config) {\r\n        if (config === void 0) { config = {}; }\r\n        var _this = _super.call(this) || this;\r\n        _this.data = data;\r\n        /**\r\n         * default config of LineUp with all available options\r\n         */\r\n        _this.config = {\r\n            idPrefix: Math.random().toString(36).slice(-8).substr(0, 3),\r\n            header: {\r\n                headerHeight: 20,\r\n                headerHistogramHeight: 40,\r\n                autoRotateLabels: false,\r\n                rotationHeight: 50,\r\n                rotationDegree: -20,\r\n                rankingButtons: dummyRankingButtonHook,\r\n                linkTemplates: []\r\n            },\r\n            htmlLayout: {},\r\n            renderingOptions: {\r\n                stacked: true,\r\n                animation: true,\r\n                histograms: false,\r\n                meanLine: false,\r\n            },\r\n            body: {\r\n                renderer: 'svg',\r\n                rowHeight: 18,\r\n                rowPadding: 1,\r\n                rowBarPadding: 1,\r\n                visibleRowsOnly: true,\r\n                backupScrollRows: 4,\r\n                animationDuration: 1000,\r\n                freezeCols: 0,\r\n                actions: []\r\n            },\r\n            svgLayout: {},\r\n            manipulative: true,\r\n            pool: false,\r\n            renderers: merge({}, defaultRenderers)\r\n        };\r\n        _this.body = null;\r\n        _this.header = null;\r\n        _this.pools = [];\r\n        _this.contentScroller = null;\r\n        /**\r\n         * local variable that is used by update()\r\n         * @type {boolean}\r\n         */\r\n        _this.isUpdateInitialized = false;\r\n        _this.$container = container instanceof selection ? container : select(container);\r\n        _this.$container = _this.$container.append('div').classed('lu', true);\r\n        _this.config.svgLayout = _this.config.body;\r\n        _this.config.htmlLayout = _this.config.header;\r\n        merge(_this.config, config);\r\n        _this.data.on(DataProvider.EVENT_SELECTION_CHANGED + '.main', _this.triggerSelection.bind(_this));\r\n        _this.data.on(DataProvider.EVENT_JUMP_TO_NEAREST + '.main', _this.jumpToNearest.bind(_this));\r\n        _this.header = new HeaderRenderer(data, _this.node, merge({}, _this.config.header, {\r\n            idPrefix: _this.config.idPrefix,\r\n            manipulative: _this.config.manipulative,\r\n            histograms: _this.config.renderingOptions.histograms,\r\n            freezeCols: _this.config.body.freezeCols,\r\n        }));\r\n        _this.body = createBodyRenderer(_this.config.body.renderer, data, _this.node, _this.slice.bind(_this), merge({}, _this.config.body, {\r\n            meanLine: _this.config.renderingOptions.meanLine,\r\n            animation: _this.config.renderingOptions.animation,\r\n            stacked: _this.config.renderingOptions.stacked,\r\n            idPrefix: _this.config.idPrefix,\r\n            renderers: _this.config.renderers\r\n        }));\r\n        //share hist caches\r\n        _this.body.histCache = _this.header.sharedHistCache;\r\n        _this.forward(_this.body, LineUp.EVENT_HOVER_CHANGED);\r\n        if (_this.config.pool && _this.config.manipulative) {\r\n            _this.addPool(new PoolRenderer(data, _this.node, _this.config));\r\n        }\r\n        if (_this.config.body.visibleRowsOnly) {\r\n            _this.contentScroller = new ContentScroller(_this.$container.node(), _this.body.node, {\r\n                backupRows: _this.config.body.backupScrollRows,\r\n                rowHeight: _this.config.body.rowHeight,\r\n                topShift: function () { return _this.header.currentHeight(); }\r\n            });\r\n            _this.contentScroller.on(ContentScroller.EVENT_SCROLL, function (top, left) {\r\n                //in two svg mode propagate horizontal shift\r\n                //console.log(top, left,'ss');\r\n                _this.header.$node.style('transform', \"translate(0px, \" + top + \"px)\");\r\n                if (_this.config.body.freezeCols > 0) {\r\n                    _this.header.updateFreeze(left);\r\n                    _this.body.updateFreeze(left);\r\n                }\r\n            });\r\n            _this.contentScroller.on(ContentScroller.EVENT_REDRAW, _this.body.scrolled.bind(_this.body));\r\n        }\r\n        return _this;\r\n    }\r\n    LineUp.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat([LineUp.EVENT_HOVER_CHANGED, LineUp.EVENT_SELECTION_CHANGED, LineUp.EVENT_MULTISELECTION_CHANGED, LineUp.EVENT_UPDATE_START, LineUp.EVENT_UPDATE_FINISHED]);\r\n    };\r\n    LineUp.prototype.addPool = function (pool_node, config) {\r\n        if (config === void 0) { config = this.config; }\r\n        if (pool_node instanceof PoolRenderer) {\r\n            this.pools.push(pool_node);\r\n        }\r\n        else {\r\n            this.pools.push(new PoolRenderer(this.data, pool_node, config));\r\n        }\r\n        return this.pools[this.pools.length - 1];\r\n    };\r\n    Object.defineProperty(LineUp.prototype, \"node\", {\r\n        /**\r\n         * returns the main lineup DOM element\r\n         * @returns {Element}\r\n         */\r\n        get: function () {\r\n            return this.$container.node();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LineUp.prototype.slice = function (start, length, row2y) {\r\n        if (this.contentScroller) {\r\n            return this.contentScroller.select(start, length, row2y);\r\n        }\r\n        return { from: start, to: length };\r\n    };\r\n    /**\r\n     * destroys the DOM elements created by this lineup instance, this should be the last call to this lineup instance\r\n     */\r\n    LineUp.prototype.destroy = function () {\r\n        this.pools.forEach(function (p) { return p.remove(); });\r\n        this.$container.remove();\r\n        if (this.contentScroller) {\r\n            this.contentScroller.destroy();\r\n        }\r\n    };\r\n    /**\r\n     * sorts LineUp by he given column\r\n     * @param column callback function finding the column to sort\r\n     * @param ascending\r\n     * @returns {boolean}\r\n     */\r\n    LineUp.prototype.sortBy = function (column, ascending) {\r\n        if (ascending === void 0) { ascending = false; }\r\n        var col = this.data.find(column);\r\n        if (col) {\r\n            col.sortByMe(ascending);\r\n        }\r\n        return col !== null;\r\n    };\r\n    LineUp.prototype.dump = function () {\r\n        return this.data.dump();\r\n    };\r\n    LineUp.prototype.changeDataStorage = function (data, dump) {\r\n        if (this.data) {\r\n            this.data.on([DataProvider.EVENT_SELECTION_CHANGED + '.main', DataProvider.EVENT_JUMP_TO_NEAREST + '.main'], null);\r\n        }\r\n        this.data = data;\r\n        if (dump) {\r\n            this.data.restore(dump);\r\n        }\r\n        this.data.on(DataProvider.EVENT_SELECTION_CHANGED + '.main', this.triggerSelection.bind(this));\r\n        this.data.on(DataProvider.EVENT_JUMP_TO_NEAREST + '.main', this.jumpToNearest.bind(this));\r\n        this.header.changeDataStorage(data);\r\n        this.body.changeDataStorage(data);\r\n        this.pools.forEach(function (p) { return p.changeDataStorage(data); });\r\n        this.update();\r\n    };\r\n    LineUp.prototype.triggerSelection = function (dataIndices) {\r\n        this.fire(LineUp.EVENT_SELECTION_CHANGED, dataIndices.length > 0 ? dataIndices[0] : -1);\r\n        this.fire(LineUp.EVENT_MULTISELECTION_CHANGED, dataIndices);\r\n    };\r\n    LineUp.prototype.jumpToNearest = function (dataIndices) {\r\n        var _this = this;\r\n        var ranking = this.data.getRankings()[0];\r\n        if (dataIndices.length === 0 || ranking === undefined) {\r\n            return;\r\n        }\r\n        var order = ranking.getOrder();\r\n        //relative order\r\n        var indices = dataIndices.map(function (d) { return order.indexOf(d); }).sort(function (a, b) { return a - b; });\r\n        if (this.contentScroller) {\r\n            this.contentScroller.scrollIntoView(0, order.length, indices[0], function (i) { return i * _this.config.body.rowHeight; });\r\n        }\r\n        else {\r\n            var container = this.$container.node();\r\n            container.scrollTop = indices[0] * this.config.body.rowHeight;\r\n        }\r\n        //fake hover in 100ms - TODO right timing\r\n        setTimeout(function () {\r\n            _this.body.fakeHover(order[indices[0]]);\r\n        }, 100);\r\n    };\r\n    LineUp.prototype.restore = function (dump) {\r\n        this.changeDataStorage(this.data, dump);\r\n    };\r\n    LineUp.prototype.update = function () {\r\n        var _this = this;\r\n        // HACK: when calling update for the first time the BodyRenderer\r\n        // fires 3x the `renderFinished` event. However, we want to wait for\r\n        // the last event before firing LineUp.EVENT_UPDATE_FINISHED.\r\n        // For any further call of update() the body render will fire the\r\n        // `renderFinished` event only once\r\n        var waitForBodyRenderer = (this.isUpdateInitialized) ? 1 : 3;\r\n        this.isUpdateInitialized = true;\r\n        this.fire(LineUp.EVENT_UPDATE_START);\r\n        this.header.update();\r\n        this.body.update();\r\n        this.pools.forEach(function (p) { return p.update(); });\r\n        this.body.on(ABodyRenderer.EVENT_RENDER_FINISHED + '.main', function () {\r\n            waitForBodyRenderer -= 1;\r\n            if (waitForBodyRenderer === 0) {\r\n                _this.fire(LineUp.EVENT_UPDATE_FINISHED);\r\n            }\r\n        });\r\n    };\r\n    LineUp.prototype.changeRenderingOption = function (option, value) {\r\n        this.config.renderingOptions[option] = value;\r\n        if (option === 'animation' || option === 'stacked') {\r\n            this.body.setOption(option, value);\r\n            this.body.update();\r\n        }\r\n    };\r\n    return LineUp;\r\n}(AEventDispatcher));\r\nexport default LineUp;\r\n/**\r\n * triggered when the mouse is over a specific row\r\n * @argument data_index:number the selected data index or <0 if no row\r\n */\r\nLineUp.EVENT_HOVER_CHANGED = ABodyRenderer.EVENT_HOVER_CHANGED;\r\n/**\r\n * triggered when the user click on a row\r\n * @argument data_index:number the selected data index or <0 if no row\r\n */\r\nLineUp.EVENT_SELECTION_CHANGED = DataProvider.EVENT_SELECTION_CHANGED;\r\n/**\r\n * triggered when the user selects one or more rows\r\n * @argument dataIndices:number[] the selected data indices\r\n */\r\nLineUp.EVENT_MULTISELECTION_CHANGED = 'multiSelectionChanged';\r\n/**\r\n * triggered when LineUpJS.update() was called\r\n */\r\nLineUp.EVENT_UPDATE_START = 'updateStart';\r\n/**\r\n * triggered when LineUpJS.update() was called and the rendering the body has finished\r\n */\r\nLineUp.EVENT_UPDATE_FINISHED = 'updateFinished';\r\n/**\r\n * assigns colors to columns if they are numbers and not yet defined\r\n * @param columns\r\n * @returns {IColumnDesc[]}\r\n */\r\nexport function deriveColors(columns) {\r\n    var colors = d3scale.category10().range().slice();\r\n    columns.forEach(function (col) {\r\n        switch (col.type) {\r\n            case 'number':\r\n                col.color = colors.shift();\r\n                break;\r\n        }\r\n    });\r\n    return columns;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/lineup.ts\n// module id = 18\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport Column from './Column';\r\nimport StringColumn from './StringColumn';\r\n/**\r\n * a string column in which the label is a text but the value a link\r\n */\r\nvar LinkColumn = (function (_super) {\r\n    __extends(LinkColumn, _super);\r\n    function LinkColumn(id, desc) {\r\n        var _this = _super.call(this, id, desc) || this;\r\n        /**\r\n         * a pattern used for generating the link, $1 is replaced with the actual value\r\n         * @type {null}\r\n         */\r\n        _this.link = null;\r\n        _this.link = desc.link;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(LinkColumn.prototype, \"headerCssClass\", {\r\n        get: function () {\r\n            return this.link == null ? 'link' : 'link link_pattern';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LinkColumn.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat([LinkColumn.EVENT_LINK_CHANGED]);\r\n    };\r\n    LinkColumn.prototype.setLink = function (link) {\r\n        /* tslint:disable */\r\n        if (link == this.link) {\r\n            return;\r\n        }\r\n        /* tslint:enable */\r\n        this.fire([LinkColumn.EVENT_LINK_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.link, this.link = link);\r\n    };\r\n    LinkColumn.prototype.getLink = function () {\r\n        return this.link || '';\r\n    };\r\n    LinkColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        /* tslint:disable */\r\n        if (this.link != this.desc.link) {\r\n            r.link = this.link;\r\n        }\r\n        /* tslint:enable */\r\n        return r;\r\n    };\r\n    LinkColumn.prototype.restore = function (dump, factory) {\r\n        _super.prototype.restore.call(this, dump, factory);\r\n        if (dump.link) {\r\n            this.link = dump.link;\r\n        }\r\n    };\r\n    LinkColumn.prototype.getLabel = function (row, index) {\r\n        var v = _super.prototype.getRaw.call(this, row, index);\r\n        if (v && v.alt) {\r\n            return v.alt;\r\n        }\r\n        return '' + v;\r\n    };\r\n    LinkColumn.prototype.isLink = function (row, index) {\r\n        if (this.link) {\r\n            return true;\r\n        }\r\n        //get original value\r\n        var v = _super.prototype.getRaw.call(this, row, index);\r\n        //convert to link\r\n        return v && v.href != null;\r\n    };\r\n    LinkColumn.prototype.getValue = function (row, index) {\r\n        //get original value\r\n        var v = _super.prototype.getRaw.call(this, row, index);\r\n        //convert to link\r\n        if (v && v.href) {\r\n            return v.href;\r\n        }\r\n        else if (this.link) {\r\n            return this.link.replace(/\\$1/g, v || '');\r\n        }\r\n        return v;\r\n    };\r\n    return LinkColumn;\r\n}(StringColumn));\r\nexport default LinkColumn;\r\nLinkColumn.EVENT_LINK_CHANGED = 'linkChanged';\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/LinkColumn.ts\n// module id = 19\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport { max as d3max } from 'd3';\r\nimport CompositeNumberColumn from './CompositeNumberColumn';\r\n/**\r\n *  factory for creating a description creating a max column\r\n * @param label\r\n * @returns {{type: string, label: string}}\r\n */\r\nexport function createDesc(label) {\r\n    if (label === void 0) { label = 'Max'; }\r\n    return { type: 'max', label: label };\r\n}\r\n/**\r\n * combines multiple columns by using the maximal value\r\n */\r\nvar MaxColumn = (function (_super) {\r\n    __extends(MaxColumn, _super);\r\n    function MaxColumn() {\r\n        return _super.apply(this, arguments) || this;\r\n    }\r\n    MaxColumn.prototype.getColor = function (row, index) {\r\n        //compute the index of the maximal one\r\n        var c = this._children;\r\n        if (c.length === 0) {\r\n            return this.color;\r\n        }\r\n        var max_i = 0, max_v = c[0].getValue(row, index);\r\n        for (var i = 1; i < c.length; ++i) {\r\n            var v = c[i].getValue(row, index);\r\n            if (v > max_v) {\r\n                max_i = i;\r\n                max_v = v;\r\n            }\r\n        }\r\n        return c[max_i].color;\r\n    };\r\n    MaxColumn.prototype.compute = function (row, index) {\r\n        return d3max(this._children, function (d) { return d.getValue(row, index); });\r\n    };\r\n    /**\r\n     * describe the column if it is a sorting criteria\r\n     * @param toId helper to convert a description to an id\r\n     * @return {string} json compatible\r\n     */\r\n    MaxColumn.prototype.toSortingDesc = function (toId) {\r\n        return {\r\n            operation: 'max',\r\n            operands: this._children.map(function (c) { return c.toSortingDesc(toId); })\r\n        };\r\n    };\r\n    return MaxColumn;\r\n}(CompositeNumberColumn));\r\nexport default MaxColumn;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/MaxColumn.ts\n// module id = 20\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport { mean as d3mean } from 'd3';\r\nimport CompositeNumberColumn from './CompositeNumberColumn';\r\n/**\r\n * factory for creating a description creating a mean column\r\n * @param label\r\n * @returns {{type: string, label: string}}\r\n */\r\nexport function createDesc(label) {\r\n    if (label === void 0) { label = 'Mean'; }\r\n    return { type: 'mean', label: label };\r\n}\r\nvar MeanColumn = (function (_super) {\r\n    __extends(MeanColumn, _super);\r\n    function MeanColumn() {\r\n        return _super.apply(this, arguments) || this;\r\n    }\r\n    MeanColumn.prototype.compute = function (row, index) {\r\n        return d3mean(this._children, function (d) { return d.getValue(row, index); });\r\n    };\r\n    /**\r\n     * describe the column if it is a sorting criteria\r\n     * @param toId helper to convert a description to an id\r\n     * @return {string} json compatible\r\n     */\r\n    MeanColumn.prototype.toSortingDesc = function (toId) {\r\n        return {\r\n            operation: 'avg',\r\n            operands: this._children.map(function (c) { return c.toSortingDesc(toId); })\r\n        };\r\n    };\r\n    return MeanColumn;\r\n}(CompositeNumberColumn));\r\nexport default MeanColumn;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/MeanColumn.ts\n// module id = 21\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport { min as d3min } from 'd3';\r\nimport CompositeNumberColumn from './CompositeNumberColumn';\r\n/**\r\n * factory for creating a description creating a min column\r\n * @param label\r\n * @returns {{type: string, label: string}}\r\n */\r\nexport function createDesc(label) {\r\n    if (label === void 0) { label = 'Min'; }\r\n    return { type: 'min', label: label };\r\n}\r\nvar MinColumn = (function (_super) {\r\n    __extends(MinColumn, _super);\r\n    function MinColumn() {\r\n        return _super.apply(this, arguments) || this;\r\n    }\r\n    MinColumn.prototype.getColor = function (row, index) {\r\n        //compute the index of the maximal one\r\n        var c = this._children;\r\n        if (c.length === 0) {\r\n            return this.color;\r\n        }\r\n        var min_i = 0, min_v = c[0].getValue(row, index);\r\n        for (var i = 1; i < c.length; ++i) {\r\n            var v = c[i].getValue(row, index);\r\n            if (v < min_v) {\r\n                min_i = i;\r\n                min_v = v;\r\n            }\r\n        }\r\n        return c[min_i].color;\r\n    };\r\n    MinColumn.prototype.compute = function (row, index) {\r\n        return d3min(this._children, function (d) { return d.getValue(row, index); });\r\n    };\r\n    /**\r\n     * describe the column if it is a sorting criteria\r\n     * @param toId helper to convert a description to an id\r\n     * @return {string} json compatible\r\n     */\r\n    MinColumn.prototype.toSortingDesc = function (toId) {\r\n        return {\r\n            operation: 'min',\r\n            operands: this._children.map(function (c) { return c.toSortingDesc(toId); })\r\n        };\r\n    };\r\n    return MinColumn;\r\n}(CompositeNumberColumn));\r\nexport default MinColumn;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/MinColumn.ts\n// module id = 22\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport MultiLevelCompositeColumn from './MultiLevelCompositeColumn';\r\n/**\r\n * factory for creating a description creating a mean column\r\n * @param label\r\n * @returns {{type: string, label: string}}\r\n */\r\nexport function createDesc(label) {\r\n    if (label === void 0) { label = 'Nested'; }\r\n    return { type: 'nested', label: label };\r\n}\r\n/**\r\n * a nested column is a composite column where the sorting order is determined by the nested ordering of the children\r\n * i.e., sort by the first child if equal sort by the second child,...\r\n */\r\nvar NestedColumn = (function (_super) {\r\n    __extends(NestedColumn, _super);\r\n    function NestedColumn() {\r\n        return _super.apply(this, arguments) || this;\r\n    }\r\n    NestedColumn.prototype.compare = function (a, b, aIndex, bIndex) {\r\n        var c = this.children;\r\n        for (var _i = 0, c_1 = c; _i < c_1.length; _i++) {\r\n            var ci = c_1[_i];\r\n            var ci_result = ci.compare(a, b, aIndex, bIndex);\r\n            if (ci_result !== 0) {\r\n                return ci_result;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    NestedColumn.prototype.getLabel = function (row, index) {\r\n        return this.children.map(function (d) { return d.getLabel(row, index); }).join(';');\r\n    };\r\n    NestedColumn.prototype.getValue = function (row, index) {\r\n        return this.children.map(function (d) { return d.getValue(row, index); }).join(';');\r\n    };\r\n    return NestedColumn;\r\n}(MultiLevelCompositeColumn));\r\nexport default NestedColumn;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/NestedColumn.ts\n// module id = 23\n// module chunks = 0 1","/**\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport * as d3 from 'd3';\r\nimport { forEach } from '../utils';\r\nimport { matchColumns } from '../renderer';\r\nimport ABodyRenderer from './ABodyRenderer';\r\nvar ABodyDOMRenderer = (function (_super) {\r\n    __extends(ABodyDOMRenderer, _super);\r\n    function ABodyDOMRenderer(data, parent, slicer, domMapping, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var _this = _super.call(this, data, parent, slicer, domMapping.root, options) || this;\r\n        _this.domMapping = domMapping;\r\n        _this.currentFreezeLeft = 0;\r\n        return _this;\r\n    }\r\n    ABodyDOMRenderer.prototype.animated = function ($rows) {\r\n        if (this.options.animationDuration > 0 && this.options.animation) {\r\n            return $rows.transition().duration(this.options.animationDuration);\r\n        }\r\n        return $rows;\r\n    };\r\n    ABodyDOMRenderer.prototype.renderRankings = function ($body, data, context, height) {\r\n        var _this = this;\r\n        var that = this;\r\n        var domMapping = this.domMapping;\r\n        var g = this.domMapping.g;\r\n        var $rankings = $body.selectAll(g + '.ranking').data(data, function (d) { return d.id; });\r\n        var $rankings_enter = $rankings.enter().append(g)\r\n            .attr('class', 'ranking')\r\n            .call(domMapping.transform, function (d) { return [d.shift, 0]; });\r\n        $rankings_enter.append(g).attr('class', 'rows');\r\n        $rankings_enter.append(g).attr('class', 'meanlines').attr('clip-path', \"url(#c\" + this.options.idPrefix + \"Freeze)\");\r\n        //animated shift\r\n        this.animated($rankings).call(domMapping.transform, function (d, i) { return [d.shift, 0]; });\r\n        var toWait = [];\r\n        {\r\n            var $rows = $rankings.select(g + '.rows').selectAll(g + '.row').data(function (d) { return d.order; }, String);\r\n            var $rows_enter = $rows.enter().append(g).attr('class', 'row');\r\n            $rows_enter.call(domMapping.transform, function (d, i) { return [0, context.cellPrevY(i)]; });\r\n            $rows_enter.append(domMapping.bg).attr('class', 'bg');\r\n            $rows_enter\r\n                .on('mouseenter', function (d) { return _this.mouseOver(d, true); })\r\n                .on('mouseleave', function (d) { return _this.mouseOver(d, false); })\r\n                .on('click', function (d) { return _this.select(d, d3.event.ctrlKey); });\r\n            //create templates\r\n            var createTemplates_1 = function (node, columns) {\r\n                matchColumns(node, columns);\r\n                //set transform\r\n                columns.forEach(function (col, ci) {\r\n                    var cnode = node.childNodes[ci];\r\n                    domMapping.translate(cnode, col.shift, 0);\r\n                });\r\n            };\r\n            $rows_enter.append(g).attr('class', 'cols').attr('clip-path', \"url(#c\" + this.options.idPrefix + \"Freeze)\").each(function (d, i, j) {\r\n                createTemplates_1(this, data[j].columns);\r\n            });\r\n            $rows_enter.append(g).attr('class', 'frozen').call(this.domMapping.transform, function () { return [_this.currentFreezeLeft, 0]; }).each(function (d, i, j) {\r\n                createTemplates_1(this, data[j].frozen);\r\n            });\r\n            $rows\r\n                .attr('class', function (d, i) { return 'row ' + (i % 2 === 0 ? 'even' : ''); })\r\n                .attr('data-data-index', function (d) { return d; })\r\n                .classed('selected', function (d) { return _this.data.isSelected(d); });\r\n            //.classed('highlighted', (d) => this.data.isHighlighted(d.d));\r\n            //animated reordering\r\n            this.animated($rows).call(domMapping.transform, function (d, i) { return [0, context.cellY(i)]; });\r\n            //update background helper\r\n            $rows.select(domMapping.bg).attr('class', 'bg')\r\n                .call(domMapping.updateBG, function (d, i, j) { return [data[j].width, context.rowHeight(i)]; });\r\n            var updateColumns_1 = function (node, r, i, columns) {\r\n                //update nodes and create templates\r\n                return r.data[i].then(function (row) {\r\n                    matchColumns(node, columns);\r\n                    columns.forEach(function (col, ci) {\r\n                        var cnode = node.childNodes[ci];\r\n                        domMapping.translate(cnode, col.shift, 0);\r\n                        col.renderer.update(cnode, row, i);\r\n                    });\r\n                });\r\n            };\r\n            //update columns\r\n            $rows.select(g + '.cols').each(function (d, i, j) {\r\n                toWait.push(updateColumns_1(this, data[j], i, data[j].columns));\r\n            });\r\n            //order for frozen in html + set the size in html to have a proper background instead of a clip-path\r\n            var maxFrozen_1 = data.length === 0 || data[0].frozen.length === 0 ? 0 : d3.max(data[0].frozen, function (f) { return f.shift + f.column.getWidth(); });\r\n            $rows.select(g + '.frozen').each(function (d, i, j) {\r\n                domMapping.setSize(this, maxFrozen_1, that.options.rowHeight);\r\n                toWait.push(updateColumns_1(this, data[j], i, data[j].frozen));\r\n            });\r\n            $rows.exit().remove();\r\n        }\r\n        {\r\n            var $meanlines = $rankings.select(g + '.meanlines').selectAll(domMapping.meanLine + '.meanline').data(function (d) { return d.columns.filter(function (c) { return _this.showMeanLine(c.column); }); });\r\n            $meanlines.enter().append(domMapping.meanLine).attr('class', 'meanline');\r\n            $meanlines.each(function (d) {\r\n                var h = that.histCache.get(d.column.id);\r\n                var $mean = d3.select(this);\r\n                if (!h) {\r\n                    return;\r\n                }\r\n                h.then(function (stats) {\r\n                    var x_pos = d.shift + d.column.getWidth() * stats.mean;\r\n                    domMapping.updateMeanLine($mean, isNaN(x_pos) ? 0 : x_pos, height);\r\n                });\r\n            });\r\n            $meanlines.exit().remove();\r\n        }\r\n        $rankings.exit().remove();\r\n        return Promise.all(toWait);\r\n    };\r\n    ABodyDOMRenderer.prototype.select = function (dataIndex, additional) {\r\n        if (additional === void 0) { additional = false; }\r\n        var selected = _super.prototype.select.call(this, dataIndex, additional);\r\n        this.$node.selectAll(\"[data-data-index=\\\"\" + dataIndex + \"\\\"\").classed('selected', selected);\r\n        return selected;\r\n    };\r\n    ABodyDOMRenderer.prototype.drawSelection = function () {\r\n        var indices = this.data.getSelection();\r\n        forEach(this.node, '.selected', function (d) { return d.classList.remove('selected'); });\r\n        if (indices.length === 0) {\r\n            return;\r\n        }\r\n        else {\r\n            var q = indices.map(function (d) { return \"[data-data-index=\\\"\" + d + \"\\\"]\"; }).join(',');\r\n            forEach(this.node, q, function (d) { return d.classList.add('selected'); });\r\n        }\r\n    };\r\n    ABodyDOMRenderer.prototype.mouseOver = function (dataIndex, hover) {\r\n        if (hover === void 0) { hover = true; }\r\n        _super.prototype.mouseOver.call(this, dataIndex, hover);\r\n        function setClass(item) {\r\n            item.classList.add('hover');\r\n        }\r\n        forEach(this.node, '.hover', function (d) { return d.classList.remove('hover'); });\r\n        if (hover) {\r\n            forEach(this.node, \"[data-data-index=\\\"\" + dataIndex + \"\\\"]\", setClass);\r\n        }\r\n    };\r\n    ABodyDOMRenderer.prototype.renderSlopeGraphs = function ($parent, data, context, height) {\r\n        var _this = this;\r\n        var slopes = data.slice(1).map(function (d, i) { return ({ left: data[i].order, left_i: i, right: d.order, right_i: i + 1 }); });\r\n        var $slopes = $parent.selectAll(this.domMapping.slopes + '.slopegraph').data(slopes);\r\n        $slopes.enter().append(this.domMapping.slopes).attr('class', 'slopegraph');\r\n        //$slopes.attr('transform', (d, i) => `translate(${(shifts[i + 1].shift - this.options.slopeWidth)},0)`);\r\n        $slopes.call(this.domMapping.updateSlopes, this.options.slopeWidth, height, function (d, i) { return ((data[i + 1].shift - _this.options.slopeWidth)); });\r\n        var $lines = $slopes.selectAll('line.slope').data(function (d) {\r\n            var cache = new Map();\r\n            d.right.forEach(function (data_index, pos) { return cache.set(data_index, pos); });\r\n            return d.left.map(function (data_index, pos) { return ({\r\n                data_index: data_index,\r\n                lpos: pos,\r\n                rpos: cache.get(data_index)\r\n            }); }).filter(function (d) { return d.rpos != null; });\r\n        });\r\n        $lines.enter().append('line').attr({\r\n            'class': 'slope',\r\n            x2: this.options.slopeWidth\r\n        }).on('mouseenter', function (d) { return _this.mouseOver(d.data_index, true); })\r\n            .on('mouseleave', function (d) { return _this.mouseOver(d.data_index, false); });\r\n        $lines.attr('data-data-index', function (d) { return d.data_index; });\r\n        $lines.attr({\r\n            y1: function (d) { return context.rowHeight(d.lpos) * 0.5 + context.cellY(d.lpos); },\r\n            y2: function (d) { return context.rowHeight(d.rpos) * 0.5 + context.cellY(d.rpos); }\r\n        });\r\n        $lines.exit().remove();\r\n        $slopes.exit().remove();\r\n    };\r\n    ABodyDOMRenderer.prototype.updateFreeze = function (left) {\r\n        var _this = this;\r\n        forEach(this.node, this.domMapping.g + '.row .frozen', function (row) {\r\n            _this.domMapping.translate(row, left, 0);\r\n        });\r\n        var item = this.node.querySelector(\"clipPath#c\" + this.options.idPrefix + \"Freeze\");\r\n        if (item) {\r\n            this.domMapping.translate(item, left, 0);\r\n        }\r\n        this.currentFreezeLeft = left;\r\n    };\r\n    ABodyDOMRenderer.prototype.createContextImpl = function (index_shift) {\r\n        return this.createContext(index_shift, this.domMapping.creator);\r\n    };\r\n    ABodyDOMRenderer.prototype.updateImpl = function (data, context, width, height, reason) {\r\n        // - ... added one to often\r\n        this.domMapping.setSize(this.node, Math.max(0, width), height);\r\n        var $body = this.$node.select(this.domMapping.g + '.body');\r\n        if ($body.empty()) {\r\n            $body = this.$node.append(this.domMapping.g).classed('body', true);\r\n        }\r\n        this.renderSlopeGraphs($body, data, context, height);\r\n        this.updateClipPaths(data, context, height);\r\n        return this.renderRankings($body, data, context, height);\r\n    };\r\n    return ABodyDOMRenderer;\r\n}(ABodyRenderer));\r\nexport default ABodyDOMRenderer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui/ADOMBodyRenderer.ts\n// module id = 24\n// module chunks = 0 1","/**\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\nimport * as d3 from 'd3';\r\nimport { merge, dropAble, delayedCall, forEach } from '../utils';\r\nimport Column from '../model/Column';\r\nimport StringColumn from '../model/StringColumn';\r\nimport Ranking from '../model/Ranking';\r\nimport { isMultiLevelColumn } from '../model/CompositeColumn';\r\nimport NumberColumn, { isNumberColumn } from '../model/NumberColumn';\r\nimport { isCategoricalColumn } from '../model/CategoricalColumn';\r\nimport RankColumn from '../model/RankColumn';\r\nimport StackColumn, { createDesc as createStackDesc } from '../model/StackColumn';\r\nimport LinkColumn from '../model/LinkColumn';\r\nimport ScriptColumn from '../model/ScriptColumn';\r\nimport DataProvider from '../provider/ADataProvider';\r\nimport { filterDialogs, openEditWeightsDialog, openEditLinkDialog, openEditScriptDialog, openRenameDialog, openSearchDialog } from '../ui_dialogs';\r\n/**\r\n * utility function to generate the tooltip text with description\r\n * @param col the column\r\n */\r\nexport function toFullTooltip(col) {\r\n    var base = col.label;\r\n    if (col.description != null && col.description !== '') {\r\n        base += '\\n' + col.description;\r\n    }\r\n    return base;\r\n}\r\nexport function dummyRankingButtonHook() {\r\n    return null;\r\n}\r\nfunction countMultiLevel(c) {\r\n    if (isMultiLevelColumn(c) && !c.getCollapsed() && !c.getCompressed()) {\r\n        return 1 + Math.max.apply(Math, c.children.map(countMultiLevel));\r\n    }\r\n    return 1;\r\n}\r\nvar HeaderRenderer = (function () {\r\n    function HeaderRenderer(data, parent, options) {\r\n        var _this = this;\r\n        this.data = data;\r\n        this.options = {\r\n            idPrefix: '',\r\n            slopeWidth: 150,\r\n            columnPadding: 5,\r\n            headerHistogramHeight: 40,\r\n            headerHeight: 20,\r\n            manipulative: true,\r\n            histograms: false,\r\n            filterDialogs: filterDialogs(),\r\n            linkTemplates: [],\r\n            searchAble: function (col) { return col instanceof StringColumn; },\r\n            sortOnLabel: true,\r\n            autoRotateLabels: false,\r\n            rotationHeight: 50,\r\n            rotationDegree: -20,\r\n            freezeCols: 0,\r\n            rankingButtons: dummyRankingButtonHook\r\n        };\r\n        this.histCache = new Map();\r\n        this.dragHandler = d3.behavior.drag()\r\n            .on('dragstart', function () {\r\n            d3.select(this).classed('dragging', true);\r\n            d3.event.sourceEvent.stopPropagation();\r\n            d3.event.sourceEvent.preventDefault();\r\n        })\r\n            .on('drag', function (d) {\r\n            //the new width\r\n            var newValue = Math.max(d3.mouse(this.parentNode)[0], 2);\r\n            d.setWidth(newValue);\r\n            d3.event.sourceEvent.stopPropagation();\r\n            d3.event.sourceEvent.preventDefault();\r\n        })\r\n            .on('dragend', function () {\r\n            d3.select(this).classed('dragging', false);\r\n            d3.event.sourceEvent.stopPropagation();\r\n            d3.event.sourceEvent.preventDefault();\r\n        });\r\n        this.dropHandler = dropAble(['application/caleydo-lineup-column-ref', 'application/caleydo-lineup-column'], function (data, d, copy) {\r\n            var col = null;\r\n            if ('application/caleydo-lineup-column-ref' in data) {\r\n                var id = data['application/caleydo-lineup-column-ref'];\r\n                col = _this.data.find(id);\r\n                if (copy) {\r\n                    col = _this.data.clone(col);\r\n                }\r\n                else {\r\n                    col.removeMe();\r\n                }\r\n            }\r\n            else {\r\n                var desc = JSON.parse(data['application/caleydo-lineup-column']);\r\n                col = _this.data.create(_this.data.fromDescRef(desc));\r\n            }\r\n            if (d instanceof Column) {\r\n                return d.insertAfterMe(col) != null;\r\n            }\r\n            else {\r\n                var r = _this.data.getLastRanking();\r\n                return r.push(col) !== null;\r\n            }\r\n        });\r\n        merge(this.options, options);\r\n        this.$node = d3.select(parent).append('div').classed('lu-header', true);\r\n        this.$node.append('div').classed('drop', true).call(this.dropHandler);\r\n        this.changeDataStorage(data);\r\n    }\r\n    HeaderRenderer.prototype.changeDataStorage = function (data) {\r\n        var _this = this;\r\n        if (this.data) {\r\n            this.data.on([DataProvider.EVENT_DIRTY_HEADER + '.headerRenderer', DataProvider.EVENT_ORDER_CHANGED + '.headerRenderer', DataProvider.EVENT_SELECTION_CHANGED + '.headerRenderer'], null);\r\n        }\r\n        this.data = data;\r\n        data.on(DataProvider.EVENT_DIRTY_HEADER + '.headerRenderer', delayedCall(this.update.bind(this), 1));\r\n        if (this.options.histograms) {\r\n            data.on(DataProvider.EVENT_ORDER_CHANGED + '.headerRenderer', function () {\r\n                _this.updateHist();\r\n                _this.update();\r\n            });\r\n            data.on(DataProvider.EVENT_SELECTION_CHANGED + '.headerRenderer', delayedCall(this.drawSelection.bind(this), 1));\r\n        }\r\n    };\r\n    Object.defineProperty(HeaderRenderer.prototype, \"sharedHistCache\", {\r\n        get: function () {\r\n            return this.histCache;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * defines the current header height in pixel\r\n     * @returns {number}\r\n     */\r\n    HeaderRenderer.prototype.currentHeight = function () {\r\n        return parseInt(this.$node.style('height'), 10);\r\n    };\r\n    HeaderRenderer.prototype.updateHist = function () {\r\n        var _this = this;\r\n        var rankings = this.data.getRankings();\r\n        rankings.forEach(function (ranking) {\r\n            var order = ranking.getOrder();\r\n            var cols = ranking.flatColumns;\r\n            var histo = order == null ? null : _this.data.stats(order);\r\n            cols.filter(function (d) { return d instanceof NumberColumn && !d.isHidden(); }).forEach(function (col) {\r\n                _this.histCache.set(col.id, histo === null ? null : histo.stats(col));\r\n            });\r\n            cols.filter(function (d) { return isCategoricalColumn(d) && !d.isHidden(); }).forEach(function (col) {\r\n                _this.histCache.set(col.id, histo === null ? null : histo.hist(col));\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * update the selection in the histograms\r\n     */\r\n    HeaderRenderer.prototype.drawSelection = function () {\r\n        var _this = this;\r\n        if (!this.options.histograms) {\r\n            return;\r\n        }\r\n        //highlight the bins in the histograms\r\n        var node = this.$node.node();\r\n        forEach(node, 'div.bar', function (d) { return d.classList.remove('selected'); });\r\n        var indices = this.data.getSelection();\r\n        if (indices.length <= 0) {\r\n            return;\r\n        }\r\n        this.data.view(indices).then(function (data) {\r\n            //get the data\r\n            var rankings = _this.data.getRankings();\r\n            rankings.forEach(function (ranking) {\r\n                var cols = ranking.flatColumns;\r\n                //find all number histograms\r\n                cols.filter(function (d) { return d instanceof NumberColumn && !d.isHidden(); }).forEach(function (col) {\r\n                    var bars = [].slice.call(node.querySelectorAll(\"div.header[data-id=\\\"\" + col.id + \"\\\"] div.bar\"));\r\n                    data.forEach(function (d, i) {\r\n                        var v = col.getValue(d, indices[i]);\r\n                        //choose the right bin\r\n                        for (var i_1 = 1; i_1 < bars.length; ++i_1) {\r\n                            var bar = bars[i_1];\r\n                            if (bar.dataset.x > v) {\r\n                                bars[i_1 - 1].classList.add('selected');\r\n                                break;\r\n                            }\r\n                            else if (i_1 === bars.length - 1) {\r\n                                bar.classList.add('selected');\r\n                                break;\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n                cols.filter(function (d) { return isCategoricalColumn(d) && !d.isHidden(); }).forEach(function (col) {\r\n                    var header = node.querySelector(\"div.header[data-id=\\\"\" + col.id + \"\\\"]\");\r\n                    data.forEach(function (d, i) {\r\n                        var cats = col.getCategories(d, indices[i]);\r\n                        (cats || []).forEach(function (cat) {\r\n                            header.querySelector(\"div.bar[data-cat=\\\"\" + cat + \"\\\"]\").classList.add('selected');\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    HeaderRenderer.prototype.renderRankingButtons = function (rankings, rankingsOffsets) {\r\n        var $rankingbuttons = this.$node.selectAll('div.rankingbuttons').data(rankings);\r\n        $rankingbuttons.enter().append('div')\r\n            .classed('rankingbuttons', true)\r\n            .call(this.options.rankingButtons);\r\n        $rankingbuttons.style('left', function (d, i) { return rankingsOffsets[i] + 'px'; });\r\n        $rankingbuttons.exit().remove();\r\n    };\r\n    HeaderRenderer.prototype.update = function () {\r\n        var _this = this;\r\n        var that = this;\r\n        var rankings = this.data.getRankings();\r\n        var shifts = [], totalWidth = 0, rankingOffsets = [];\r\n        rankings.forEach(function (ranking) {\r\n            totalWidth += ranking.flatten(shifts, totalWidth, 1, _this.options.columnPadding) + _this.options.slopeWidth;\r\n            rankingOffsets.push(totalWidth - _this.options.slopeWidth);\r\n        });\r\n        //real width\r\n        totalWidth -= this.options.slopeWidth;\r\n        // fix for #179\r\n        this.$node.select('div.drop').style('width', totalWidth + 'px');\r\n        var columns = shifts.map(function (d) { return d.col; });\r\n        //update all if needed\r\n        if (this.options.histograms && this.histCache.size === 0 && rankings.length > 0) {\r\n            this.updateHist();\r\n        }\r\n        this.renderColumns(columns, shifts);\r\n        if (this.options.rankingButtons !== dummyRankingButtonHook) {\r\n            this.renderRankingButtons(rankings, rankingOffsets);\r\n        }\r\n        var levels = Math.max.apply(Math, columns.map(countMultiLevel));\r\n        var height = (this.options.histograms ? this.options.headerHistogramHeight : this.options.headerHeight) + (levels - 1) * this.options.headerHeight;\r\n        if (this.options.autoRotateLabels) {\r\n            //check if we have overflows\r\n            var rotatedAny_1 = false;\r\n            this.$node.selectAll('div.header')\r\n                .style('height', height + 'px').select('div.lu-label').each(function (d) {\r\n                var w = this.querySelector('span.lu-label').offsetWidth;\r\n                var actWidth = d.getWidth();\r\n                if (w > (actWidth + 30)) {\r\n                    d3.select(this).style('transform', \"rotate(\" + that.options.rotationDegree + \"deg)\");\r\n                    rotatedAny_1 = true;\r\n                }\r\n                else {\r\n                    d3.select(this).style('transform', null);\r\n                }\r\n            });\r\n            this.$node.selectAll('div.header').style('margin-top', rotatedAny_1 ? this.options.rotationHeight + 'px' : null);\r\n            height += rotatedAny_1 ? this.options.rotationHeight : 0;\r\n        }\r\n        this.$node.style('height', height + 'px');\r\n    };\r\n    HeaderRenderer.prototype.createToolbar = function ($node) {\r\n        var _this = this;\r\n        var filterDialogs = this.options.filterDialogs, provider = this.data, that = this;\r\n        var $regular = $node.filter(function (d) { return !(d instanceof RankColumn); });\r\n        //rename\r\n        $regular.append('i').attr('class', 'fa fa-pencil-square-o').attr('title', 'Rename').on('click', function (d) {\r\n            openRenameDialog(d, d3.select(this.parentNode.parentNode));\r\n            d3.event.stopPropagation();\r\n        });\r\n        //clone\r\n        $regular.append('i').attr('class', 'fa fa-code-fork').attr('title', 'Generate Snapshot').on('click', function (d) {\r\n            provider.takeSnapshot(d);\r\n            d3.event.stopPropagation();\r\n        });\r\n        //edit link\r\n        $node.filter(function (d) { return d instanceof LinkColumn; }).append('i').attr('class', 'fa fa-external-link').attr('title', 'Edit Link Pattern').on('click', function (d) {\r\n            openEditLinkDialog(d, d3.select(this.parentNode.parentNode), [].concat(d.desc.templates || [], that.options.linkTemplates), that.options.idPrefix);\r\n            d3.event.stopPropagation();\r\n        });\r\n        //edit script\r\n        $node.filter(function (d) { return d instanceof ScriptColumn; }).append('i').attr('class', 'fa fa-gears').attr('title', 'Edit Combine Script').on('click', function (d) {\r\n            openEditScriptDialog(d, d3.select(this.parentNode.parentNode));\r\n            d3.event.stopPropagation();\r\n        });\r\n        //filter\r\n        $node.filter(function (d) { return filterDialogs.hasOwnProperty(d.desc.type); }).append('i').attr('class', 'fa fa-filter').attr('title', 'Filter').on('click', function (d) {\r\n            filterDialogs[d.desc.type](d, d3.select(this.parentNode.parentNode), provider, that.options.idPrefix);\r\n            d3.event.stopPropagation();\r\n        });\r\n        //search\r\n        $node.filter(function (d) { return _this.options.searchAble(d); }).append('i').attr('class', 'fa fa-search').attr('title', 'Search').on('click', function (d) {\r\n            openSearchDialog(d, d3.select(this.parentNode.parentNode), provider);\r\n            d3.event.stopPropagation();\r\n        });\r\n        //edit weights\r\n        $node.filter(function (d) { return d instanceof StackColumn; }).append('i').attr('class', 'fa fa-tasks').attr('title', 'Edit Weights').on('click', function (d) {\r\n            openEditWeightsDialog(d, d3.select(this.parentNode.parentNode));\r\n            d3.event.stopPropagation();\r\n        });\r\n        //collapse\r\n        $regular.append('i')\r\n            .attr('class', 'fa')\r\n            .classed('fa-toggle-left', function (d) { return !d.getCompressed(); })\r\n            .classed('fa-toggle-right', function (d) { return d.getCompressed(); })\r\n            .attr('title', '(Un)Collapse')\r\n            .on('click', function (d) {\r\n            d.setCompressed(!d.getCompressed());\r\n            d3.select(this)\r\n                .classed('fa-toggle-left', !d.getCompressed())\r\n                .classed('fa-toggle-right', d.getCompressed());\r\n            d3.event.stopPropagation();\r\n        });\r\n        //compress\r\n        $node.filter(function (d) { return isMultiLevelColumn(d); }).append('i')\r\n            .attr('class', 'fa')\r\n            .classed('fa-compress', function (d) { return !d.getCollapsed(); })\r\n            .classed('fa-expand', function (d) { return d.getCollapsed(); })\r\n            .attr('title', 'Compress/Expand')\r\n            .on('click', function (d) {\r\n            d.setCollapsed(!d.getCollapsed());\r\n            d3.select(this)\r\n                .classed('fa-compress', !d.getCollapsed())\r\n                .classed('fa-expand', d.getCollapsed());\r\n            d3.event.stopPropagation();\r\n        });\r\n        //remove\r\n        $node.append('i').attr('class', 'fa fa-times').attr('title', 'Hide').on('click', function (d) {\r\n            if (d instanceof RankColumn) {\r\n                provider.removeRanking(d.findMyRanker());\r\n                if (provider.getRankings().length === 0) {\r\n                    provider.pushRanking();\r\n                }\r\n            }\r\n            else {\r\n                d.removeMe();\r\n            }\r\n            d3.event.stopPropagation();\r\n        });\r\n    };\r\n    HeaderRenderer.prototype.updateFreeze = function (left) {\r\n        var numColumns = this.options.freezeCols;\r\n        this.$node.selectAll('div.header')\r\n            .style('z-index', function (d, i) { return i < numColumns ? 1 : null; })\r\n            .style('transform', function (d, i) { return i < numColumns ? \"translate(\" + left + \"px,0)\" : null; });\r\n    };\r\n    HeaderRenderer.prototype.renderColumns = function (columns, shifts, $base, clazz) {\r\n        var _this = this;\r\n        if ($base === void 0) { $base = this.$node; }\r\n        if (clazz === void 0) { clazz = 'header'; }\r\n        var that = this;\r\n        var $headers = $base.selectAll('div.' + clazz).data(columns, function (d) { return d.id; });\r\n        var $headers_enter = $headers.enter().append('div').attr('class', clazz)\r\n            .on('click', function (d) {\r\n            var mevent = d3.event;\r\n            if (_this.options.manipulative && !mevent.defaultPrevented && mevent.currentTarget === mevent.target) {\r\n                d.toggleMySorting();\r\n            }\r\n        });\r\n        var $header_enter_div = $headers_enter.append('div').classed('lu-label', true)\r\n            .on('click', function (d) {\r\n            var mevent = d3.event;\r\n            if (_this.options.manipulative && !mevent.defaultPrevented) {\r\n                d.toggleMySorting();\r\n            }\r\n        })\r\n            .on('dragstart', function (d) {\r\n            var e = d3.event;\r\n            e.dataTransfer.effectAllowed = 'copyMove'; //none, copy, copyLink, copyMove, link, linkMove, move, all\r\n            e.dataTransfer.setData('text/plain', d.label);\r\n            e.dataTransfer.setData('application/caleydo-lineup-column-ref', d.id);\r\n            var ref = JSON.stringify(_this.data.toDescRef(d.desc));\r\n            e.dataTransfer.setData('application/caleydo-lineup-column', ref);\r\n            if (isNumberColumn(d)) {\r\n                e.dataTransfer.setData('application/caleydo-lineup-column-number', ref);\r\n                e.dataTransfer.setData('application/caleydo-lineup-column-number-ref', d.id);\r\n            }\r\n        });\r\n        $header_enter_div.append('i').attr('class', 'fa fa sort_indicator');\r\n        $header_enter_div.append('span').classed('lu-label', true).attr({\r\n            'draggable': this.options.manipulative\r\n        });\r\n        if (this.options.manipulative) {\r\n            $headers_enter.append('div').classed('handle', true)\r\n                .call(this.dragHandler)\r\n                .style('width', this.options.columnPadding + 'px')\r\n                .call(this.dropHandler);\r\n            $headers_enter.append('div').classed('toolbar', true).call(this.createToolbar.bind(this));\r\n        }\r\n        if (this.options.histograms) {\r\n            $headers_enter.append('div').classed('histogram', true);\r\n        }\r\n        $headers.style({\r\n            width: function (d, i) { return (shifts[i].width + _this.options.columnPadding) + 'px'; },\r\n            left: function (d, i) { return shifts[i].offset + 'px'; },\r\n            'background-color': function (d) { return d.color; }\r\n        });\r\n        $headers.attr({\r\n            'class': function (d) { return clazz + \" \" + (d.cssClass || '') + \" \" + (d.getCompressed() ? 'compressed' : '') + \" \" + d.headerCssClass + \" \" + (_this.options.autoRotateLabels ? 'rotateable' : '') + \" \" + (d.isFiltered() ? 'filtered' : ''); },\r\n            title: function (d) { return toFullTooltip(d); },\r\n            'data-id': function (d) { return d.id; }\r\n        });\r\n        $headers.select('i.sort_indicator').attr('class', function (d) {\r\n            var r = d.findMyRanker();\r\n            if (r && r.getSortCriteria().col === d) {\r\n                return 'sort_indicator fa fa-sort-' + (r.getSortCriteria().asc ? 'asc' : 'desc');\r\n            }\r\n            return 'sort_indicator fa';\r\n        });\r\n        $headers.select('span.lu-label').text(function (d) { return d.label; });\r\n        $headers.filter(function (d) { return isMultiLevelColumn(d); }).each(function (col) {\r\n            if (col.getCollapsed() || col.getCompressed()) {\r\n                d3.select(this).selectAll('div.' + clazz + '_i').remove();\r\n            }\r\n            else {\r\n                var s_shifts = [];\r\n                col.flatten(s_shifts, 0, 1, that.options.columnPadding);\r\n                var s_columns = s_shifts.map(function (d) { return d.col; });\r\n                that.renderColumns(s_columns, s_shifts, d3.select(this), clazz + (clazz.substr(clazz.length - 2) !== '_i' ? '_i' : ''));\r\n            }\r\n        }).select('div.lu-label').call(dropAble(['application/caleydo-lineup-column-number-ref', 'application/caleydo-lineup-column-number'], function (data, d, copy) {\r\n            var col = null;\r\n            if ('application/caleydo-lineup-column-number-ref' in data) {\r\n                var id = data['application/caleydo-lineup-column-number-ref'];\r\n                col = _this.data.find(id);\r\n                if (copy) {\r\n                    col = _this.data.clone(col);\r\n                }\r\n                else if (col) {\r\n                    col.removeMe();\r\n                }\r\n            }\r\n            else {\r\n                var desc = JSON.parse(data['application/caleydo-lineup-column-number']);\r\n                col = _this.data.create(_this.data.fromDescRef(desc));\r\n            }\r\n            return d.push(col) != null;\r\n        }));\r\n        // drag columns on top of each\r\n        $headers.filter(function (d) { return d.parent instanceof Ranking && isNumberColumn(d) && !isMultiLevelColumn(d); }).select('div.lu-label').call(dropAble(['application/caleydo-lineup-column-number-ref', 'application/caleydo-lineup-column-number'], function (data, d, copy) {\r\n            var col = null;\r\n            if ('application/caleydo-lineup-column-number-ref' in data) {\r\n                var id = data['application/caleydo-lineup-column-number-ref'];\r\n                col = _this.data.find(id);\r\n                if (copy) {\r\n                    col = _this.data.clone(col);\r\n                }\r\n                else if (col) {\r\n                    col.removeMe();\r\n                }\r\n            }\r\n            else {\r\n                var desc = JSON.parse(data['application/caleydo-lineup-column-number']);\r\n                col = _this.data.create(_this.data.fromDescRef(desc));\r\n            }\r\n            var ranking = d.findMyRanker();\r\n            var index = ranking.indexOf(d);\r\n            var stack = _this.data.create(createStackDesc());\r\n            d.removeMe();\r\n            stack.push(d);\r\n            stack.push(col);\r\n            return ranking.insert(stack, index) != null;\r\n        }));\r\n        if (this.options.histograms) {\r\n            $headers.filter(function (d) { return isCategoricalColumn(d); }).each(function (col) {\r\n                var $this = d3.select(this).select('div.histogram');\r\n                var hist = that.histCache.get(col.id);\r\n                if (hist) {\r\n                    hist.then(function (stats) {\r\n                        var $bars = $this.selectAll('div.bar').data(stats.hist);\r\n                        $bars.enter().append('div').classed('bar', true);\r\n                        var sx = d3.scale.ordinal().domain(col.categories).rangeBands([0, 100], 0.1);\r\n                        var sy = d3.scale.linear().domain([0, stats.maxBin]).range([0, 100]);\r\n                        $bars.style({\r\n                            left: function (d) { return sx(d.cat) + '%'; },\r\n                            width: function (d) { return sx.rangeBand() + '%'; },\r\n                            top: function (d) { return (100 - sy(d.y)) + '%'; },\r\n                            height: function (d) { return sy(d.y) + '%'; },\r\n                            'background-color': function (d) { return col.colorOf(d.cat); }\r\n                        }).attr({\r\n                            title: function (d) { return d.cat + \": \" + d.y; },\r\n                            'data-cat': function (d) { return d.cat; }\r\n                        });\r\n                        $bars.exit().remove();\r\n                    });\r\n                }\r\n            });\r\n            $headers.filter(function (d) { return d instanceof NumberColumn; }).each(function (col) {\r\n                var $this = d3.select(this).select('div.histogram');\r\n                var hist = that.histCache.get(col.id);\r\n                if (hist) {\r\n                    hist.then(function (stats) {\r\n                        var $bars = $this.selectAll('div.bar').data(stats.hist);\r\n                        $bars.enter().append('div').classed('bar', true);\r\n                        var sx = d3.scale.ordinal().domain(d3.range(stats.hist.length).map(String)).rangeBands([0, 100], 0.1);\r\n                        var sy = d3.scale.linear().domain([0, stats.maxBin]).range([0, 100]);\r\n                        $bars.style({\r\n                            left: function (d, i) { return sx(String(i)) + '%'; },\r\n                            width: function (d, i) { return sx.rangeBand() + '%'; },\r\n                            top: function (d) { return (100 - sy(d.y)) + '%'; },\r\n                            height: function (d) { return sy(d.y) + '%'; }\r\n                        }).attr({\r\n                            title: function (d, i) { return \"Bin \" + i + \": \" + d.y; },\r\n                            'data-x': function (d) { return d.x; }\r\n                        });\r\n                        $bars.exit().remove();\r\n                        var $mean = $this.select('div.mean');\r\n                        if ($mean.empty()) {\r\n                            $mean = $this.append('div').classed('mean', true);\r\n                        }\r\n                        $mean.style('left', (stats.mean * 100) + '%');\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        $headers.exit().remove();\r\n    };\r\n    return HeaderRenderer;\r\n}());\r\nexport default HeaderRenderer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui/HeaderRenderer.ts\n// module id = 25\n// module chunks = 0 1","/**\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\nexport { default as HeaderRenderer, IRankingHook, dummyRankingButtonHook } from './HeaderRenderer';\r\nexport { default as PoolRenderer } from './PoolRenderer';\r\nexport { ISlicer, IBodyRenderer } from './ABodyRenderer';\r\nimport SVGBodyRenderer from './SVGBodyRenderer';\r\nimport HTMLBodyRenderer from './HTMLBodyRenderer';\r\nimport CanvasBodyRenderer from './CanvasBodyRenderer';\r\nexport function createBodyRenderer(type, data, parent, slicer, options) {\r\n    if (type === void 0) { type = 'svg'; }\r\n    if (options === void 0) { options = {}; }\r\n    switch (type) {\r\n        case 'svg':\r\n            return new SVGBodyRenderer(data, parent, slicer, options);\r\n        case 'html':\r\n            return new HTMLBodyRenderer(data, parent, slicer, options);\r\n        case 'canvas':\r\n            return new CanvasBodyRenderer(data, parent, slicer, options);\r\n        default:\r\n            return new SVGBodyRenderer(data, parent, slicer, options);\r\n    }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui/index.ts\n// module id = 26\n// module chunks = 0 1","/**\r\n * a set of simple dialogs for LineUp\r\n *\r\n * Created by Samuel Gratzl on 24.08.2015.\r\n */\r\nimport StringColumn from './model/StringColumn';\r\nimport ScriptColumn from './model/ScriptColumn';\r\nimport NumberColumn from './model/NumberColumn';\r\nimport { offset } from './utils';\r\nimport MappingEditor from './mappingeditor';\r\nimport { select, event as d3event, scale as d3scale, behavior } from 'd3';\r\nexport function dialogForm(title, body) {\r\n    return '<span style=\"font-weight: bold\" class=\"lu-popup-title\">' + title + '</span>' +\r\n        '<form onsubmit=\"return false\">' +\r\n        body + '<button type = \"submit\" class=\"ok fa fa-check\" title=\"ok\"></button>' +\r\n        '<button type = \"reset\" class=\"cancel fa fa-times\" title=\"cancel\"></button>' +\r\n        '<button type = \"button\" class=\"reset fa fa-undo\" title=\"reset\"></button></form>';\r\n}\r\n/**\r\n * creates a simple popup dialog under the given attachment\r\n * @param attachement\r\n * @param title\r\n * @param body\r\n * @returns {Selection<any>}\r\n */\r\nexport function makePopup(attachement, title, body) {\r\n    var pos = offset(attachement.node());\r\n    var $popup = select('body').append('div')\r\n        .attr({\r\n        'class': 'lu-popup2'\r\n    }).style({\r\n        left: pos.left + 'px',\r\n        top: pos.top + 'px'\r\n    }).html(dialogForm(title, body));\r\n    function movePopup() {\r\n        //.style(\"left\", (this.parentElement.offsetLeft + (<any>event).dx) + 'px')\r\n        //.style(\"top\", (this.parentElement.offsetTop + event.dy) + 'px');\r\n        //const mouse = d3.mouse(this.parentElement);\r\n        $popup.style({\r\n            left: (this.parentElement.offsetLeft + d3event.dx) + 'px',\r\n            top: (this.parentElement.offsetTop + d3event.dy) + 'px'\r\n        });\r\n    }\r\n    $popup.select('span.lu-popup-title').call(behavior.drag().on('drag', movePopup));\r\n    $popup.on('keydown', function () {\r\n        if (d3event.which === 27) {\r\n            $popup.remove();\r\n        }\r\n    });\r\n    var auto = $popup.select('input[autofocus]').node();\r\n    if (auto) {\r\n        auto.focus();\r\n    }\r\n    return $popup;\r\n}\r\n/**\r\n * opens a rename dialog for the given column\r\n * @param column the column to rename\r\n * @param $header the visual header element of this column\r\n */\r\nexport function openRenameDialog(column, $header) {\r\n    var popup = makePopup($header, 'Rename Column', \"\\n    <input type=\\\"text\\\" size=\\\"15\\\" value=\\\"\" + column.label + \"\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\"><br>\\n    <input type=\\\"color\\\" size=\\\"15\\\" value=\\\"\" + column.color + \"\\\" required=\\\"required\\\"><br>\\n    <textarea rows=\\\"5\\\">\" + column.description + \"</textarea><br>\");\r\n    popup.select('.ok').on('click', function () {\r\n        var newValue = popup.select('input[type=\"text\"]').property('value');\r\n        var newColor = popup.select('input[type=\"color\"]').property('value');\r\n        var newDescription = popup.select('textarea').property('value');\r\n        column.setMetaData({ label: newValue, color: newColor, description: newDescription });\r\n        popup.remove();\r\n    });\r\n    popup.select('.cancel').on('click', function () {\r\n        popup.remove();\r\n    });\r\n}\r\n/**\r\n * opens a dialog for editing the link of a column\r\n * @param column the column to rename\r\n * @param $header the visual header element of this column\r\n * @param templates list of possible link templates\r\n * @param idPrefix dom id prefix\r\n */\r\nexport function openEditLinkDialog(column, $header, templates, idPrefix) {\r\n    if (templates === void 0) { templates = []; }\r\n    var t = \"<input type=\\\"text\\\" size=\\\"15\\\" value=\\\"\" + column.getLink() + \"\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\" \" + (templates.length > 0 ? 'list=\"ui' + idPrefix + 'lineupPatternList\"' : '') + \"><br>\";\r\n    if (templates.length > 0) {\r\n        t += '<datalist id=\"ui${idPrefix}lineupPatternList\">' + templates.map(function (t) { return \"<option value=\\\"\" + t + \"\\\">\"; }) + '</datalist>';\r\n    }\r\n    var popup = makePopup($header, 'Edit Link ($ as Placeholder)', t);\r\n    popup.select('.ok').on('click', function () {\r\n        var newValue = popup.select('input[type=\"text\"]').property('value');\r\n        column.setLink(newValue);\r\n        popup.remove();\r\n    });\r\n    popup.select('.cancel').on('click', function () {\r\n        popup.remove();\r\n    });\r\n}\r\n/**\r\n * opens a search dialog for the given column\r\n * @param column the column to rename\r\n * @param $header the visual header element of this column\r\n * @param provider the data provider for the actual search\r\n */\r\nexport function openSearchDialog(column, $header, provider) {\r\n    var popup = makePopup($header, 'Search', '<input type=\"text\" size=\"15\" value=\"\" required=\"required\" autofocus=\"autofocus\"><br><label><input type=\"checkbox\">RegExp</label><br>');\r\n    popup.select('input[type=\"text\"]').on('input', function () {\r\n        var search = this.value;\r\n        if (search.length >= 3) {\r\n            var isRegex = popup.select('input[type=\"checkbox\"]').property('checked');\r\n            if (isRegex) {\r\n                search = new RegExp(search);\r\n            }\r\n            provider.searchAndJump(search, column);\r\n        }\r\n    });\r\n    function updateImpl() {\r\n        var search = popup.select('input[type=\"text\"]').property('value');\r\n        var isRegex = popup.select('input[type=\"text\"]').property('checked');\r\n        if (search.length > 0) {\r\n            if (isRegex) {\r\n                search = new RegExp(search);\r\n            }\r\n            provider.searchAndJump(search, column);\r\n        }\r\n        popup.remove();\r\n    }\r\n    popup.select('input[type=\"checkbox\"]').on('change', updateImpl);\r\n    popup.select('.ok').on('click', updateImpl);\r\n    popup.select('.cancel').on('click', function () {\r\n        popup.remove();\r\n    });\r\n}\r\n/**\r\n * opens a dialog for editing the weights of a stack column\r\n * @param column the column to filter\r\n * @param $header the visual header element of this column\r\n */\r\nexport function openEditWeightsDialog(column, $header) {\r\n    var weights = column.getWeights(), children = column.children.map(function (d, i) { return ({ col: d, weight: weights[i] * 100 }); });\r\n    //map weights to pixels\r\n    var scale = d3scale.linear().domain([0, 100]).range([0, 120]);\r\n    var $popup = makePopup($header, 'Edit Weights', '<table></table>');\r\n    //show as a table with inputs and bars\r\n    var $rows = $popup.select('table').selectAll('tr').data(children);\r\n    var $rows_enter = $rows.enter().append('tr');\r\n    $rows_enter.append('td')\r\n        .append('input').attr({\r\n        type: 'number',\r\n        value: function (d) { return d.weight; },\r\n        min: 0,\r\n        max: 100,\r\n        size: 5\r\n    }).on('input', function (d) {\r\n        d.weight = +this.value;\r\n        redraw();\r\n    });\r\n    $rows_enter.append('td').append('div')\r\n        .attr('class', function (d) { return 'bar ' + d.col.cssClass; })\r\n        .style('background-color', function (d) { return d.col.color; });\r\n    $rows_enter.append('td').text(function (d) { return d.col.label; });\r\n    function redraw() {\r\n        $rows.select('.bar').transition().style('width', function (d) { return scale(d.weight) + 'px'; });\r\n    }\r\n    redraw();\r\n    $popup.select('.cancel').on('click', function () {\r\n        column.setWeights(weights);\r\n        $popup.remove();\r\n    });\r\n    $popup.select('.reset').on('click', function () {\r\n        children.forEach(function (d, i) { return d.weight = weights[i] * 100; });\r\n        $rows.select('input').property('value', function (d) { return d.weight; });\r\n        redraw();\r\n    });\r\n    $popup.select('.ok').on('click', function () {\r\n        column.setWeights(children.map(function (d) { return d.weight; }));\r\n        $popup.remove();\r\n    });\r\n}\r\n/**\r\n * flags the header to be filtered\r\n * @param $header\r\n * @param filtered\r\n */\r\nfunction markFiltered($header, filtered) {\r\n    if (filtered === void 0) { filtered = false; }\r\n    $header.classed('filtered', filtered);\r\n}\r\nfunction sortbyName(prop) {\r\n    return function (a, b) {\r\n        var av = a[prop], bv = b[prop];\r\n        if (av.toLowerCase() < bv.toLowerCase()) {\r\n            return -1;\r\n        }\r\n        if (av.toLowerCase() > bv.toLowerCase()) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    };\r\n}\r\n/**\r\n * opens a dialog for filtering a categorical column\r\n * @param column the column to rename\r\n * @param $header the visual header element of this column\r\n */\r\nfunction openCategoricalFilter(column, $header) {\r\n    var bak = column.getFilter() || [];\r\n    var popup = makePopup($header, 'Edit Filter', '<div class=\"selectionTable\"><table><thead><th class=\"selectAll\"></th><th>Category</th></thead><tbody></tbody></table></div>');\r\n    // list all data rows !\r\n    var colors = column.categoryColors, labels = column.categoryLabels;\r\n    var trData = column.categories.map(function (d, i) {\r\n        return { cat: d, label: labels[i], isChecked: bak.length === 0 || bak.indexOf(d) >= 0, color: colors[i] };\r\n    }).sort(sortbyName('label'));\r\n    var $rows = popup.select('tbody').selectAll('tr').data(trData);\r\n    var $rows_enter = $rows.enter().append('tr');\r\n    $rows_enter.append('td').attr('class', 'checkmark');\r\n    $rows_enter.append('td').attr('class', 'datalabel').text(function (d) { return d.label; });\r\n    $rows_enter.on('click', function (d) {\r\n        d.isChecked = !d.isChecked;\r\n        redraw();\r\n    });\r\n    function redraw() {\r\n        $rows.select('.checkmark').html(function (d) { return '<i class=\"fa fa-' + ((d.isChecked) ? 'check-' : '') + 'square-o\"></i>'; });\r\n        $rows.select('.datalabel').style('opacity', function (d) { return d.isChecked ? '1.0' : '.8'; });\r\n    }\r\n    redraw();\r\n    var isCheckedAll = true;\r\n    function redrawSelectAll() {\r\n        popup.select('.selectAll').html(function (d) { return '<i class=\"fa fa-' + ((isCheckedAll) ? 'check-' : '') + 'square-o\"></i>'; });\r\n        popup.select('thead').on('click', function () {\r\n            isCheckedAll = !isCheckedAll;\r\n            trData.forEach(function (row) { return row.isChecked = isCheckedAll; });\r\n            redraw();\r\n            redrawSelectAll();\r\n        });\r\n    }\r\n    redrawSelectAll();\r\n    function updateData(filter) {\r\n        markFiltered($header, filter && filter.length > 0 && filter.length < trData.length);\r\n        column.setFilter(filter);\r\n    }\r\n    popup.select('.cancel').on('click', function () {\r\n        updateData(bak);\r\n        popup.remove();\r\n    });\r\n    popup.select('.reset').on('click', function () {\r\n        trData.forEach(function (d) { return d.isChecked = true; });\r\n        redraw();\r\n        updateData(null);\r\n    });\r\n    popup.select('.ok').on('click', function () {\r\n        var f = trData.filter(function (d) { return d.isChecked; }).map(function (d) { return d.cat; });\r\n        if (f.length === trData.length) {\r\n            f = [];\r\n        }\r\n        updateData(f);\r\n        popup.remove();\r\n    });\r\n}\r\n/**\r\n * opens a dialog for filtering a string column\r\n * @param column the column to filter\r\n * @param $header the visual header element of this column\r\n */\r\nfunction openStringFilter(column, $header) {\r\n    var bak = column.getFilter() || '', bakMissing = bak === StringColumn.FILTER_MISSING;\r\n    if (bakMissing) {\r\n        bak = '';\r\n    }\r\n    var $popup = makePopup($header, 'Filter', \"<input type=\\\"text\\\" placeholder=\\\"containing...\\\" autofocus=\\\"true\\\" size=\\\"15\\\" value=\\\"\" + ((bak instanceof RegExp) ? bak.source : bak) + \"\\\" autofocus=\\\"autofocus\\\">\\n    <br><label><input type=\\\"checkbox\\\" \" + ((bak instanceof RegExp) ? 'checked=\"checked\"' : '') + \">RegExp</label><br><label><input class=\\\"lu_filter_missing\\\" type=\\\"checkbox\\\" \" + (bakMissing ? 'checked=\"checked\"' : '') + \">Filter Missing</label>\\n    <br>\");\r\n    function updateData(filter) {\r\n        markFiltered($header, (filter && filter !== ''));\r\n        column.setFilter(filter);\r\n    }\r\n    function updateImpl(force) {\r\n        //get value\r\n        var search = $popup.select('input[type=\"text\"]').property('value');\r\n        var filterMissing = $popup.select('input[type=\"checkbox\"].lu_filter_missing').property('checked');\r\n        if (filterMissing && search === '') {\r\n            search = StringColumn.FILTER_MISSING;\r\n        }\r\n        if (search === '') {\r\n            updateData(search);\r\n            return;\r\n        }\r\n        if (search.length >= 3 || force) {\r\n            var isRegex = $popup.select('input[type=\"checkbox\"]:first-of-type').property('checked');\r\n            if (isRegex && search !== StringColumn.FILTER_MISSING) {\r\n                search = new RegExp(search);\r\n            }\r\n            updateData(search);\r\n        }\r\n    }\r\n    $popup.selectAll('input[type=\"checkbox\"]').on('change', updateImpl);\r\n    $popup.select('input[type=\"text\"]').on('input', updateImpl);\r\n    $popup.select('.cancel').on('click', function () {\r\n        $popup.select('input[type=\"text\"]').property('value', bak || '');\r\n        $popup.select('input[type=\"checkbox\"]:first-of-type').property('checked', bak instanceof RegExp ? 'checked' : null);\r\n        $popup.select('input[type=\"checkbox\"].lu_filter_missing').property('checked', bakMissing ? 'checked' : null);\r\n        updateData(bak);\r\n        $popup.remove();\r\n    });\r\n    $popup.select('.reset').on('click', function () {\r\n        $popup.select('input[type=\"text\"]').property('value', '');\r\n        $popup.selectAll('input[type=\"checkbox\"]').property('checked', null);\r\n        updateData(null);\r\n    });\r\n    $popup.select('.ok').on('click', function () {\r\n        updateImpl(true);\r\n        $popup.remove();\r\n    });\r\n}\r\n/**\r\n * opens a dialog for filtering a boolean column\r\n * @param column the column to filter\r\n * @param $header the visual header element of this column\r\n */\r\nfunction openBooleanFilter(column, $header) {\r\n    var bak = column.getFilter();\r\n    var $popup = makePopup($header, 'Filter', \"<label><input type=\\\"radio\\\" name=\\\"boolean_check\\\" value=\\\"null\\\" \" + (bak === null ? 'checked=\"checked\"' : '') + \">No Filter</label><br>\\n     <label><input type=\\\"radio\\\" name=\\\"boolean_check\\\" value=\\\"true\\\" \" + (bak === true ? 'checked=\"checked\"' : '') + \">True</label><br>\\n     <label><input type=\\\"radio\\\" name=\\\"boolean_check\\\" value=\\\"false\\\" \" + (bak === false ? 'checked=\"checked\"' : '') + \">False</label>\\n    <br>\");\r\n    function updateData(filter) {\r\n        markFiltered($header, (filter !== null));\r\n        column.setFilter(filter);\r\n    }\r\n    function updateImpl() {\r\n        //get value\r\n        var isTrue = $popup.select('input[type=\"radio\"][value=\"true\"]').property('checked');\r\n        var isFalse = $popup.select('input[type=\"radio\"][value=\"false\"]').property('checked');\r\n        updateData(isTrue ? true : (isFalse ? false : null));\r\n    }\r\n    $popup.selectAll('input[type=\"radio\"]').on('change', updateImpl);\r\n    $popup.select('.cancel').on('click', function () {\r\n        updateData(bak);\r\n        $popup.remove();\r\n    });\r\n    $popup.select('.reset').on('click', function () {\r\n        var v = bak === null ? 'null' : String(bak);\r\n        $popup.selectAll('input[type=\"radio\"]').property('checked', function () {\r\n            return this.value === v;\r\n        });\r\n        updateData(null);\r\n    });\r\n    $popup.select('.ok').on('click', function () {\r\n        updateImpl();\r\n        $popup.remove();\r\n    });\r\n}\r\n/**\r\n * opens a dialog for editing the script code\r\n * @param column the column to edit\r\n * @param $header the visual header element of this column\r\n */\r\nexport function openEditScriptDialog(column, $header) {\r\n    var bak = column.getScript();\r\n    var $popup = makePopup($header, 'Edit Script', \"Parameters: <code>values: number[], children: Column[]</code><br>\\n      <textarea autofocus=\\\"true\\\" rows=\\\"5\\\" autofocus=\\\"autofocus\\\" style=\\\"width: 95%;\\\">\" + column.getScript() + \"</textarea><br>\");\r\n    function updateData(script) {\r\n        column.setScript(script);\r\n    }\r\n    function updateImpl() {\r\n        //get value\r\n        var script = $popup.select('textarea').property('value');\r\n        updateData(script);\r\n    }\r\n    $popup.select('.cancel').on('click', function () {\r\n        $popup.select('textarea').property('value', bak);\r\n        updateData(bak);\r\n        $popup.remove();\r\n    });\r\n    $popup.select('.reset').on('click', function () {\r\n        $popup.select('textarea').property('value', ScriptColumn.DEFAULT_SCRIPT);\r\n        updateData(ScriptColumn.DEFAULT_SCRIPT);\r\n    });\r\n    $popup.select('.ok').on('click', function () {\r\n        updateImpl();\r\n        $popup.remove();\r\n    });\r\n}\r\n/**\r\n * opens the mapping editor for a given NumberColumn\r\n * @param column the column to rename\r\n * @param $header the visual header element of this column\r\n * @param data the data provider for illustrating the mapping by example\r\n * @param idPrefix dom id prefix\r\n */\r\nfunction openMappingEditor(column, $header, data, idPrefix) {\r\n    var pos = offset($header.node()), original = column.getOriginalMapping();\r\n    var bakfilter = column.getFilter(), bak = column.getMapping(), act = bak.clone(), actfilter = bakfilter;\r\n    var popup = select('body').append('div')\r\n        .attr({\r\n        'class': 'lu-popup'\r\n    }).style({\r\n        left: pos.left + 'px',\r\n        top: pos.top + 'px'\r\n    })\r\n        .html(dialogForm('Change Mapping', '<div class=\"mappingArea\"></div>'));\r\n    function applyMapping(newscale, filter) {\r\n        act = newscale;\r\n        actfilter = filter;\r\n        markFiltered($header, !newscale.eq(original) || (bakfilter.min !== filter.min || bakfilter.max !== filter.min || bakfilter.filterMissing !== filter.filterMissing));\r\n        column.setMapping(newscale);\r\n        column.setFilter(filter);\r\n    }\r\n    var editorOptions = {\r\n        idPrefix: idPrefix,\r\n        callback: applyMapping,\r\n        triggerCallback: 'dragend'\r\n    };\r\n    var data_sample = data.mappingSample(column);\r\n    var editor = new MappingEditor(popup.select('.mappingArea').node(), act, original, actfilter, data_sample, editorOptions);\r\n    popup.select('.ok').on('click', function () {\r\n        applyMapping(editor.scale, editor.filter);\r\n        popup.remove();\r\n    });\r\n    popup.select('.cancel').on('click', function () {\r\n        column.setMapping(bak);\r\n        markFiltered($header, !bak.eq(original));\r\n        popup.remove();\r\n    });\r\n    popup.select('.reset').on('click', function () {\r\n        bak = original;\r\n        act = bak.clone();\r\n        bakfilter = NumberColumn.noFilter();\r\n        actfilter = bakfilter;\r\n        applyMapping(act, actfilter);\r\n        popup.selectAll('.mappingArea *').remove();\r\n        editor = new MappingEditor(popup.select('.mappingArea').node(), act, original, actfilter, data_sample, editorOptions);\r\n    });\r\n}\r\n/**\r\n * opens the mapping editor for a given CategoricalNumberColumn, i.e. to map categories to numbers\r\n * @param column the column to rename\r\n * @param $header the visual header element of this column\r\n */\r\nfunction openCategoricalMappingEditor(column, $header) {\r\n    var bak = column.getFilter() || [];\r\n    var scale = d3scale.linear().domain([0, 100]).range([0, 120]);\r\n    var $popup = makePopup($header, 'Edit Categorical Mapping', '<div class=\"selectionTable\"><table><thead><th class=\"selectAll\"></th><th colspan=\"2\">Scale</th><th>Category</th></thead><tbody></tbody></table></div>');\r\n    var range = column.getScale().range, colors = column.categoryColors, labels = column.categoryLabels;\r\n    var trData = column.categories.map(function (d, i) {\r\n        return { cat: d, label: labels[i], isChecked: bak.length === 0 || bak.indexOf(d) >= 0, range: range[i] * 100, color: colors[i] };\r\n    }).sort(sortbyName('label'));\r\n    var $rows = $popup.select('tbody').selectAll('tr').data(trData);\r\n    var $rows_enter = $rows.enter().append('tr');\r\n    $rows_enter.append('td').attr('class', 'checkmark').on('click', function (d) {\r\n        d.isChecked = !d.isChecked;\r\n        redraw();\r\n    });\r\n    $rows_enter.append('td')\r\n        .append('input').attr({\r\n        type: 'number',\r\n        value: function (d) { return d.range; },\r\n        min: 0,\r\n        max: 100,\r\n        size: 5\r\n    }).on('input', function (d) {\r\n        d.range = +this.value;\r\n        redraw();\r\n    });\r\n    $rows_enter.append('td').append('div').attr('class', 'bar').style('background-color', function (d) { return d.color; });\r\n    $rows_enter.append('td').attr('class', 'datalabel').text(function (d) { return d.label; });\r\n    function redraw() {\r\n        $rows.select('.checkmark').html(function (d) { return '<i class=\"fa fa-' + ((d.isChecked) ? 'check-' : '') + 'square-o\"></i>'; });\r\n        $rows.select('.bar').transition().style('width', function (d) { return scale(d.range) + 'px'; });\r\n        $rows.select('.datalabel').style('opacity', function (d) { return d.isChecked ? '1.0' : '.8'; });\r\n    }\r\n    redraw();\r\n    var isCheckedAll = true;\r\n    function redrawSelectAll() {\r\n        $popup.select('.selectAll').html(function (d) { return '<i class=\"fa fa-' + ((isCheckedAll) ? 'check-' : '') + 'square-o\"></i>'; });\r\n        $popup.select('thead').on('click', function () {\r\n            isCheckedAll = !isCheckedAll;\r\n            trData.forEach(function (row) { return row.isChecked = isCheckedAll; });\r\n            redraw();\r\n            redrawSelectAll();\r\n        });\r\n    }\r\n    redrawSelectAll();\r\n    function updateData(filter) {\r\n        markFiltered($header, filter && filter.length > 0 && filter.length < trData.length);\r\n        column.setFilter(filter);\r\n    }\r\n    $popup.select('.cancel').on('click', function () {\r\n        updateData(bak);\r\n        column.setMapping(range);\r\n        $popup.remove();\r\n    });\r\n    $popup.select('.reset').on('click', function () {\r\n        trData.forEach(function (d) {\r\n            d.isChecked = true;\r\n            d.range = 50;\r\n        });\r\n        redraw();\r\n        updateData(null);\r\n        column.setMapping(trData.map(function () { return 1; }));\r\n    });\r\n    $popup.select('.ok').on('click', function () {\r\n        var f = trData.filter(function (d) { return d.isChecked; }).map(function (d) { return d.cat; });\r\n        if (f.length === trData.length) {\r\n            f = [];\r\n        }\r\n        updateData(f);\r\n        column.setMapping(trData.map(function (d) { return d.range / 100; }));\r\n        $popup.remove();\r\n    });\r\n}\r\n/**\r\n * returns all known filter dialogs mappings by type\r\n * @return\r\n */\r\nexport function filterDialogs() {\r\n    return {\r\n        string: openStringFilter,\r\n        categorical: openCategoricalFilter,\r\n        number: openMappingEditor,\r\n        ordinal: openCategoricalMappingEditor,\r\n        boolean: openBooleanFilter\r\n    };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui_dialogs.ts\n// module id = 27\n// module chunks = 0 1","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/style.scss\n// module id = 28\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport { createRankDesc } from '../model';\r\nimport Ranking from '../model/Ranking';\r\nimport ADataProvider from './ADataProvider';\r\nfunction isComplexAccessor(column) {\r\n    // something like a.b or a[4]\r\n    return typeof column === 'string' && column.indexOf('.') >= 0;\r\n}\r\nfunction resolveComplex(column, row) {\r\n    var resolve = function (obj, col) {\r\n        if (obj === undefined) {\r\n            return obj; // propagate invalid values\r\n        }\r\n        if (/\\d+/.test(col)) {\r\n            return obj[+col];\r\n        }\r\n        return obj[col];\r\n    };\r\n    return column.split('.').reduce(resolve, row);\r\n}\r\nfunction rowGetter(row, index, id, desc) {\r\n    var column = desc.column;\r\n    if (isComplexAccessor(column)) {\r\n        return resolveComplex(column, row);\r\n    }\r\n    return row[column];\r\n}\r\n/**\r\n * common base implementation of a DataProvider with a fixed list of column descriptions\r\n */\r\nvar ACommonDataProvider = (function (_super) {\r\n    __extends(ACommonDataProvider, _super);\r\n    function ACommonDataProvider(columns, options) {\r\n        if (columns === void 0) { columns = []; }\r\n        if (options === void 0) { options = {}; }\r\n        var _this = _super.call(this, options) || this;\r\n        _this.columns = columns;\r\n        _this.rankingIndex = 0;\r\n        /**\r\n         * the local ranking orders\r\n         */\r\n        _this.ranks = new Map();\r\n        //generate the accessor\r\n        columns.forEach(function (d) {\r\n            d.accessor = d.accessor || rowGetter;\r\n            d.label = d.label || d.column;\r\n        });\r\n        return _this;\r\n    }\r\n    ACommonDataProvider.prototype.rankAccessor = function (row, index, id, desc, ranking) {\r\n        return (this.ranks[ranking.id].indexOf(index)) + 1;\r\n    };\r\n    ACommonDataProvider.prototype.cloneRanking = function (existing) {\r\n        var _this = this;\r\n        var id = this.nextRankingId();\r\n        var new_ = new Ranking(id);\r\n        if (existing) {\r\n            //copy the ranking\r\n            this.ranks[id] = this.ranks[existing.id];\r\n            //TODO better cloning\r\n            existing.children.forEach(function (child) {\r\n                _this.push(new_, child.desc);\r\n            });\r\n        }\r\n        else {\r\n            new_.push(this.create(createRankDesc()));\r\n        }\r\n        return new_;\r\n    };\r\n    ACommonDataProvider.prototype.cleanUpRanking = function (ranking) {\r\n        //delete all stored information\r\n        delete this.ranks[ranking.id];\r\n    };\r\n    ACommonDataProvider.prototype.sort = function (ranking) {\r\n        var _this = this;\r\n        //use the server side to sort\r\n        return this.sortImpl(ranking).then(function (argsort) {\r\n            //store the result\r\n            _this.ranks[ranking.id] = argsort;\r\n            return argsort;\r\n        });\r\n    };\r\n    /**\r\n     * adds another column description to this data provider\r\n     * @param column\r\n     */\r\n    ACommonDataProvider.prototype.pushDesc = function (column) {\r\n        var d = column;\r\n        d.accessor = d.accessor || rowGetter;\r\n        d.label = column.label || d.column;\r\n        this.columns.push(column);\r\n        this.fire(ADataProvider.EVENT_ADD_DESC, d);\r\n    };\r\n    ACommonDataProvider.prototype.getColumns = function () {\r\n        return this.columns.slice();\r\n    };\r\n    ACommonDataProvider.prototype.findDesc = function (ref) {\r\n        return this.columns.filter(function (c) { return c.column === ref; })[0];\r\n    };\r\n    /**\r\n     * identify by the tuple type@columnname\r\n     * @param desc\r\n     * @returns {string}\r\n     */\r\n    ACommonDataProvider.prototype.toDescRef = function (desc) {\r\n        return desc.column ? desc.type + '@' + desc.column : desc;\r\n    };\r\n    ACommonDataProvider.prototype.fromDescRef = function (descRef) {\r\n        if (typeof (descRef) === 'string') {\r\n            return this.columns.filter(function (d) { return d.type + '@' + d.column === descRef; })[0];\r\n        }\r\n        return descRef;\r\n    };\r\n    ACommonDataProvider.prototype.restore = function (dump) {\r\n        _super.prototype.restore.call(this, dump);\r\n        this.rankingIndex = 1 + Math.max.apply(Math, this.getRankings().map(function (r) { return +r.id.substring(4); }));\r\n    };\r\n    ACommonDataProvider.prototype.nextRankingId = function () {\r\n        return 'rank' + (this.rankingIndex++);\r\n    };\r\n    return ACommonDataProvider;\r\n}(ADataProvider));\r\nexport default ACommonDataProvider;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/provider/ACommonDataProvider.ts\n// module id = 29\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport Column from '../model/Column';\r\nimport { merge } from '../utils';\r\nimport * as d3 from 'd3';\r\nimport ACommonDataProvider from './ACommonDataProvider';\r\n/**\r\n * computes the simple statistics of an array using d3 histogram\r\n * @param arr the data array\r\n * @param indices array data indices\r\n * @param acc accessor function\r\n * @param range the total value range\r\n * @returns {{min: number, max: number, count: number, hist: histogram.Bin<number>[]}}\r\n */\r\nfunction computeStats(arr, indices, acc, range) {\r\n    if (arr.length === 0) {\r\n        return {\r\n            min: NaN,\r\n            max: NaN,\r\n            mean: NaN,\r\n            count: 0,\r\n            maxBin: 0,\r\n            hist: []\r\n        };\r\n    }\r\n    var indexAccessor = function (a, i) { return acc(a, indices[i]); };\r\n    var hist = d3.layout.histogram().value(indexAccessor);\r\n    if (range) {\r\n        hist.range(function () { return range; });\r\n    }\r\n    var ex = d3.extent(arr, indexAccessor);\r\n    var hist_data = hist(arr);\r\n    return {\r\n        min: ex[0],\r\n        max: ex[1],\r\n        mean: d3.mean(arr, indexAccessor),\r\n        count: arr.length,\r\n        maxBin: d3.max(hist_data, function (d) { return d.y; }),\r\n        hist: hist_data\r\n    };\r\n}\r\n/**\r\n * computes a categorical histogram\r\n * @param arr the data array\r\n * @param indices the data array data indices\r\n * @param acc the accessor\r\n * @param categories the list of known categories\r\n * @returns {{hist: {cat: string, y: number}[]}}\r\n */\r\nfunction computeHist(arr, indices, acc, categories) {\r\n    var m = new Map();\r\n    categories.forEach(function (cat) { return m.set(cat, 0); });\r\n    arr.forEach(function (a, i) {\r\n        var vs = acc(a, indices[i]);\r\n        if (vs == null) {\r\n            return;\r\n        }\r\n        vs.forEach(function (v) {\r\n            m.set(v, (m.get(v) || 0) + 1);\r\n        });\r\n    });\r\n    var entries = [];\r\n    m.forEach(function (v, k) { return entries.push({ cat: k, y: v }); });\r\n    return {\r\n        maxBin: Math.max.apply(Math, entries.map(function (d) { return d.y; })),\r\n        hist: entries\r\n    };\r\n}\r\n/**\r\n * a data provider based on an local array\r\n */\r\nvar LocalDataProvider = (function (_super) {\r\n    __extends(LocalDataProvider, _super);\r\n    function LocalDataProvider(data, columns, options) {\r\n        if (columns === void 0) { columns = []; }\r\n        if (options === void 0) { options = {}; }\r\n        var _this = _super.call(this, columns, options) || this;\r\n        _this.data = data;\r\n        _this.options = {\r\n            /**\r\n             * whether the filter should be applied to all rankings regardless where they are\r\n             */\r\n            filterGlobally: false\r\n        };\r\n        merge(_this.options, options);\r\n        var that = _this;\r\n        _this.reorderAll = function () {\r\n            //fire for all other rankings a dirty order event, too\r\n            var ranking = this.source;\r\n            that.getRankings().forEach(function (r) {\r\n                if (r !== ranking) {\r\n                    r.dirtyOrder();\r\n                }\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    /**\r\n     * replaces the dataset rows with a new one\r\n     * @param data\r\n     */\r\n    LocalDataProvider.prototype.setData = function (data) {\r\n        this.data = data;\r\n        this.reorderAll();\r\n    };\r\n    LocalDataProvider.prototype.clearData = function () {\r\n        this.setData([]);\r\n    };\r\n    /**\r\n     * append rows to the dataset\r\n     * @param data\r\n     */\r\n    LocalDataProvider.prototype.appendData = function (data) {\r\n        this.data.push.apply(this.data, data);\r\n        this.reorderAll();\r\n    };\r\n    LocalDataProvider.prototype.cloneRanking = function (existing) {\r\n        var new_ = _super.prototype.cloneRanking.call(this, existing);\r\n        if (this.options.filterGlobally) {\r\n            new_.on(Column.EVENT_FILTER_CHANGED + '.reorderAll', this.reorderAll);\r\n        }\r\n        return new_;\r\n    };\r\n    LocalDataProvider.prototype.cleanUpRanking = function (ranking) {\r\n        if (this.options.filterGlobally) {\r\n            ranking.on(Column.EVENT_FILTER_CHANGED + '.reorderAll', null);\r\n        }\r\n        _super.prototype.cleanUpRanking.call(this, ranking);\r\n    };\r\n    LocalDataProvider.prototype.sortImpl = function (ranking) {\r\n        if (this.data.length === 0) {\r\n            return Promise.resolve([]);\r\n        }\r\n        //wrap in a helper and store the initial index\r\n        var helper = this.data.map(function (r, i) { return ({ row: r, i: i }); });\r\n        //do the optional filtering step\r\n        if (this.options.filterGlobally) {\r\n            var filtered_1 = this.getRankings().filter(function (d) { return d.isFiltered(); });\r\n            if (filtered_1.length > 0) {\r\n                helper = helper.filter(function (d) { return filtered_1.every(function (f) { return f.filter(d.row, d.i); }); });\r\n            }\r\n        }\r\n        else if (ranking.isFiltered()) {\r\n            helper = helper.filter(function (d) { return ranking.filter(d.row, d.i); });\r\n        }\r\n        //sort by the ranking column\r\n        helper.sort(function (a, b) { return ranking.comparator(a.row, b.row, a.i, b.i); });\r\n        //store the ranking index and create an argsort version, i.e. rank 0 -> index i\r\n        return Promise.resolve(helper.map(function (r) { return r.i; }));\r\n    };\r\n    LocalDataProvider.prototype.viewRaw = function (indices) {\r\n        var _this = this;\r\n        //filter invalid indices\r\n        var l = this.data.length;\r\n        return indices.map(function (index) { return _this.data[index]; });\r\n    };\r\n    LocalDataProvider.prototype.view = function (indices) {\r\n        return Promise.resolve(this.viewRaw(indices));\r\n    };\r\n    LocalDataProvider.prototype.fetch = function (orders) {\r\n        var _this = this;\r\n        var l = this.data.length;\r\n        return orders.map(function (order) { return order.map(function (index) { return Promise.resolve({\r\n            v: _this.data[index],\r\n            dataIndex: index\r\n        }); }); });\r\n    };\r\n    /**\r\n     * helper for computing statistics\r\n     * @param indices\r\n     * @returns {{stats: (function(INumberColumn): *), hist: (function(ICategoricalColumn): *)}}\r\n     */\r\n    LocalDataProvider.prototype.stats = function (indices) {\r\n        var _this = this;\r\n        var d = null;\r\n        var getD = function () { return d === null ? (d = _this.viewRaw(indices)) : d; };\r\n        return {\r\n            stats: function (col) { return Promise.resolve(computeStats(getD(), indices, col.getNumber.bind(col), [0, 1])); },\r\n            hist: function (col) { return Promise.resolve(computeHist(getD(), indices, col.getCategories.bind(col), col.categories)); }\r\n        };\r\n    };\r\n    LocalDataProvider.prototype.mappingSample = function (col) {\r\n        var _this = this;\r\n        var MAX_SAMPLE = 500; //at most 500 sample lines\r\n        var l = this.data.length;\r\n        if (l <= MAX_SAMPLE) {\r\n            return Promise.resolve(this.data.map(col.getRawValue.bind(col)));\r\n        }\r\n        //randomly select 500 elements\r\n        var indices = [];\r\n        for (var i = 0; i < MAX_SAMPLE; ++i) {\r\n            var j = Math.floor(Math.random() * (l - 1));\r\n            while (indices.indexOf(j) >= 0) {\r\n                j = Math.floor(Math.random() * (l - 1));\r\n            }\r\n            indices.push(j);\r\n        }\r\n        return Promise.resolve(indices.map(function (i) { return col.getRawValue(_this.data[i], i); }));\r\n    };\r\n    LocalDataProvider.prototype.searchAndJump = function (search, col) {\r\n        var _this = this;\r\n        //case insensitive search\r\n        search = typeof search === 'string' ? search.toLowerCase() : search;\r\n        var f = typeof search === 'string' ? function (v) { return v.toLowerCase().indexOf(search) >= 0; } : search.test.bind(search);\r\n        var indices = d3.range(this.data.length).filter(function (i) { return f(col.getLabel(_this.data[i], i)); });\r\n        this.jumpToNearest(indices);\r\n    };\r\n    return LocalDataProvider;\r\n}(ACommonDataProvider));\r\nexport default LocalDataProvider;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/provider/LocalDataProvider.ts\n// module id = 30\n// module chunks = 0 1","/**\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\nimport { select, scale, behavior, event as d3event, mouse } from 'd3';\r\nimport { merge } from './utils';\r\nimport { ScaleMappingFunction, ScriptMappingFunction } from './model/NumberColumn';\r\nfunction clamp(v, min, max) {\r\n    return Math.max(Math.min(v, max), min);\r\n}\r\nfunction unique(data) {\r\n    var s = new Set();\r\n    data.forEach(function (d) { return s.add(d); });\r\n    var r = [];\r\n    s.forEach(function (d) { return r.push(d); });\r\n    return r;\r\n}\r\nvar MappingEditor = (function () {\r\n    function MappingEditor(parent, scale_, original, old_filter, dataPromise, options) {\r\n        this.parent = parent;\r\n        this.scale_ = scale_;\r\n        this.original = original;\r\n        this.old_filter = old_filter;\r\n        this.dataPromise = dataPromise;\r\n        this.options = {\r\n            idPrefix: '',\r\n            width: 370,\r\n            height: 225,\r\n            padding_hor: 7,\r\n            padding_ver: 7,\r\n            filter_height: 20,\r\n            radius: 5,\r\n            callback: function () { return undefined; },\r\n            callbackThisArg: null,\r\n            triggerCallback: 'change' //change, dragend\r\n        };\r\n        merge(this.options, options);\r\n        //work on a local copy\r\n        this.scale_ = scale_.clone();\r\n        this.build(select(parent));\r\n    }\r\n    Object.defineProperty(MappingEditor.prototype, \"scale\", {\r\n        get: function () {\r\n            return this.scale_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MappingEditor.prototype, \"filter\", {\r\n        get: function () {\r\n            return this.computeFilter();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MappingEditor.prototype.build = function ($root) {\r\n        var options = this.options, that = this;\r\n        $root = $root.append('div').classed('lugui-me', true);\r\n        var width = options.width - options.padding_hor * 2;\r\n        var height = options.height - options.padding_ver * 2 - options.filter_height;\r\n        $root.node().innerHTML = \"<form onsubmit=\\\"return false\\\">\\n      <div style=\\\"text-align: center\\\"><label for=\\\"me\" + options.idPrefix + \"mapping_type\\\">Mapping Type: <select id=\\\"me\" + options.idPrefix + \"mapping_type\\\">\\n        <option value=\\\"linear\\\">Linear</option>\\n        <option value=\\\"linear_invert\\\">Invert</option>\\n        <option value=\\\"linear_abs\\\">Absolute</option>\\n        <option value=\\\"log\\\">Log</option>\\n        <option value=\\\"pow1.1\\\">Pow 1.1</option>\\n        <option value=\\\"pow2\\\">Pow 2</option>\\n        <option value=\\\"pow3\\\">Pow 3</option>\\n        <option value=\\\"sqrt\\\">Sqrt</option>\\n        <option value=\\\"script\\\">Custom Script</option>\\n      </select>\\n      </label></div>\\n      <div class=\\\"mapping_area\\\">\\n        <div>\\n          <span>0</span>\\n          <input type=\\\"text\\\" class=\\\"raw_min\\\" id=\\\"me\" + options.idPrefix + \"raw_min\\\" value=\\\"0\\\"><label for=\\\"me\" + options.idPrefix + \"raw_min\\\">Min</label>\\n        </div>\\n        <svg width=\\\"\" + options.width + \"\\\" height=\\\"\" + options.height + \"\\\">\\n          <line y1=\\\"\" + options.padding_ver + \"\\\" y2=\\\"\" + options.padding_ver + \"\\\" x1=\\\"\" + options.padding_hor + \"\\\" x2=\\\"\" + (width + options.padding_hor) + \"\\\" stroke=\\\"black\\\"></line>\\n          <rect class=\\\"adder\\\" x=\\\"\" + options.padding_hor + \"\\\" width=\\\"\" + width + \"\\\" height=\\\"10\\\"></rect>\\n          <line y1=\\\"\" + (options.height - options.filter_height - 5) + \"\\\" y2=\\\"\" + (options.height - options.filter_height - 5) + \"\\\" x1=\\\"\" + options.padding_hor + \"\\\" x2=\\\"\" + (width + options.padding_hor) + \"\\\" stroke=\\\"black\\\"></line>\\n          <rect class=\\\"adder\\\" x=\\\"\" + options.padding_hor + \"\\\" width=\\\"\" + width + \"\\\" height=\\\"10\\\" y=\\\"\" + (options.height - options.filter_height - 10) + \"\\\"></rect>\\n          <g transform=\\\"translate(\" + options.padding_hor + \",\" + options.padding_ver + \")\\\">\\n            <g class=\\\"samples\\\">\\n      \\n            </g>\\n            <g class=\\\"mappings\\\">\\n      \\n            </g>\\n            <g class=\\\"filter\\\" transform=\\\"translate(0,\" + (options.height - options.filter_height - 10) + \")\\\">\\n               <g class=\\\"left_filter\\\" transform=\\\"translate(0,0)\\\">\\n                  <path d=\\\"M0,0L4,7L-4,7z\\\"></path>\\n                  <rect x=\\\"-4\\\" y=\\\"7\\\" width=\\\"40\\\" height=\\\"13\\\" rx=\\\"2\\\" ry=\\\"2\\\"></rect>\\n                  <text y=\\\"10\\\" x=\\\"4\\\" text-anchor=\\\"start\\\">&gt; 0</text>\\n              </g>\\n              <g class=\\\"right_filter\\\" transform=\\\"translate(\" + width + \",0)\\\">\\n                  <path d=\\\"M0,0L4,7L-4,7z\\\"></path>\\n                  <rect x=\\\"-36\\\" y=\\\"7\\\" width=\\\"40\\\" height=\\\"13\\\" rx=\\\"2\\\" ry=\\\"2\\\"></rect>\\n                  <text y=\\\"10\\\" x=\\\"3\\\" text-anchor=\\\"end\\\">&lt; 1</text>\\n              </g>\\n            </g>\\n          </g>\\n        </svg>\\n        <div>\\n          <span>1</span>\\n          <input type=\\\"text\\\" class=\\\"raw_max\\\" id=\\\"me\" + options.idPrefix + \"raw_max\\\" value=\\\"1\\\"><label for=\\\"me\" + options.idPrefix + \"raw_max\\\">Max</label>\\n        </div>\\n      </div>\\n      <div>\\n         Extras: <label><input type=\\\"checkbox\\\" id=\\\"me\" + options.idPrefix + \"filterMissing\\\" \" + (this.old_filter.filterMissing ? 'checked=\"checked\"' : '') + \">Filter Missing Values</label>\\n      </div>\\n      <div class=\\\"script\\\" style=\\\"/* display: none; */\\\">\\n        <label for=\\\"me\" + options.idPrefix + \"script_code\\\">Custom Script</label><button>Apply</button>\\n        <textarea id=\\\"me\" + options.idPrefix + \"script_code\\\">\\n        </textarea>\\n      </div>\\n    </form>\";\r\n        var raw2pixel = scale.linear().domain([Math.min(this.scale.domain[0], this.original.domain[0]), Math.max(this.scale.domain[this.scale.domain.length - 1], this.original.domain[this.original.domain.length - 1])])\r\n            .range([0, width]);\r\n        var normal2pixel = scale.linear().domain([0, 1])\r\n            .range([0, width]);\r\n        $root.select('input.raw_min')\r\n            .property('value', raw2pixel.domain()[0])\r\n            .on('blur', function () {\r\n            var d = raw2pixel.domain();\r\n            d[0] = parseFloat(this.value);\r\n            raw2pixel.domain(d);\r\n            var old = that.scale_.domain;\r\n            old[0] = d[0];\r\n            that.scale_.domain = old;\r\n            updateRaw();\r\n            triggerUpdate();\r\n        });\r\n        $root.select('input.raw_max')\r\n            .property('value', raw2pixel.domain()[1])\r\n            .on('blur', function () {\r\n            var d = raw2pixel.domain();\r\n            d[1] = parseFloat(this.value);\r\n            raw2pixel.domain(d);\r\n            var old = that.scale_.domain;\r\n            old[old.length - 1] = d[1];\r\n            that.scale_.domain = old;\r\n            updateRaw();\r\n            triggerUpdate();\r\n        });\r\n        $root.select('input[type=\"checkbox\"]').on('change', function () {\r\n            triggerUpdate();\r\n        });\r\n        //lines that show mapping of individual data items\r\n        var datalines = $root.select('g.samples').selectAll('line').data([]);\r\n        this.dataPromise.then(function (data) {\r\n            //to unique values\r\n            data = unique(data);\r\n            datalines = datalines.data(data);\r\n            datalines.enter()\r\n                .append('line')\r\n                .attr({\r\n                x1: function (d) { return normal2pixel(that.scale.apply(d)); },\r\n                y1: 0,\r\n                x2: raw2pixel,\r\n                y2: height\r\n            }).style('visibility', function (d) {\r\n                var domain = that.scale.domain;\r\n                return (d < domain[0] || d > domain[domain.length - 1]) ? 'hidden' : null;\r\n            });\r\n        });\r\n        function updateDataLines() {\r\n            datalines.attr({\r\n                x1: function (d) { return normal2pixel(that.scale.apply(d)); },\r\n                x2: raw2pixel\r\n            }).style('visibility', function (d) {\r\n                var domain = that.scale.domain;\r\n                return (d < domain[0] || d > domain[domain.length - 1]) ? 'hidden' : null;\r\n            });\r\n        }\r\n        function createDrag(move) {\r\n            return behavior.drag()\r\n                .on('dragstart', function () {\r\n                select(this)\r\n                    .classed('dragging', true)\r\n                    .attr('r', options.radius * 1.1);\r\n            })\r\n                .on('drag', move)\r\n                .on('dragend', function () {\r\n                select(this)\r\n                    .classed('dragging', false)\r\n                    .attr('r', options.radius);\r\n                triggerUpdate(true);\r\n            });\r\n        }\r\n        var mapping_lines = [];\r\n        function renderMappingLines() {\r\n            if (!(that.scale instanceof ScaleMappingFunction)) {\r\n                return;\r\n            }\r\n            {\r\n                var sscale = that.scale;\r\n                var domain = sscale.domain;\r\n                var range_1 = sscale.range;\r\n                mapping_lines = domain.map(function (d, i) { return ({ r: d, n: range_1[i] }); });\r\n            }\r\n            function updateScale() {\r\n                //sort by raw value\r\n                mapping_lines.sort(function (a, b) { return a.r - b.r; });\r\n                //update the scale\r\n                var scale = that.scale;\r\n                scale.domain = mapping_lines.map(function (d) { return d.r; });\r\n                scale.range = mapping_lines.map(function (d) { return d.n; });\r\n                //console.log(sscale.domain, sscale.range);\r\n                updateDataLines();\r\n            }\r\n            function removePoint(i) {\r\n                if (mapping_lines.length <= 2) {\r\n                    return; //can't remove have to have at least two\r\n                }\r\n                mapping_lines.splice(i, 1);\r\n                updateScale();\r\n                renderMappingLines();\r\n            }\r\n            function addPoint(x) {\r\n                var px = clamp(x, 0, width);\r\n                mapping_lines.push({\r\n                    n: normal2pixel.invert(px),\r\n                    r: raw2pixel.invert(px)\r\n                });\r\n                updateScale();\r\n                renderMappingLines();\r\n            }\r\n            $root.selectAll('rect.adder').on('click', function () {\r\n                addPoint(mouse($root.select('svg > g').node())[0]);\r\n            });\r\n            var $mapping = $root.select('g.mappings').selectAll('g.mapping').data(mapping_lines);\r\n            var $mapping_enter = $mapping.enter().append('g').classed('mapping', true).on('contextmenu', function (d, i) {\r\n                d3event.preventDefault();\r\n                d3event.stopPropagation();\r\n                removePoint(i);\r\n            });\r\n            $mapping_enter.append('line').attr({\r\n                y1: 0,\r\n                y2: height\r\n            }).call(createDrag(function (d) {\r\n                //drag the line shifts both point in parallel\r\n                var dx = d3event.dx;\r\n                var nx = clamp(normal2pixel(d.n) + dx, 0, width);\r\n                var rx = clamp(raw2pixel(d.r) + dx, 0, width);\r\n                d.n = normal2pixel.invert(nx);\r\n                d.r = raw2pixel.invert(rx);\r\n                select(this).attr('x1', nx).attr('x2', rx);\r\n                select(this.parentElement).select('circle.normalized').attr('cx', nx);\r\n                select(this.parentElement).select('circle.raw').attr('cx', rx);\r\n                updateScale();\r\n            }));\r\n            $mapping_enter.append('circle').classed('normalized', true).attr('r', options.radius).call(createDrag(function (d) {\r\n                //drag normalized\r\n                var px = clamp(d3event.x, 0, width);\r\n                d.n = normal2pixel.invert(px);\r\n                select(this).attr('cx', px);\r\n                select(this.parentElement).select('line').attr('x1', px);\r\n                updateScale();\r\n            }));\r\n            $mapping_enter.append('circle').classed('raw', true).attr('r', options.radius).attr('cy', height).call(createDrag(function (d) {\r\n                //drag raw\r\n                var px = clamp(d3event.x, 0, width);\r\n                d.r = raw2pixel.invert(px);\r\n                select(this).attr('cx', px);\r\n                select(this.parentElement).select('line').attr('x2', px);\r\n                updateScale();\r\n            }));\r\n            $mapping.select('line').attr({\r\n                x1: function (d) { return normal2pixel(d.n); },\r\n                x2: function (d) { return raw2pixel(d.r); }\r\n            });\r\n            $mapping.select('circle.normalized').attr('cx', function (d) { return normal2pixel(d.n); });\r\n            $mapping.select('circle.raw').attr('cx', function (d) { return raw2pixel(d.r); });\r\n            $mapping.exit().remove();\r\n        }\r\n        function renderScript() {\r\n            if (!(that.scale instanceof ScriptMappingFunction)) {\r\n                $root.select('div.script').style('display', 'none');\r\n                return;\r\n            }\r\n            $root.select('div.script').style('display', null);\r\n            var sscale = that.scale;\r\n            var $text = $root.select('textarea').text(sscale.code);\r\n            $root.select('div.script').select('button').on('click', function () {\r\n                sscale.code = $text.property('value');\r\n                updateDataLines();\r\n                triggerUpdate();\r\n            });\r\n        }\r\n        renderMappingLines();\r\n        renderScript();\r\n        function triggerUpdate(isDragEnd) {\r\n            if (isDragEnd === void 0) { isDragEnd = false; }\r\n            if (isDragEnd && (options.triggerCallback !== 'dragend')) {\r\n                return;\r\n            }\r\n            options.callback.call(options.callbackThisArg, that.scale.clone(), that.filter);\r\n        }\r\n        {\r\n            var min_filter_1 = (isFinite(this.old_filter.min) ? raw2pixel(this.old_filter.min) : 0);\r\n            var max_filter_1 = (isFinite(this.old_filter.max) ? raw2pixel(this.old_filter.max) : width);\r\n            var toFilterString_1 = function (d, i) { return isFinite(d) ? ((i === 0 ? '>' : '<') + d.toFixed(1)) : 'any'; };\r\n            $root.selectAll('g.left_filter, g.right_filter')\r\n                .data([this.old_filter.min, this.old_filter.max])\r\n                .attr('transform', function (d, i) { return \"translate(\" + (i === 0 ? min_filter_1 : max_filter_1) + \",0)\"; }).call(createDrag(function (d, i) {\r\n                //drag normalized\r\n                var px = clamp(d3event.x, 0, width);\r\n                var v = raw2pixel.invert(px);\r\n                var filter = (px <= 0 && i === 0 ? -Infinity : (px >= width && i === 1 ? Infinity : v));\r\n                select(this).datum(filter)\r\n                    .attr('transform', \"translate(\" + px + \",0)\")\r\n                    .select('text').text(toFilterString_1(filter, i));\r\n            }))\r\n                .select('text').text(toFilterString_1);\r\n        }\r\n        this.computeFilter = function () {\r\n            return {\r\n                min: parseFloat($root.select('g.left_filter').datum()),\r\n                max: parseFloat($root.select('g.right_filter').datum()),\r\n                filterMissing: $root.select('input[type=\"checkbox\"]').property('checked')\r\n            };\r\n        };\r\n        function updateRaw() {\r\n            var d = raw2pixel.domain();\r\n            $root.select('input.raw_min').property('value', d[0]);\r\n            $root.select('input.raw_max').property('value', d[1]);\r\n            updateDataLines();\r\n            renderMappingLines();\r\n        }\r\n        updateRaw();\r\n        $root.select('select').on('change', function () {\r\n            var v = this.value;\r\n            if (v === 'linear_invert') {\r\n                that.scale_ = new ScaleMappingFunction(raw2pixel.domain(), 'linear', [1, 0]);\r\n            }\r\n            else if (v === 'linear_abs') {\r\n                var d = raw2pixel.domain();\r\n                that.scale_ = new ScaleMappingFunction([d[0], (d[1] - d[0]) / 2, d[1]], 'linear', [1, 0, 1]);\r\n            }\r\n            else if (v === 'script') {\r\n                that.scale_ = new ScriptMappingFunction(raw2pixel.domain());\r\n            }\r\n            else {\r\n                that.scale_ = new ScaleMappingFunction(raw2pixel.domain(), v);\r\n            }\r\n            updateDataLines();\r\n            renderMappingLines();\r\n            renderScript();\r\n            triggerUpdate();\r\n        }).property('selectedIndex', function () {\r\n            var name = 'script';\r\n            if (that.scale_ instanceof ScaleMappingFunction) {\r\n                name = that.scale.scaleType;\r\n            }\r\n            var types = ['linear', 'linear_invert', 'linear_abs', 'log', 'pow1.1', 'pow2', 'pow3', 'sqrt', 'script'];\r\n            return types.indexOf(name);\r\n        });\r\n    };\r\n    return MappingEditor;\r\n}());\r\nexport default MappingEditor;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/mappingeditor.ts\n// module id = 31\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport Column from './Column';\r\nimport StringColumn from './StringColumn';\r\n/**\r\n * a string column in which the values can be edited locally\r\n */\r\nvar AnnotateColumn = (function (_super) {\r\n    __extends(AnnotateColumn, _super);\r\n    function AnnotateColumn(id, desc) {\r\n        var _this = _super.call(this, id, desc) || this;\r\n        _this.annotations = new Map();\r\n        return _this;\r\n    }\r\n    AnnotateColumn.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat([AnnotateColumn.EVENT_VALUE_CHANGED]);\r\n    };\r\n    AnnotateColumn.prototype.getValue = function (row, index) {\r\n        if (this.annotations.has(index)) {\r\n            return this.annotations.get(index);\r\n        }\r\n        return _super.prototype.getValue.call(this, row, index);\r\n    };\r\n    AnnotateColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        r.annotations = {};\r\n        this.annotations.forEach(function (v, k) {\r\n            r.annotations[k] = v;\r\n        });\r\n        return r;\r\n    };\r\n    AnnotateColumn.prototype.restore = function (dump, factory) {\r\n        var _this = this;\r\n        _super.prototype.restore.call(this, dump, factory);\r\n        if (dump.annotations) {\r\n            Object.keys(dump.annotations).forEach(function (k) {\r\n                _this.annotations.set(Number(k), dump.annotations[k]);\r\n            });\r\n        }\r\n    };\r\n    AnnotateColumn.prototype.setValue = function (row, index, value) {\r\n        var old = this.getValue(row, index);\r\n        if (old === value) {\r\n            return true;\r\n        }\r\n        if (value === '' || value == null) {\r\n            this.annotations.delete(index);\r\n        }\r\n        else {\r\n            this.annotations.set(index, value);\r\n        }\r\n        this.fire([AnnotateColumn.EVENT_VALUE_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], index, old, value);\r\n        return true;\r\n    };\r\n    return AnnotateColumn;\r\n}(StringColumn));\r\nexport default AnnotateColumn;\r\nAnnotateColumn.EVENT_VALUE_CHANGED = 'valueChanged';\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/AnnotateColumn.ts\n// module id = 32\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport { ascending } from 'd3';\r\nimport Column from './Column';\r\nimport ValueColumn from './ValueColumn';\r\n/**\r\n * a string column with optional alignment\r\n */\r\nvar BooleanColumn = (function (_super) {\r\n    __extends(BooleanColumn, _super);\r\n    function BooleanColumn(id, desc) {\r\n        var _this = _super.call(this, id, desc) || this;\r\n        _this.currentFilter = null;\r\n        _this.trueMarker = 'X';\r\n        _this.falseMarker = '';\r\n        _this.setWidthImpl(30);\r\n        _this.trueMarker = desc.trueMarker || _this.trueMarker;\r\n        _this.falseMarker = desc.falseMarker || _this.falseMarker;\r\n        return _this;\r\n    }\r\n    BooleanColumn.prototype.getValue = function (row, index) {\r\n        var v = _super.prototype.getValue.call(this, row, index);\r\n        if (typeof (v) === 'undefined' || v == null) {\r\n            return false;\r\n        }\r\n        return v === true || v === 'true' || v === 'yes' || v === 'x';\r\n    };\r\n    BooleanColumn.prototype.getLabel = function (row, index) {\r\n        var v = this.getValue(row, index);\r\n        return v ? this.trueMarker : this.falseMarker;\r\n    };\r\n    BooleanColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        if (this.currentFilter !== null) {\r\n            r.filter = this.currentFilter;\r\n        }\r\n        return r;\r\n    };\r\n    BooleanColumn.prototype.restore = function (dump, factory) {\r\n        _super.prototype.restore.call(this, dump, factory);\r\n        if (typeof dump.filter !== 'undefined') {\r\n            this.currentFilter = dump.filter;\r\n        }\r\n    };\r\n    BooleanColumn.prototype.isFiltered = function () {\r\n        return this.currentFilter !== null;\r\n    };\r\n    BooleanColumn.prototype.filter = function (row, index) {\r\n        if (!this.isFiltered()) {\r\n            return true;\r\n        }\r\n        var r = this.getValue(row, index);\r\n        return r === this.currentFilter;\r\n    };\r\n    BooleanColumn.prototype.getFilter = function () {\r\n        return this.currentFilter;\r\n    };\r\n    BooleanColumn.prototype.setFilter = function (filter) {\r\n        if (this.currentFilter === filter) {\r\n            return;\r\n        }\r\n        this.fire([Column.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.currentFilter, this.currentFilter = filter);\r\n    };\r\n    BooleanColumn.prototype.compare = function (a, b, aIndex, bIndex) {\r\n        return ascending(this.getValue(a, aIndex), this.getValue(b, bIndex));\r\n    };\r\n    return BooleanColumn;\r\n}(ValueColumn));\r\nexport default BooleanColumn;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/BooleanColumn.ts\n// module id = 33\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport { max as d3max, scale, min as d3min } from 'd3';\r\nimport Column from './Column';\r\nimport ValueColumn from './ValueColumn';\r\nimport CategoricalColumn from './CategoricalColumn';\r\nimport NumberColumn from './NumberColumn';\r\n/**\r\n * similar to a categorical column but the categories are mapped to numbers\r\n */\r\nvar CategoricalNumberColumn = (function (_super) {\r\n    __extends(CategoricalNumberColumn, _super);\r\n    function CategoricalNumberColumn(id, desc) {\r\n        var _this = _super.call(this, id, desc) || this;\r\n        _this.colors = scale.category10();\r\n        /**\r\n         * category labels by default the category name itself\r\n         * @type {Array}\r\n         */\r\n        _this.catLabels = new Map();\r\n        _this.scale = scale.ordinal().rangeRoundPoints([0, 1]);\r\n        _this.currentFilter = null;\r\n        /**\r\n         * separator for multi handling\r\n         * @type {string}\r\n         */\r\n        _this.separator = ';';\r\n        _this.combiner = d3max;\r\n        _this.separator = desc.separator || _this.separator;\r\n        CategoricalColumn.prototype.initCategories.call(_this, desc);\r\n        _this.scale.domain(_this.colors.domain());\r\n        if (desc.categories) {\r\n            //lookup value or 0.5 by default\r\n            var values = desc.categories.map(function (d) { return ((typeof d !== 'string' && typeof (d.value) === 'number')) ? d.value : 0.5; });\r\n            _this.scale.range(values);\r\n        }\r\n        return _this;\r\n    }\r\n    CategoricalNumberColumn.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat([CategoricalNumberColumn.EVENT_MAPPING_CHANGED]);\r\n    };\r\n    Object.defineProperty(CategoricalNumberColumn.prototype, \"categories\", {\r\n        get: function () {\r\n            return this.colors.domain().slice();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoricalNumberColumn.prototype, \"categoryColors\", {\r\n        get: function () {\r\n            return this.colors.range().slice();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoricalNumberColumn.prototype, \"categoryLabels\", {\r\n        get: function () {\r\n            var _this = this;\r\n            //no mapping\r\n            if (this.catLabels === null || this.catLabels.size === 0) {\r\n                return this.categories;\r\n            }\r\n            //label or identity mapping\r\n            return this.categories.map(function (c) { return _this.catLabels.has(c) ? _this.catLabels.get(c) : c; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CategoricalNumberColumn.prototype.colorOf = function (cat) {\r\n        return this.colors(cat);\r\n    };\r\n    CategoricalNumberColumn.prototype.getLabel = function (row, index) {\r\n        return CategoricalColumn.prototype.getLabel.call(this, row, index);\r\n    };\r\n    CategoricalNumberColumn.prototype.getFirstLabel = function (row, index) {\r\n        return CategoricalColumn.prototype.getFirstLabel.call(this, row, index);\r\n    };\r\n    CategoricalNumberColumn.prototype.getLabels = function (row, index) {\r\n        return CategoricalColumn.prototype.getLabels.call(this, row, index);\r\n    };\r\n    CategoricalNumberColumn.prototype.getValue = function (row, index) {\r\n        var r = this.getValues(row, index);\r\n        return r.length > 0 ? this.combiner(r) : 0;\r\n    };\r\n    CategoricalNumberColumn.prototype.getValues = function (row, index) {\r\n        var r = CategoricalColumn.prototype.getValues.call(this, row, index);\r\n        return r.map(this.scale);\r\n    };\r\n    CategoricalNumberColumn.prototype.getCategories = function (row, index) {\r\n        return CategoricalColumn.prototype.getValues.call(this, row, index);\r\n    };\r\n    CategoricalNumberColumn.prototype.getNumber = function (row, index) {\r\n        return this.getValue(row, index);\r\n    };\r\n    CategoricalNumberColumn.prototype.getColor = function (row, index) {\r\n        var vs = this.getValues(row, index);\r\n        var cs = this.getColors(row, index);\r\n        if (this.combiner === d3max) {\r\n            //use the max color\r\n            return cs.slice(1).reduce(function (prev, act, i) { return vs[i + 1] > prev.v ? { c: act, v: vs[i + 1] } : prev; }, {\r\n                c: cs[0],\r\n                v: vs[0]\r\n            }).c;\r\n        }\r\n        else if (this.combiner === d3min) {\r\n            //use the max color\r\n            return cs.slice(1).reduce(function (prev, act, i) { return vs[i + 1] < prev.v ? { c: act, v: vs[i + 1] } : prev; }, {\r\n                c: cs[0],\r\n                v: vs[0]\r\n            }).c;\r\n        }\r\n        else {\r\n            //use the first\r\n            return cs[0] || null;\r\n        }\r\n    };\r\n    CategoricalNumberColumn.prototype.getColors = function (row, index) {\r\n        return CategoricalColumn.prototype.getColors.call(this, row, index);\r\n    };\r\n    CategoricalNumberColumn.prototype.dump = function (toDescRef) {\r\n        var r = CategoricalColumn.prototype.dump.call(this, toDescRef);\r\n        r.scale = {\r\n            domain: this.scale.domain(),\r\n            range: this.scale.range(),\r\n            separator: this.separator\r\n        };\r\n        return r;\r\n    };\r\n    CategoricalNumberColumn.prototype.restore = function (dump, factory) {\r\n        CategoricalColumn.prototype.restore.call(this, dump, factory);\r\n        if (dump.scale) {\r\n            this.scale.domain(dump.scale.domain).range(dump.scale.range);\r\n        }\r\n        this.separator = dump.separator || this.separator;\r\n    };\r\n    CategoricalNumberColumn.prototype.getScale = function () {\r\n        return {\r\n            domain: this.scale.domain(),\r\n            range: this.scale.range()\r\n        };\r\n    };\r\n    CategoricalNumberColumn.prototype.getMapping = function () {\r\n        return this.scale.range().slice();\r\n    };\r\n    CategoricalNumberColumn.prototype.setMapping = function (range) {\r\n        var bak = this.getScale();\r\n        this.scale.range(range);\r\n        this.fire([CategoricalNumberColumn.EVENT_MAPPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, this.getScale());\r\n    };\r\n    CategoricalNumberColumn.prototype.isFiltered = function () {\r\n        return this.currentFilter != null;\r\n    };\r\n    CategoricalNumberColumn.prototype.filter = function (row, index) {\r\n        return CategoricalColumn.prototype.filter.call(this, row, index);\r\n    };\r\n    CategoricalNumberColumn.prototype.getFilter = function () {\r\n        return this.currentFilter;\r\n    };\r\n    CategoricalNumberColumn.prototype.setFilter = function (filter) {\r\n        if (this.currentFilter === filter) {\r\n            return;\r\n        }\r\n        this.fire([Column.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.currentFilter, this.currentFilter = filter);\r\n    };\r\n    CategoricalNumberColumn.prototype.compare = function (a, b, aIndex, bIndex) {\r\n        return NumberColumn.prototype.compare.call(this, a, b, aIndex, bIndex);\r\n    };\r\n    CategoricalNumberColumn.prototype.rendererType = function () {\r\n        return NumberColumn.prototype.rendererType.call(this);\r\n    };\r\n    return CategoricalNumberColumn;\r\n}(ValueColumn));\r\nexport default CategoricalNumberColumn;\r\nCategoricalNumberColumn.EVENT_MAPPING_CHANGED = NumberColumn.EVENT_MAPPING_CHANGED;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/CategoricalNumberColumn.ts\n// module id = 34\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport Column from './Column';\r\n/**\r\n * a default column with no values\r\n */\r\nvar DummyColumn = (function (_super) {\r\n    __extends(DummyColumn, _super);\r\n    function DummyColumn(id, desc) {\r\n        return _super.call(this, id, desc) || this;\r\n    }\r\n    DummyColumn.prototype.getLabel = function (row) {\r\n        return '';\r\n    };\r\n    DummyColumn.prototype.getValue = function (row) {\r\n        return '';\r\n    };\r\n    DummyColumn.prototype.compare = function (a, b) {\r\n        return 0; //can't compare\r\n    };\r\n    return DummyColumn;\r\n}(Column));\r\nexport default DummyColumn;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/DummyColumn.ts\n// module id = 35\n// module chunks = 0 1","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport CompositeColumn from './CompositeColumn';\r\nimport Column from './Column';\r\nimport StackColumn from './StackColumn';\r\nvar MultiLevelCompositeColumn = (function (_super) {\r\n    __extends(MultiLevelCompositeColumn, _super);\r\n    function MultiLevelCompositeColumn(id, desc) {\r\n        var _this = _super.call(this, id, desc) || this;\r\n        /**\r\n         * whether this stack column is collapsed i.e. just looks like an ordinary number column\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        _this.collapsed = false;\r\n        var that = _this;\r\n        _this.adaptChange = function (old, new_) {\r\n            that.adaptWidthChange(old, new_);\r\n        };\r\n        return _this;\r\n    }\r\n    MultiLevelCompositeColumn.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat([MultiLevelCompositeColumn.EVENT_COLLAPSE_CHANGED]);\r\n    };\r\n    MultiLevelCompositeColumn.prototype.setCollapsed = function (value) {\r\n        if (this.collapsed === value) {\r\n            return;\r\n        }\r\n        this.fire([StackColumn.EVENT_COLLAPSE_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.collapsed, this.collapsed = value);\r\n    };\r\n    MultiLevelCompositeColumn.prototype.getCollapsed = function () {\r\n        return this.collapsed;\r\n    };\r\n    MultiLevelCompositeColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        r.collapsed = this.collapsed;\r\n        return r;\r\n    };\r\n    MultiLevelCompositeColumn.prototype.restore = function (dump, factory) {\r\n        this.collapsed = dump.collapsed === true;\r\n        _super.prototype.restore.call(this, dump, factory);\r\n    };\r\n    MultiLevelCompositeColumn.prototype.flatten = function (r, offset, levelsToGo, padding) {\r\n        if (levelsToGo === void 0) { levelsToGo = 0; }\r\n        if (padding === void 0) { padding = 0; }\r\n        return StackColumn.prototype.flatten.call(this, r, offset, levelsToGo, padding);\r\n    };\r\n    /**\r\n     * inserts a column at a the given position\r\n     * @param col\r\n     * @param index\r\n     * @returns {any}\r\n     */\r\n    MultiLevelCompositeColumn.prototype.insert = function (col, index) {\r\n        col.on(Column.EVENT_WIDTH_CHANGED + '.stack', this.adaptChange);\r\n        //increase my width\r\n        _super.prototype.setWidth.call(this, this.length === 0 ? col.getWidth() : (this.getWidth() + col.getWidth()));\r\n        return _super.prototype.insert.call(this, col, index);\r\n    };\r\n    /**\r\n     * adapts weights according to an own width change\r\n     * @param old\r\n     * @param new_\r\n     */\r\n    MultiLevelCompositeColumn.prototype.adaptWidthChange = function (old, new_) {\r\n        if (old === new_) {\r\n            return;\r\n        }\r\n        _super.prototype.setWidth.call(this, this.getWidth() + (new_ - old));\r\n    };\r\n    MultiLevelCompositeColumn.prototype.removeImpl = function (child) {\r\n        child.on(Column.EVENT_WIDTH_CHANGED + '.stack', null);\r\n        _super.prototype.setWidth.call(this, this.length === 1 ? 100 : this.getWidth() - child.getWidth());\r\n        return _super.prototype.removeImpl.call(this, child);\r\n    };\r\n    MultiLevelCompositeColumn.prototype.setWidth = function (value) {\r\n        var factor = this.length / this.getWidth();\r\n        this._children.forEach(function (child) {\r\n            //disable since we change it\r\n            child.setWidthImpl(child.getWidth() * factor);\r\n        });\r\n        _super.prototype.setWidth.call(this, value);\r\n    };\r\n    MultiLevelCompositeColumn.prototype.rendererType = function () {\r\n        if (this.getCollapsed()) {\r\n            return MultiLevelCompositeColumn.EVENT_COLLAPSE_CHANGED;\r\n        }\r\n        return _super.prototype.rendererType.call(this);\r\n    };\r\n    return MultiLevelCompositeColumn;\r\n}(CompositeColumn));\r\nexport default MultiLevelCompositeColumn;\r\nMultiLevelCompositeColumn.EVENT_COLLAPSE_CHANGED = StackColumn.EVENT_COLLAPSE_CHANGED;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/model/MultiLevelCompositeColumn.ts\n// module id = 36\n// module chunks = 0 1","/**\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport { event as d3event, mouse as d3mouse } from 'd3';\r\nimport { merge, createTextHints } from '../utils';\r\nimport SelectionColumn from '../model/SelectionColumn';\r\nimport { createCanvas, hideOverlays } from '../renderer';\r\nimport ABodyRenderer from './ABodyRenderer';\r\nvar BodyCanvasRenderer = (function (_super) {\r\n    __extends(BodyCanvasRenderer, _super);\r\n    function BodyCanvasRenderer(data, parent, slicer, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var _this = _super.call(this, data, parent, slicer, 'div', merge({}, BodyCanvasRenderer.CUSTOM_OPTIONS, options)) || this;\r\n        _this.currentFreezeLeft = 0;\r\n        _this.currentHover = -1;\r\n        _this.lastShifts = [];\r\n        _this.$node.append('canvas');\r\n        _this.initInteraction();\r\n        return _this;\r\n    }\r\n    BodyCanvasRenderer.prototype.columnUnderMouse = function (x) {\r\n        for (var _i = 0, _a = this.lastShifts; _i < _a.length; _i++) {\r\n            var shift = _a[_i];\r\n            if (shift.shift <= x && x < (shift.shift + shift.column.getWidth())) {\r\n                return shift.column;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    BodyCanvasRenderer.prototype.rowUnderMouse = function (y) {\r\n        var rowHeight = this.options.rowHeight;\r\n        return Math.floor((y + 1) / rowHeight);\r\n    };\r\n    BodyCanvasRenderer.prototype.itemUnderMouse = function (xy) {\r\n        var row = this.rowUnderMouse(xy[1]);\r\n        if (row < 0) {\r\n            return null;\r\n        }\r\n        var col = this.columnUnderMouse(xy[0]);\r\n        if (col === null) {\r\n            return null;\r\n        }\r\n        var order = col.findMyRanker().getOrder();\r\n        return {\r\n            dataIndex: order[row],\r\n            column: col\r\n        };\r\n    };\r\n    BodyCanvasRenderer.prototype.initInteraction = function () {\r\n        var _this = this;\r\n        this.$node.on('selectstart', function () { return d3event.preventDefault(); });\r\n        this.$node.on('mousemove', function () {\r\n            var mouse = d3mouse(_this.node);\r\n            var pos = _this.itemUnderMouse(mouse);\r\n            _this.mouseOver(pos ? pos.dataIndex : -1);\r\n        });\r\n        this.$node.on('mouseenter', function () {\r\n            _this.mouseOver(-1, false);\r\n        });\r\n        this.$node.on('mouseleave', function () {\r\n            _this.mouseOver(-1, false);\r\n        });\r\n        this.$node.on('click', function () {\r\n            var mouse = d3mouse(_this.node);\r\n            var pos = _this.itemUnderMouse(mouse);\r\n            if (pos) {\r\n                //additional if click on Selection Column\r\n                _this.select(pos.dataIndex, d3event.ctrlKey || pos.column instanceof SelectionColumn);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * get a style\r\n     */\r\n    BodyCanvasRenderer.prototype.style = function (name) {\r\n        var o = this.options;\r\n        return (o.style || {})[name];\r\n    };\r\n    BodyCanvasRenderer.prototype.select = function (dataIndex, additional) {\r\n        if (additional === void 0) { additional = false; }\r\n        var selected = _super.prototype.select.call(this, dataIndex, additional);\r\n        this.update();\r\n        return selected;\r\n    };\r\n    BodyCanvasRenderer.prototype.drawSelection = function () {\r\n        this.update(); //no shortcut so far\r\n    };\r\n    BodyCanvasRenderer.prototype.updateFreeze = function (left) {\r\n        this.currentFreezeLeft = left;\r\n        this.update(); //no shortcut so far\r\n    };\r\n    BodyCanvasRenderer.prototype.mouseOver = function (dataIndex, hover) {\r\n        if (hover === void 0) { hover = true; }\r\n        if (hover === (this.currentHover === dataIndex)) {\r\n            return;\r\n        }\r\n        this.currentHover = dataIndex;\r\n        _super.prototype.mouseOver.call(this, dataIndex, dataIndex >= 0);\r\n        if (!hover || dataIndex < 0) {\r\n            hideOverlays();\r\n        }\r\n        this.update();\r\n    };\r\n    BodyCanvasRenderer.prototype.isHovered = function (dataIndex) {\r\n        return this.currentHover === dataIndex;\r\n    };\r\n    BodyCanvasRenderer.prototype.renderRow = function (ctx, context, ranking, di, i) {\r\n        var dataIndex = di.dataIndex;\r\n        var dx = ranking.shift;\r\n        var dy = context.cellY(i);\r\n        ctx.translate(dx, dy);\r\n        if (i % 2 === 0) {\r\n            ctx.fillStyle = this.style('bg');\r\n            ctx.fillRect(0, 0, ranking.width, context.rowHeight(i));\r\n            ctx.fillStyle = this.style('text');\r\n        }\r\n        var isSelected = this.data.isSelected(dataIndex);\r\n        if (isSelected) {\r\n            ctx.strokeStyle = this.style('selection');\r\n            ctx.strokeRect(0, 0, ranking.width, context.rowHeight(i));\r\n        }\r\n        else if (this.isHovered(dataIndex)) {\r\n            ctx.strokeStyle = this.style('hover');\r\n            ctx.strokeRect(0, 0, ranking.width, context.rowHeight(i));\r\n        }\r\n        //clip the remaining children\r\n        ctx.save();\r\n        //shift if needs to shifted and then maximal that just the shifted columns are visible\r\n        var frozenLeft = this.currentFreezeLeft < ranking.shift ? 0 : Math.min(this.currentFreezeLeft - ranking.shift, ranking.width - ranking.frozenWidth);\r\n        if (ranking.frozenWidth > 0 && frozenLeft > 0) {\r\n            ctx.rect(dx + frozenLeft + ranking.frozenWidth, 0, ranking.width, context.rowHeight(i));\r\n            ctx.clip();\r\n        }\r\n        ranking.columns.forEach(function (child) {\r\n            ctx.save();\r\n            ctx.translate(child.shift, 0);\r\n            child.renderer(ctx, di, i, dx + child.shift, dy);\r\n            ctx.restore();\r\n        });\r\n        ctx.restore();\r\n        ctx.translate(frozenLeft, 0);\r\n        dx += frozenLeft;\r\n        ranking.frozen.forEach(function (child) {\r\n            ctx.save();\r\n            ctx.translate(child.shift, 0);\r\n            child.renderer(ctx, di, i, dx + child.shift, dy);\r\n            ctx.restore();\r\n        });\r\n        ctx.translate(-dx, -dy);\r\n    };\r\n    BodyCanvasRenderer.prototype.renderMeanlines = function (ctx, ranking, height) {\r\n        var _this = this;\r\n        var cols = ranking.columns.filter(function (c) { return _this.showMeanLine(c.column); });\r\n        return Promise.all(cols.map(function (d) {\r\n            var h = _this.histCache.get(d.column.id);\r\n            if (!h) {\r\n                return;\r\n            }\r\n            return h.then(function (stats) {\r\n                var x_pos = d.shift + d.column.getWidth() * stats.mean;\r\n                if (isNaN(x_pos)) {\r\n                    return;\r\n                }\r\n                ctx.strokeStyle = _this.style('meanLine');\r\n                ctx.beginPath();\r\n                ctx.moveTo(x_pos, 0);\r\n                ctx.lineTo(x_pos, height);\r\n                ctx.stroke();\r\n            });\r\n        }));\r\n    };\r\n    BodyCanvasRenderer.prototype.renderRankings = function (ctx, data, context, height) {\r\n        var _this = this;\r\n        var renderRow = this.renderRow.bind(this, ctx, context);\r\n        //asynchronous rendering!!!\r\n        var all = Promise.all.bind(Promise);\r\n        return all(data.map(function (ranking) {\r\n            var toRender = ranking.data;\r\n            return all(toRender.map(function (p, i) {\r\n                // TODO render loading row\r\n                return p.then(function (di) {\r\n                    return renderRow(ranking, di, i);\r\n                });\r\n            })).then(function () { return _this.renderMeanlines(ctx, ranking, height); });\r\n        }));\r\n    };\r\n    BodyCanvasRenderer.prototype.renderSlopeGraphs = function (ctx, data, context) {\r\n        var _this = this;\r\n        var slopes = data.slice(1).map(function (d, i) { return ({ left: data[i].order, left_i: i, right: d.order, right_i: i + 1 }); });\r\n        ctx.save();\r\n        ctx.strokeStyle = this.style('slope');\r\n        slopes.forEach(function (slope, i) {\r\n            ctx.save();\r\n            ctx.translate(data[i + 1].shift - _this.options.slopeWidth, 0);\r\n            var cache = new Map();\r\n            slope.right.forEach(function (data_index, pos) {\r\n                cache.set(data_index, pos);\r\n            });\r\n            var lines = slope.left.map(function (data_index, pos) { return ({\r\n                data_index: data_index,\r\n                lpos: pos,\r\n                rpos: cache.get(data_index)\r\n            }); }).filter(function (d) { return d.rpos != null; });\r\n            lines.forEach(function (line) {\r\n                var isSelected = _this.data.isSelected(line.data_index);\r\n                var isHovered = _this.isHovered(line.data_index);\r\n                if (isSelected) {\r\n                    ctx.strokeStyle = _this.style('selection');\r\n                }\r\n                else if (isHovered) {\r\n                    ctx.strokeStyle = _this.style('hover');\r\n                }\r\n                ctx.beginPath();\r\n                ctx.moveTo(0, context.rowHeight(line.lpos) * 0.5 + context.cellY(line.lpos));\r\n                ctx.lineTo(_this.options.slopeWidth, context.rowHeight(line.rpos) * 0.5 + context.cellY(line.rpos));\r\n                ctx.stroke();\r\n                if (isSelected || isHovered) {\r\n                    ctx.strokeStyle = _this.style('slope');\r\n                }\r\n            });\r\n            ctx.restore();\r\n        });\r\n        ctx.restore();\r\n    };\r\n    BodyCanvasRenderer.prototype.createContextImpl = function (index_shift) {\r\n        var _this = this;\r\n        var base = this.createContext(index_shift, createCanvas);\r\n        base.hovered = this.isHovered.bind(this);\r\n        base.selected = function (dataIndex) { return _this.data.isSelected(dataIndex); };\r\n        return base;\r\n    };\r\n    BodyCanvasRenderer.prototype.computeShifts = function (data) {\r\n        var _this = this;\r\n        var r = [];\r\n        data.forEach(function (d) {\r\n            var base = d.shift;\r\n            r.push.apply(r, d.frozen.map(function (c) { return ({ column: c.column, shift: c.shift + base + _this.currentFreezeLeft }); }));\r\n            r.push.apply(r, d.columns.map(function (c) { return ({ column: c.column, shift: c.shift + base }); }));\r\n        });\r\n        return r;\r\n    };\r\n    BodyCanvasRenderer.prototype.updateImpl = function (data, context, width, height, reason) {\r\n        var $canvas = this.$node.select('canvas');\r\n        var firstLine = Math.max(context.cellY(0) - 20, 0); //where to start\r\n        var lastLine = Math.min(context.cellY(Math.max.apply(Math, data.map(function (d) { return d.order.length; }))) + 20, height);\r\n        this.$node.style({\r\n            width: Math.max(0, width) + 'px',\r\n            height: height + 'px'\r\n        });\r\n        $canvas.attr({\r\n            width: Math.max(0, width),\r\n            height: lastLine - firstLine\r\n        }).style('margin-top', firstLine + 'px');\r\n        this.lastShifts = this.computeShifts(data);\r\n        var ctx = $canvas.node().getContext('2d');\r\n        ctx.save();\r\n        ctx.font = this.style('font');\r\n        ctx.textBaseline = 'top';\r\n        ctx.fillStyle = this.style('text');\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        context.textHints = createTextHints(ctx, this.style('font'));\r\n        ctx.translate(0, -firstLine);\r\n        this.renderSlopeGraphs(ctx, data, context);\r\n        return this.renderRankings(ctx, data, context, height).then(function () {\r\n            ctx.restore();\r\n        });\r\n    };\r\n    return BodyCanvasRenderer;\r\n}(ABodyRenderer));\r\nexport default BodyCanvasRenderer;\r\nBodyCanvasRenderer.CUSTOM_OPTIONS = {\r\n    style: {\r\n        text: 'black',\r\n        font: '10pt \"Helvetica Neue\", Helvetica, Arial, sans-serif',\r\n        slope: 'darkgray',\r\n        link: 'blue',\r\n        selection: '#ffa500',\r\n        hover: '#e5e5e5',\r\n        bg: '#f7f7f7',\r\n        meanLine: 'darkgray'\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui/CanvasBodyRenderer.ts\n// module id = 37\n// module chunks = 0 1","/**\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport { createHTML } from '../renderer';\r\nimport ADOMBodyRenderer from './ADOMBodyRenderer';\r\nvar domHTMLMappings = {\r\n    root: 'div',\r\n    g: 'div',\r\n    setSize: function (n, width, height) {\r\n        n.style.width = width + 'px';\r\n        n.style.height = height + 'px';\r\n    },\r\n    bg: 'div',\r\n    updateBG: function (sel, callback) {\r\n        sel.style({\r\n            height: function (d, i, j) { return callback(d, i, j)[1] + 'px'; },\r\n            width: function (d, i, j) { return callback(d, i, j)[0] + 'px'; }\r\n        });\r\n    },\r\n    meanLine: 'div',\r\n    updateMeanLine: function ($mean, x, height) {\r\n        $mean.style('left', x + 'px').style('height', height + 'px');\r\n    },\r\n    slopes: 'svg',\r\n    updateSlopes: function ($slopes, width, height, callback) {\r\n        $slopes.attr('width', width).attr('height', height).style('left', function (d, i) { return callback(d, i) + 'px'; });\r\n    },\r\n    creator: createHTML,\r\n    translate: function (n, x, y) { return n.style.transform = \"translate(\" + x + \"px,\" + y + \"px)\"; },\r\n    transform: function (sel, callback) {\r\n        sel.style('transform', function (d, i) {\r\n            var r = callback(d, i);\r\n            return \"translate(\" + r[0] + \"px,\" + r[1] + \"px)\";\r\n        });\r\n    }\r\n};\r\nvar HTMLBodyRenderer = (function (_super) {\r\n    __extends(HTMLBodyRenderer, _super);\r\n    function HTMLBodyRenderer(data, parent, slicer, options) {\r\n        if (options === void 0) { options = {}; }\r\n        return _super.call(this, data, parent, slicer, domHTMLMappings, options) || this;\r\n    }\r\n    HTMLBodyRenderer.prototype.updateClipPaths = function (data, context, height) {\r\n        // nothing to do\r\n    };\r\n    return HTMLBodyRenderer;\r\n}(ADOMBodyRenderer));\r\nexport default HTMLBodyRenderer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui/HTMLBodyRenderer.ts\n// module id = 38\n// module chunks = 0 1","/**\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\nimport { round, select, event as d3event } from 'd3';\r\nimport { merge } from '../utils';\r\nimport { isNumberColumn, Column } from '../model';\r\nimport DataProvider from '../provider/ADataProvider';\r\nimport { toFullTooltip } from './HeaderRenderer';\r\nvar PoolEntry = (function () {\r\n    function PoolEntry(desc) {\r\n        this.desc = desc;\r\n        this.used = 0;\r\n    }\r\n    return PoolEntry;\r\n}());\r\nvar PoolRenderer = (function () {\r\n    function PoolRenderer(data, parent, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.data = data;\r\n        this.options = {\r\n            layout: 'vertical',\r\n            elemWidth: 100,\r\n            elemHeight: 40,\r\n            width: 100,\r\n            height: 500,\r\n            additionalDesc: [],\r\n            hideUsed: true,\r\n            addAtEndOnClick: false\r\n        };\r\n        merge(this.options, options);\r\n        this.$node = select(parent).append('div').classed('lu-pool', true);\r\n        this.changeDataStorage(data);\r\n    }\r\n    PoolRenderer.prototype.changeDataStorage = function (data) {\r\n        var _this = this;\r\n        if (this.data) {\r\n            this.data.on([DataProvider.EVENT_ADD_COLUMN + '.pool', DataProvider.EVENT_REMOVE_COLUMN + '.pool',\r\n                DataProvider.EVENT_ADD_RANKING + '.pool', DataProvider.EVENT_REMOVE_RANKING + '.pool',\r\n                DataProvider.EVENT_ADD_DESC + '.pool'], null);\r\n        }\r\n        this.data = data;\r\n        this.entries = data.getColumns().concat(this.options.additionalDesc).map(function (d) { return new PoolEntry(d); });\r\n        data.on(DataProvider.EVENT_ADD_DESC + '.pool', function (desc) {\r\n            _this.entries.push(new PoolEntry(desc));\r\n            _this.update();\r\n        });\r\n        if (this.options.hideUsed) {\r\n            var that_1 = this;\r\n            data.on([DataProvider.EVENT_ADD_COLUMN + '.pool', DataProvider.EVENT_REMOVE_COLUMN + '.pool'], function (col) {\r\n                var desc = col.desc, change = this.type === 'addColumn' ? 1 : -1;\r\n                that_1.entries.some(function (entry) {\r\n                    if (entry.desc !== desc) {\r\n                        return false;\r\n                    }\r\n                    entry.used += change;\r\n                    return true;\r\n                });\r\n                that_1.update();\r\n            });\r\n            data.on([DataProvider.EVENT_ADD_RANKING + '.pool', DataProvider.EVENT_REMOVE_RANKING + '.pool'], function (ranking) {\r\n                var descs = ranking.flatColumns.map(function (d) { return d.desc; }), change = this.type === 'addRanking' ? 1 : -1;\r\n                that_1.entries.some(function (entry) {\r\n                    if (descs.indexOf(entry.desc) < 0) {\r\n                        return false;\r\n                    }\r\n                    entry.used += change;\r\n                    return true;\r\n                });\r\n                that_1.update();\r\n            });\r\n            data.getRankings().forEach(function (ranking) {\r\n                var descs = ranking.flatColumns.map(function (d) { return d.desc; }), change = +1;\r\n                that_1.entries.some(function (entry) {\r\n                    if (descs.indexOf(entry.desc) < 0) {\r\n                        return false;\r\n                    }\r\n                    entry.used += change;\r\n                });\r\n            });\r\n        }\r\n    };\r\n    PoolRenderer.prototype.remove = function () {\r\n        this.$node.remove();\r\n        if (this.data) {\r\n            this.data.on([DataProvider.EVENT_ADD_COLUMN + '.pool', DataProvider.EVENT_REMOVE_COLUMN + '.pool', 'addRanking.pool', 'removeRanking.pool', 'addDesc.pool'], null);\r\n        }\r\n    };\r\n    PoolRenderer.prototype.update = function () {\r\n        var _this = this;\r\n        var data = this.data;\r\n        var descToShow = this.entries.filter(function (e) { return e.used === 0; }).map(function (d) { return d.desc; });\r\n        var $headers = this.$node.selectAll('div.header').data(descToShow);\r\n        var $headers_enter = $headers.enter().append('div').attr({\r\n            'class': 'header',\r\n            'draggable': true\r\n        }).on('dragstart', function (d) {\r\n            var e = d3event;\r\n            e.dataTransfer.effectAllowed = 'copyMove'; //none, copy, copyLink, copyMove, link, linkMove, move, all\r\n            e.dataTransfer.setData('text/plain', d.label);\r\n            e.dataTransfer.setData('application/caleydo-lineup-column', JSON.stringify(data.toDescRef(d)));\r\n            if (isNumberColumn(d)) {\r\n                e.dataTransfer.setData('application/caleydo-lineup-column-number', JSON.stringify(data.toDescRef(d)));\r\n            }\r\n        }).style({\r\n            width: this.options.elemWidth + 'px',\r\n            height: this.options.elemHeight + 'px'\r\n        });\r\n        if (this.options.addAtEndOnClick) {\r\n            $headers_enter.on('click', function (d) {\r\n                _this.data.push(_this.data.getLastRanking(), d);\r\n            });\r\n        }\r\n        $headers_enter.append('span').classed('label', true).text(function (d) { return d.label; });\r\n        $headers.attr('class', function (d) { return \"header \" + (d.cssClass || '') + \" \" + d.type; });\r\n        $headers.style({\r\n            'transform': function (d, i) {\r\n                var pos = _this.layout(i);\r\n                return 'translate(' + pos.x + 'px,' + pos.y + 'px)';\r\n            },\r\n            'background-color': function (d) {\r\n                var s = d;\r\n                return s.cssClass ? null : s.color || Column.DEFAULT_COLOR;\r\n            }\r\n        });\r\n        $headers.attr({\r\n            title: function (d) { return toFullTooltip(d); }\r\n        });\r\n        $headers.select('span').text(function (d) { return d.label; });\r\n        $headers.exit().remove();\r\n        //compute the size of this node\r\n        switch (this.options.layout) {\r\n            case 'horizontal':\r\n                this.$node.style({\r\n                    width: (this.options.elemWidth * descToShow.length) + 'px',\r\n                    height: (this.options.elemHeight) + 'px'\r\n                });\r\n                break;\r\n            case 'grid':\r\n                var perRow = round(this.options.width / this.options.elemWidth, 0);\r\n                this.$node.style({\r\n                    width: perRow * this.options.elemWidth + 'px',\r\n                    height: Math.ceil(descToShow.length / perRow) * this.options.elemHeight + 'px'\r\n                });\r\n                break;\r\n            //case 'vertical':\r\n            default:\r\n                this.$node.style({\r\n                    width: (this.options.elemWidth) + 'px',\r\n                    height: (this.options.elemHeight * descToShow.length) + 'px'\r\n                });\r\n                break;\r\n        }\r\n    };\r\n    PoolRenderer.prototype.layout = function (i) {\r\n        switch (this.options.layout) {\r\n            case 'horizontal':\r\n                return { x: i * this.options.elemWidth, y: 0 };\r\n            case 'grid':\r\n                var perRow = round(this.options.width / this.options.elemWidth, 0);\r\n                return { x: (i % perRow) * this.options.elemWidth, y: Math.floor(i / perRow) * this.options.elemHeight };\r\n            //case 'vertical':\r\n            default:\r\n                return { x: 0, y: i * this.options.elemHeight };\r\n        }\r\n    };\r\n    return PoolRenderer;\r\n}());\r\nexport default PoolRenderer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui/PoolRenderer.ts\n// module id = 39\n// module chunks = 0 1","/**\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport { max as d3max } from 'd3';\r\nimport { createSVG } from '../renderer';\r\nimport ADOMBodyRenderer from './ADOMBodyRenderer';\r\nvar domMappings = {\r\n    svg: {\r\n        root: 'svg',\r\n        g: 'g',\r\n        setSize: function (n, width, height) {\r\n            n.setAttribute('width', String(width));\r\n            n.setAttribute('height', String(height));\r\n        },\r\n        bg: 'rect',\r\n        updateBG: function (sel, callback) {\r\n            sel.attr({\r\n                height: function (d, i, j) { return callback(d, i, j)[1]; },\r\n                width: function (d, i, j) { return callback(d, i, j)[0]; }\r\n            });\r\n        },\r\n        meanLine: 'line',\r\n        updateMeanLine: function ($mean, x, height) {\r\n            $mean.attr('x1', 1 + x) //TODO don't know why +1 such that header and body lines are aligned\r\n                .attr('x2', 1 + x)\r\n                .attr('y2', height);\r\n        },\r\n        slopes: 'g',\r\n        updateSlopes: function ($slopes, width, height, callback) {\r\n            $slopes.attr('transform', function (d, i) { return \"translate(\" + callback(d, i) + \",0)\"; });\r\n        },\r\n        creator: createSVG,\r\n        translate: function (n, x, y) { return n.setAttribute('transform', \"translate(\" + x + \",\" + y + \")\"); },\r\n        transform: function (sel, callback) {\r\n            sel.attr('transform', function (d, i) {\r\n                var r = callback(d, i);\r\n                return \"translate(\" + r[0] + \",\" + r[1] + \")\";\r\n            });\r\n        }\r\n    }\r\n};\r\nvar SVGBodyRenderer = (function (_super) {\r\n    __extends(SVGBodyRenderer, _super);\r\n    function SVGBodyRenderer(data, parent, slicer, options) {\r\n        if (options === void 0) { options = {}; }\r\n        return _super.call(this, data, parent, slicer, domMappings.svg, options) || this;\r\n    }\r\n    SVGBodyRenderer.prototype.updateClipPathsImpl = function (r, context, height) {\r\n        var $base = this.$node.select('defs.body');\r\n        if ($base.empty()) {\r\n            $base = this.$node.append('defs').classed('body', true);\r\n        }\r\n        //generate clip paths for the text columns to avoid text overflow\r\n        //see http://stackoverflow.com/questions/L742812/cannot-select-svg-foreignobject-element-in-d3\r\n        //there is a bug in webkit which present camelCase selectors\r\n        var textClipPath = $base.selectAll(function () {\r\n            return this.getElementsByTagName('clipPath');\r\n        }).data(r, function (d) { return d.id; });\r\n        textClipPath.enter().append('clipPath')\r\n            .attr('id', function (d) { return \"cp\" + context.idPrefix + \"clipCol\" + d.id; })\r\n            .append('rect').attr('y', 0);\r\n        textClipPath.exit().remove();\r\n        textClipPath.select('rect')\r\n            .attr({\r\n            x: 0,\r\n            width: function (d) { return Math.max(d.getWidth() - 5, 0); },\r\n            height: height\r\n        });\r\n    };\r\n    SVGBodyRenderer.prototype.updateClipPaths = function (data, context, height) {\r\n        var _this = this;\r\n        var shifts = [], offset = 0;\r\n        data.forEach(function (r) {\r\n            var w = r.ranking.flatten(shifts, offset, 2, _this.options.columnPadding);\r\n            offset += w + _this.options.slopeWidth;\r\n        });\r\n        this.updateClipPathsImpl(shifts.map(function (s) { return s.col; }), context, height);\r\n        {\r\n            var $elem = this.$node.select(\"clipPath#c\" + context.idPrefix + \"Freeze\");\r\n            if ($elem.empty()) {\r\n                $elem = this.$node.append('clipPath').attr('id', \"c\" + context.idPrefix + \"Freeze\").append('rect').attr({\r\n                    y: 0,\r\n                    width: 20000,\r\n                    height: height\r\n                });\r\n            }\r\n            var maxFrozen = data.length === 0 || data[0].frozen.length === 0 ? 0 : d3max(data[0].frozen, function (f) { return f.shift + f.column.getWidth(); });\r\n            $elem.select('rect').attr({\r\n                x: maxFrozen,\r\n                height: height,\r\n                transform: \"translate(\" + this.currentFreezeLeft + \",0)\"\r\n            });\r\n        }\r\n    };\r\n    return SVGBodyRenderer;\r\n}(ADOMBodyRenderer));\r\nexport default SVGBodyRenderer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ui/SVGBodyRenderer.ts\n// module id = 40\n// module chunks = 0 1","/**\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\nexport { default as DataProvider, IDataProviderOptions, IExportOptions } from './ADataProvider';\r\nexport { default as LocalDataProvider, ILocalDataProviderOptions } from './LocalDataProvider';\r\nexport { default as RemoteDataProvider, IServerData } from './RemoteDataProvider';\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/provider/index.ts\n// module id = 41\n// module chunks = 0","/**\r\n * Created by sam on 04.11.2016.\r\n */\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nimport { merge } from '../utils';\r\nimport ACommonDataProvider from './ACommonDataProvider';\r\n/**\r\n * a remote implementation of the data provider\r\n */\r\nvar RemoteDataProvider = (function (_super) {\r\n    __extends(RemoteDataProvider, _super);\r\n    function RemoteDataProvider(server, columns, options) {\r\n        if (columns === void 0) { columns = []; }\r\n        if (options === void 0) { options = {}; }\r\n        var _this = _super.call(this, columns, options) || this;\r\n        _this.server = server;\r\n        _this.options = {\r\n            maxCacheSize: 1000\r\n        };\r\n        _this.cache = new Map();\r\n        merge(_this.options, options);\r\n        return _this;\r\n    }\r\n    RemoteDataProvider.prototype.sortImpl = function (ranking) {\r\n        //generate a description of what to sort\r\n        var desc = ranking.toSortingDesc(function (desc) { return desc.column; });\r\n        //use the server side to sort\r\n        return this.server.sort(desc);\r\n    };\r\n    RemoteDataProvider.prototype.loadFromServer = function (indices) {\r\n        return this.server.view(indices).then(function (view) {\r\n            //enhance with the data index\r\n            return view.map(function (v, i) {\r\n                var dataIndex = indices[i];\r\n                return { v: v, dataIndex: dataIndex };\r\n            });\r\n        });\r\n    };\r\n    RemoteDataProvider.prototype.view = function (indices) {\r\n        if (indices.length === 0) {\r\n            return Promise.resolve([]);\r\n        }\r\n        var base = this.fetch([indices])[0];\r\n        return Promise.all(base).then(function (rows) { return rows.map(function (d) { return d.v; }); });\r\n    };\r\n    RemoteDataProvider.prototype.computeMissing = function (orders) {\r\n        var union = new Set();\r\n        var union_add = union.add.bind(union);\r\n        orders.forEach(function (order) { return order.forEach(union_add); });\r\n        // removed cached\r\n        this.cache.forEach(function (v, k) { return union.delete(k); });\r\n        if ((this.cache.size + union.size) > this.options.maxCacheSize) {\r\n        }\r\n        // const maxLength = Math.max(...orders.map((o) => o.length));\r\n        var r = [];\r\n        union.forEach(r.push.bind(r));\r\n        return r;\r\n    };\r\n    RemoteDataProvider.prototype.loadInCache = function (missing) {\r\n        var _this = this;\r\n        if (missing.length === 0) {\r\n            return;\r\n        }\r\n        // load data and map to rows;\r\n        var v = this.loadFromServer(missing);\r\n        missing.forEach(function (m, i) {\r\n            var dataIndex = missing[i];\r\n            _this.cache.set(dataIndex, v.then(function (loaded) { return ({ v: loaded[i], dataIndex: dataIndex }); }));\r\n        });\r\n    };\r\n    RemoteDataProvider.prototype.fetch = function (orders) {\r\n        var _this = this;\r\n        var toLoad = this.computeMissing(orders);\r\n        this.loadInCache(toLoad);\r\n        return orders.map(function (order) {\r\n            return order.map(function (dataIndex) { return _this.cache.get(dataIndex); });\r\n        });\r\n    };\r\n    RemoteDataProvider.prototype.mappingSample = function (col) {\r\n        return this.server.mappingSample(col.desc.column);\r\n    };\r\n    RemoteDataProvider.prototype.searchAndJump = function (search, col) {\r\n        var _this = this;\r\n        this.server.search(search, col.desc.column).then(function (indices) {\r\n            _this.jumpToNearest(indices);\r\n        });\r\n    };\r\n    RemoteDataProvider.prototype.stats = function (indices) {\r\n        return this.server.stats(indices);\r\n    };\r\n    return RemoteDataProvider;\r\n}(ACommonDataProvider));\r\nexport default RemoteDataProvider;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/provider/RemoteDataProvider.ts\n// module id = 43\n// module chunks = 0","/**\r\n * main module of LineUp.js containing the main class and exposes all other modules\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\nimport './style.scss';\r\nimport * as model_ from './model';\r\nimport * as provider_ from './provider';\r\nimport * as renderer_ from './renderer';\r\nimport * as ui_ from './ui';\r\nimport * as utils_ from './utils';\r\nimport * as ui_dialogs_ from './ui_dialogs';\r\nimport LineUp from './lineup';\r\nexport { deriveColors } from './lineup';\r\n/**\r\n * access to the model module\r\n */\r\nexport var model = model_;\r\n/**\r\n * access to the provider module\r\n */\r\nexport var provider = provider_;\r\n/**\r\n * access to the renderer module\r\n */\r\nexport var renderer = renderer_;\r\n/**\r\n * access to the ui module\r\n */\r\nexport var ui = ui_;\r\n/**\r\n * access to the utils module\r\n */\r\nexport var utils = utils_;\r\n/**\r\n * access to the ui_dialogs module\r\n */\r\nexport var ui_dialogs = ui_dialogs_;\r\n/**\r\n * creates a local storage provider\r\n * @param data\r\n * @param columns\r\n * @param options\r\n * @returns {LocalDataProvider}\r\n */\r\nexport function createLocalStorage(data, columns, options) {\r\n    if (options === void 0) { options = {}; }\r\n    return new provider_.LocalDataProvider(data, columns, options);\r\n}\r\nexport function create(data, container, config) {\r\n    if (config === void 0) { config = {}; }\r\n    return new LineUp(container, data, config);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.ts\n// module id = 44\n// module chunks = 0"],"sourceRoot":""}